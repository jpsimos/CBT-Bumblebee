
CANBusTriple.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006a  00800100  00006a06  00006a9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006a06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000325  0080016a  0080016a  00006b04  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00006b04  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006b90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000858  00000000  00000000  00006bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001659f  00000000  00000000  00007428  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003aff  00000000  00000000  0001d9c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005909  00000000  00000000  000214c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001f18  00000000  00000000  00026dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004d87  00000000  00000000  00028ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b137  00000000  00000000  0002da6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009a8  00000000  00000000  00038ba6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__ctors_end>
       4:	0c 94 61 25 	jmp	0x4ac2	; 0x4ac2 <__vector_1>
       8:	0c 94 88 25 	jmp	0x4b10	; 0x4b10 <__vector_2>
       c:	0c 94 af 25 	jmp	0x4b5e	; 0x4b5e <__vector_3>
      10:	0c 94 d6 25 	jmp	0x4bac	; 0x4bac <__vector_4>
      14:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      18:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      1c:	0c 94 fd 25 	jmp	0x4bfa	; 0x4bfa <__vector_7>
      20:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      24:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      28:	0c 94 52 24 	jmp	0x48a4	; 0x48a4 <__vector_10>
      2c:	0c 94 e1 22 	jmp	0x45c2	; 0x45c2 <__vector_11>
      30:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      34:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      38:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      3c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      40:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      44:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      48:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      4c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      50:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      54:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      58:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      5c:	0c 94 24 26 	jmp	0x4c48	; 0x4c48 <__vector_23>
      60:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      64:	0c 94 e3 1f 	jmp	0x3fc6	; 0x3fc6 <__vector_25>
      68:	0c 94 15 20 	jmp	0x402a	; 0x402a <__vector_26>
      6c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      70:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      74:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      78:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      7c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      80:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      84:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      88:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      8c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      90:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      94:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      98:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      9c:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a0:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a4:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      a8:	0c 94 90 02 	jmp	0x520	; 0x520 <__bad_interrupt>
      ac:	54 0f       	add	r21, r20
      ae:	68 0f       	add	r22, r24
      b0:	86 0f       	add	r24, r22
      b2:	a9 0f       	add	r26, r25
      b4:	b0 0f       	add	r27, r16
      b6:	d3 0f       	add	r29, r19
      b8:	f6 0f       	add	r31, r22
      ba:	1e 11       	cpse	r17, r14
      bc:	19 10       	cpse	r1, r9
      be:	37 11       	cpse	r19, r7
      c0:	3c 10       	cpse	r3, r12
      c2:	71 10       	cpse	r7, r1
      c4:	52 10       	cpse	r5, r2
      c6:	94 10       	cpse	r9, r4
      c8:	b7 10       	cpse	r11, r7
      ca:	d3 10       	cpse	r13, r3
      cc:	fa 10       	cpse	r15, r10
      ce:	49 27       	eor	r20, r25
      d0:	4c 27       	eor	r20, r28
      d2:	3b 27       	eor	r19, r27
      d4:	3f 27       	eor	r19, r31
      d6:	45 27       	eor	r20, r21
      d8:	6d 27       	eor	r22, r29
      da:	6d 27       	eor	r22, r29
      dc:	6d 27       	eor	r22, r29
      de:	50 27       	eor	r21, r16
      e0:	54 27       	eor	r21, r20
      e2:	58 27       	eor	r21, r24
      e4:	5e 27       	eor	r21, r30
      e6:	62 27       	eor	r22, r18
      e8:	6d 27       	eor	r22, r29
      ea:	68 27       	eor	r22, r24

000000ec <__trampolines_end>:
      ec:	00 40       	sbci	r16, 0x00	; 0
      ee:	7a 10       	cpse	r7, r10
      f0:	f3 5a       	subi	r31, 0xA3	; 163
      f2:	00 a0       	ldd	r0, Z+32	; 0x20
      f4:	72 4e       	sbci	r23, 0xE2	; 226
      f6:	18 09       	sbc	r17, r8
      f8:	00 10       	cpse	r0, r0
      fa:	a5 d4       	rcall	.+2378   	; 0xa46 <_Z22processBrakesAndCruiseR7Message+0x2>
      fc:	e8 00       	.word	0x00e8	; ????
      fe:	00 e8       	ldi	r16, 0x80	; 128
     100:	76 48       	sbci	r23, 0x86	; 134
     102:	17 00       	.word	0x0017	; ????
     104:	00 e4       	ldi	r16, 0x40	; 64
     106:	0b 54       	subi	r16, 0x4B	; 75
     108:	02 00       	.word	0x0002	; ????
     10a:	00 ca       	rjmp	.-3072   	; 0xfffff50c <__eeprom_end+0xff7ef50c>
     10c:	9a 3b       	cpi	r25, 0xBA	; 186
     10e:	00 00       	nop
     110:	00 e1       	ldi	r16, 0x10	; 16
     112:	f5 05       	cpc	r31, r5
     114:	00 00       	nop
     116:	80 96       	adiw	r24, 0x20	; 32
     118:	98 00       	.word	0x0098	; ????
     11a:	00 00       	nop
     11c:	40 42       	sbci	r20, 0x20	; 32
     11e:	0f 00       	.word	0x000f	; ????
     120:	00 00       	nop
     122:	a0 86       	std	Z+8, r10	; 0x08
     124:	01 00       	.word	0x0001	; ????
     126:	00 00       	nop
     128:	10 27       	eor	r17, r16
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	e8 03       	fmulsu	r22, r16
     130:	00 00       	nop
     132:	00 00       	nop
     134:	64 00       	.word	0x0064	; ????
     136:	00 00       	nop
     138:	00 00       	nop
     13a:	0a 00       	.word	0x000a	; ????
     13c:	00 00       	nop
     13e:	00 00       	nop
     140:	01 00       	.word	0x0001	; ????
     142:	00 00       	nop
     144:	00 00       	nop
     146:	2c 76       	andi	r18, 0x6C	; 108
     148:	d8 88       	ldd	r13, Y+16	; 0x10
     14a:	dc 67       	ori	r29, 0x7C	; 124
     14c:	4f 08       	sbc	r4, r15
     14e:	23 df       	rcall	.-442    	; 0xffffff96 <__eeprom_end+0xff7eff96>
     150:	c1 df       	rcall	.-126    	; 0xd4 <__SREG__+0x95>
     152:	ae 59       	subi	r26, 0x9E	; 158
     154:	e1 b1       	in	r30, 0x01	; 1
     156:	b7 96       	adiw	r30, 0x27	; 39
     158:	e5 e3       	ldi	r30, 0x35	; 53
     15a:	e4 53       	subi	r30, 0x34	; 52
     15c:	c6 3a       	cpi	r28, 0xA6	; 166
     15e:	e6 51       	subi	r30, 0x16	; 22
     160:	99 76       	andi	r25, 0x69	; 105
     162:	96 e8       	ldi	r25, 0x86	; 134
     164:	e6 c2       	rjmp	.+1484   	; 0x732 <_Z11processTimeR7Message+0x9e>
     166:	84 26       	eor	r8, r20
     168:	eb 89       	ldd	r30, Y+19	; 0x13
     16a:	8c 9b       	sbis	0x11, 4	; 17
     16c:	62 ed       	ldi	r22, 0xD2	; 210
     16e:	40 7c       	andi	r20, 0xC0	; 192
     170:	6f fc       	.word	0xfc6f	; ????
     172:	ef bc       	out	0x2f, r14	; 47
     174:	9c 9f       	mul	r25, r28
     176:	40 f2       	brcs	.-112    	; 0x108 <__trampolines_end+0x1c>
     178:	ba a5       	ldd	r27, Y+42	; 0x2a
     17a:	6f a5       	ldd	r22, Y+47	; 0x2f
     17c:	f4 90       	lpm	r15, Z
     17e:	05 5a       	subi	r16, 0xA5	; 165
     180:	2a f7       	brpl	.-54     	; 0x14c <__trampolines_end+0x60>
     182:	5c 93       	st	X, r21
     184:	6b 6c       	ori	r22, 0xCB	; 203
     186:	f9 67       	ori	r31, 0x79	; 121
     188:	6d c1       	rjmp	.+730    	; 0x464 <digital_pin_to_bit_mask_PGM>
     18a:	1b fc       	.word	0xfc1b	; ????
     18c:	e0 e4       	ldi	r30, 0x40	; 64
     18e:	0d 47       	sbci	r16, 0x7D	; 125
     190:	fe f5       	brtc	.+126    	; 0x210 <_ZZN7Display13getGearStringEvE3__c_1+0x6>
     192:	20 e6       	ldi	r18, 0x60	; 96
     194:	b5 00       	.word	0x00b5	; ????
     196:	d0 ed       	ldi	r29, 0xD0	; 208
     198:	90 2e       	mov	r9, r16
     19a:	03 00       	.word	0x0003	; ????
     19c:	94 35       	cpi	r25, 0x54	; 84
     19e:	77 05       	cpc	r23, r7
     1a0:	00 80       	ld	r0, Z
     1a2:	84 1e       	adc	r8, r20
     1a4:	08 00       	.word	0x0008	; ????
     1a6:	00 20       	and	r0, r0
     1a8:	4e 0a       	sbc	r4, r30
     1aa:	00 00       	nop
     1ac:	00 c8       	rjmp	.-4096   	; 0xfffff1ae <__eeprom_end+0xff7ef1ae>
     1ae:	0c 33       	cpi	r16, 0x3C	; 60
     1b0:	33 33       	cpi	r19, 0x33	; 51
     1b2:	33 0f       	add	r19, r19
     1b4:	98 6e       	ori	r25, 0xE8	; 232
     1b6:	12 83       	std	Z+2, r17	; 0x02
     1b8:	11 41       	sbci	r17, 0x11	; 17
     1ba:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1bc:	21 14       	cp	r2, r1
     1be:	89 3b       	cpi	r24, 0xB9	; 185
     1c0:	e6 55       	subi	r30, 0x56	; 86
     1c2:	16 cf       	rjmp	.-468    	; 0xfffffff0 <__eeprom_end+0xff7efff0>
     1c4:	fe e6       	ldi	r31, 0x6E	; 110
     1c6:	db 18       	sub	r13, r11
     1c8:	d1 84       	ldd	r13, Z+9	; 0x09
     1ca:	4b 38       	cpi	r20, 0x8B	; 139
     1cc:	1b f7       	brvc	.-58     	; 0x194 <__trampolines_end+0xa8>
     1ce:	7c 1d       	adc	r23, r12
     1d0:	90 1d       	adc	r25, r0
     1d2:	a4 bb       	out	0x14, r26	; 20
     1d4:	e4 24       	eor	r14, r4
     1d6:	20 32       	cpi	r18, 0x20	; 32
     1d8:	84 72       	andi	r24, 0x24	; 36
     1da:	5e 22       	and	r5, r30
     1dc:	81 00       	.word	0x0081	; ????
     1de:	c9 f1       	breq	.+114    	; 0x252 <_ZZN7Display23handleTemporaryTriggersEvE3__c_1+0xd>
     1e0:	24 ec       	ldi	r18, 0xC4	; 196
     1e2:	a1 e5       	ldi	r26, 0x51	; 81
     1e4:	3d 27       	eor	r19, r29

000001e6 <_ZZN7Display17autoUpdateDisplayEvE3__c>:
     1e6:	25 2d 31 37 73 0a 25 73 00                          %-17s.%s.

000001ef <_ZZN7Display13getGearStringEvE3__c_5>:
     1ef:	25 73 46 4f 55 52 00                                %sFOUR.

000001f6 <_ZZN7Display13getGearStringEvE3__c_4>:
     1f6:	25 73 54 48 52 45 45 00                             %sTHREE.

000001fe <_ZZN7Display13getGearStringEvE3__c_3>:
     1fe:	25 73 54 57 4f 00                                   %sTWO.

00000204 <_ZZN7Display13getGearStringEvE3__c_2>:
     204:	25 73 4f 4e 45 00                                   %sONE.

0000020a <_ZZN7Display13getGearStringEvE3__c_1>:
     20a:	25 73 4e 45 55 54 52 41 4c 00                       %sNEUTRAL.

00000214 <_ZZN7Display13getGearStringEvE3__c_0>:
     214:	25 73 52 45 56 45 52 53 45 00                       %sREVERSE.

0000021e <_ZZN7Display13getGearStringEvE3__c>:
     21e:	25 73 50 41 52 4b 00                                %sPARK.

00000225 <_ZZN7Display23handleTemporaryTriggersEvE3__c_2>:
     225:	20 20 20 20 57 61 72 6e 69 6e 67 20 20 20 20 20         Warning     
     235:	20 0a 20 20 53 70 65 65 64 20 3e 3d 20 37 30 00      .  Speed >= 70.

00000245 <_ZZN7Display23handleTemporaryTriggersEvE3__c_1>:
     245:	58 4d 20 43 68 61 6e 6e 65 6c 3a 20 25 75 00        XM Channel: %u.

00000254 <_ZZN7Display23handleTemporaryTriggersEvE3__c_0>:
     254:	46 61 6e 3a 20 25 75 00                             Fan: %u.

0000025c <_ZZN7Display23handleTemporaryTriggersEvE3__c>:
     25c:	44 69 6d 6d 65 72 3a 20 25 33 75 25 25 00           Dimmer: %3u%%.

0000026a <_ZZN7Display13writeToBufferEPcRKhRmE3__c_24>:
     26a:	9f 9e 9d 9c 9b 99 99 99 99 99 99 99 99 99 99 99     ................
     27a:	99 00                                               ..

0000027c <_ZZN7Display13writeToBufferEPcRKhRmE3__c_23>:
     27c:	25 30 32 75 3a 25 30 32 75 3a 25 30 32 75 20 25     %02u:%02u:%02u %
     28c:	73 00                                               s.

0000028e <_ZZN7Display13writeToBufferEPcRKhRmE3__c_22>:
     28e:	25 33 75 20 66 74 20 25 33 75 ba 00                 %3u ft %3u..

0000029a <_ZZN7Display13writeToBufferEPcRKhRmE3__c_21>:
     29a:	52 61 6e 67 65 3a 20 25 73 20 6d 69 00              Range: %s mi.

000002a7 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_20>:
     2a7:	41 69 72 3a 20 25 73 20 6c 62 73 00                 Air: %s lbs.

000002b3 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_19>:
     2b3:	49 6e 73 74 20 4d 50 47 3a 20 25 73 00              Inst MPG: %s.

000002c0 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_18>:
     2c0:	46 75 65 6c 3a 20 25 73 20 67 61 6c 00              Fuel: %s gal.

000002cd <_ZZN7Display13writeToBufferEPcRKhRmE3__c_17>:
     2cd:	54 68 72 6f 74 74 6c 65 3a 20 25 73 25 25 00        Throttle: %s%%.

000002dc <_ZZN7Display13writeToBufferEPcRKhRmE3__c_16>:
     2dc:	50 65 64 61 6c 3a 20 25 73 25 25 00                 Pedal: %s%%.

000002e8 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_15>:
     2e8:	48 50 3a 20 25 73 00                                HP: %s.

000002ef <_ZZN7Display13writeToBufferEPcRKhRmE3__c_14>:
     2ef:	57 68 65 65 6c 20 52 50 4d 3a 20 25 73 00           Wheel RPM: %s.

000002fd <_ZZN7Display13writeToBufferEPcRKhRmE3__c_13>:
     2fd:	4d 50 48 3a 20 25 75 00                             MPH: %u.

00000305 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_12>:
     305:	49 6e 74 61 6b 65 3a 20 25 73 ba 46 00              Intake: %s.F.

00000312 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_11>:
     312:	56 61 63 75 75 6d 3a 20 25 33 75 20 6b 50 61 00     Vacuum: %3u kPa.

00000322 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_10>:
     322:	44 65 63 20 25 75 2c 20 32 30 25 75 00              Dec %u, 20%u.

0000032f <_ZZN7Display13writeToBufferEPcRKhRmE3__c_9>:
     32f:	4e 6f 76 20 25 75 2c 20 32 30 25 75 00              Nov %u, 20%u.

0000033c <_ZZN7Display13writeToBufferEPcRKhRmE3__c_8>:
     33c:	4f 63 74 20 25 75 2c 20 32 30 25 75 00              Oct %u, 20%u.

00000349 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_7>:
     349:	53 65 70 74 20 25 75 2c 20 32 30 25 75 00           Sept %u, 20%u.

00000357 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_6>:
     357:	41 75 67 20 25 75 2c 20 32 30 25 75 00              Aug %u, 20%u.

00000364 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_5>:
     364:	4a 75 6c 20 25 75 2c 20 32 30 25 75 00              Jul %u, 20%u.

00000371 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_4>:
     371:	4a 75 6e 20 25 75 2c 20 32 30 25 75 00              Jun %u, 20%u.

0000037e <_ZZN7Display13writeToBufferEPcRKhRmE3__c_3>:
     37e:	4d 61 79 20 25 75 2c 20 32 30 25 75 00              May %u, 20%u.

0000038b <_ZZN7Display13writeToBufferEPcRKhRmE3__c_2>:
     38b:	41 70 72 20 25 75 2c 20 32 30 25 75 00              Apr %u, 20%u.

00000398 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_1>:
     398:	4d 61 72 20 25 75 2c 20 32 30 25 75 00              Mar %u, 20%u.

000003a5 <_ZZN7Display13writeToBufferEPcRKhRmE3__c_0>:
     3a5:	46 65 62 20 25 75 2c 20 32 30 25 75 00              Feb %u, 20%u.

000003b2 <_ZZN7Display13writeToBufferEPcRKhRmE3__c>:
     3b2:	4a 61 6e 20 25 75 2c 20 32 30 25 75 00              Jan %u, 20%u.

000003bf <_cdcInterface>:
     3bf:	08 0b 00 02 02 02 01 00 09 04 00 00 01 02 02 00     ................
     3cf:	00 05 24 00 10 01 05 24 01 01 01 04 24 02 06 05     ..$....$....$...
     3df:	24 06 00 01 07 05 81 03 10 00 40 09 04 01 00 02     $.........@.....
     3ef:	0a 00 00 00 07 05 02 02 40 00 00 07 05 83 02 40     ........@......@
	...

00000401 <USB_DeviceDescriptorB>:
     401:	12 01 00 02 ef 02 01 40 41 23 36 80 00 01 01 02     .......@A#6.....
     411:	03 01                                               ..

00000413 <USB_DeviceDescriptor>:
     413:	12 01 00 02 00 00 00 40 41 23 36 80 00 01 01 02     .......@A#6.....
     423:	03 01                                               ..

00000425 <STRING_MANUFACTURER>:
     425:	41 72 64 75 69 6e 6f 20 4c 4c 43 00                 Arduino LLC.

00000431 <STRING_PRODUCT>:
     431:	41 72 64 75 69 6e 6f 20 4c 65 6f 6e 61 72 64 6f     Arduino Leonardo
	...

00000442 <STRING_LANGUAGE>:
     442:	04 03 09 04                                         ....

00000446 <digital_pin_to_timer_PGM>:
     446:	00 00 00 02 00 09 0f 00 00 03 04 01 00 0c 00 00     ................
	...

00000464 <digital_pin_to_bit_mask_PGM>:
     464:	04 08 02 01 10 40 80 40 10 20 40 80 40 80 08 02     .....@.@. @.@...
     474:	04 01 80 40 20 10 02 01 10 80 10 20 40 40           ...@ ...... @@

00000482 <digital_pin_to_port_PGM>:
     482:	04 04 04 04 04 03 04 05 02 02 02 02 04 03 02 02     ................
     492:	02 02 06 06 06 06 06 06 04 04 02 02 02 04           ..............

000004a0 <port_to_input_PGM>:
     4a0:	00 00 00 00 23 00 26 00 29 00 2c 00 2f 00           ....#.&.).,./.

000004ae <port_to_output_PGM>:
     4ae:	00 00 00 00 25 00 28 00 2b 00 2e 00 31 00           ....%.(.+...1.

000004bc <port_to_mode_PGM>:
     4bc:	00 00 00 00 24 00 27 00 2a 00 2d 00 30 00           ....$.'.*.-.0.

000004ca <__ctors_start>:
     4ca:	e7 18       	sub	r14, r7
     4cc:	a3 1e       	adc	r10, r19
     4ce:	45 20       	and	r4, r5

000004d0 <__ctors_end>:
     4d0:	11 24       	eor	r1, r1
     4d2:	1f be       	out	0x3f, r1	; 63
     4d4:	cf ef       	ldi	r28, 0xFF	; 255
     4d6:	da e0       	ldi	r29, 0x0A	; 10
     4d8:	de bf       	out	0x3e, r29	; 62
     4da:	cd bf       	out	0x3d, r28	; 61

000004dc <__do_copy_data>:
     4dc:	11 e0       	ldi	r17, 0x01	; 1
     4de:	a0 e0       	ldi	r26, 0x00	; 0
     4e0:	b1 e0       	ldi	r27, 0x01	; 1
     4e2:	e6 e0       	ldi	r30, 0x06	; 6
     4e4:	fa e6       	ldi	r31, 0x6A	; 106
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__do_copy_data+0x10>
     4e8:	05 90       	lpm	r0, Z+
     4ea:	0d 92       	st	X+, r0
     4ec:	aa 36       	cpi	r26, 0x6A	; 106
     4ee:	b1 07       	cpc	r27, r17
     4f0:	d9 f7       	brne	.-10     	; 0x4e8 <__do_copy_data+0xc>

000004f2 <__do_clear_bss>:
     4f2:	24 e0       	ldi	r18, 0x04	; 4
     4f4:	aa e6       	ldi	r26, 0x6A	; 106
     4f6:	b1 e0       	ldi	r27, 0x01	; 1
     4f8:	01 c0       	rjmp	.+2      	; 0x4fc <.do_clear_bss_start>

000004fa <.do_clear_bss_loop>:
     4fa:	1d 92       	st	X+, r1

000004fc <.do_clear_bss_start>:
     4fc:	af 38       	cpi	r26, 0x8F	; 143
     4fe:	b2 07       	cpc	r27, r18
     500:	e1 f7       	brne	.-8      	; 0x4fa <.do_clear_bss_loop>

00000502 <__do_global_ctors>:
     502:	12 e0       	ldi	r17, 0x02	; 2
     504:	c8 e6       	ldi	r28, 0x68	; 104
     506:	d2 e0       	ldi	r29, 0x02	; 2
     508:	04 c0       	rjmp	.+8      	; 0x512 <__do_global_ctors+0x10>
     50a:	21 97       	sbiw	r28, 0x01	; 1
     50c:	fe 01       	movw	r30, r28
     50e:	0e 94 92 2f 	call	0x5f24	; 0x5f24 <__tablejump2__>
     512:	c5 36       	cpi	r28, 0x65	; 101
     514:	d1 07       	cpc	r29, r17
     516:	c9 f7       	brne	.-14     	; 0x50a <__do_global_ctors+0x8>
     518:	0e 94 73 20 	call	0x40e6	; 0x40e6 <main>
     51c:	0c 94 01 35 	jmp	0x6a02	; 0x6a02 <_exit>

00000520 <__bad_interrupt>:
     520:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000524 <_ZN6Sleepy15handleInterruptEv>:
	Serial.write(' ');
	for(byte i = 0; i < 8; i++){
		Serial.print(msg.frame_data[i], HEX);
		Serial.write(' ');
	}
	Serial.print("\r\n");
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	0c 94 41 25 	jmp	0x4a82	; 0x4a82 <detachInterrupt>

0000052a <_ZN12MessageQueue4pushERK7Message>:
     52a:	ef 92       	push	r14
     52c:	ff 92       	push	r15
     52e:	0f 93       	push	r16
     530:	1f 93       	push	r17
     532:	cf 93       	push	r28
     534:	df 93       	push	r29
     536:	cd b7       	in	r28, 0x3d	; 61
     538:	de b7       	in	r29, 0x3e	; 62
     53a:	60 97       	sbiw	r28, 0x10	; 16
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	fc 01       	movw	r30, r24
     548:	91 81       	ldd	r25, Z+1	; 0x01
     54a:	80 81       	ld	r24, Z
     54c:	98 17       	cp	r25, r24
     54e:	38 f5       	brcc	.+78     	; 0x59e <_ZN12MessageQueue4pushERK7Message+0x74>
     550:	a4 81       	ldd	r26, Z+4	; 0x04
     552:	b5 81       	ldd	r27, Z+5	; 0x05
     554:	10 97       	sbiw	r26, 0x00	; 0
     556:	19 f1       	breq	.+70     	; 0x59e <_ZN12MessageQueue4pushERK7Message+0x74>
     558:	8f 01       	movw	r16, r30
     55a:	83 81       	ldd	r24, Z+3	; 0x03
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	98 0f       	add	r25, r24
     560:	93 83       	std	Z+3, r25	; 0x03
     562:	7d 01       	movw	r14, r26
     564:	90 e1       	ldi	r25, 0x10	; 16
     566:	89 9f       	mul	r24, r25
     568:	e0 0c       	add	r14, r0
     56a:	f1 1c       	adc	r15, r1
     56c:	11 24       	eor	r1, r1
     56e:	ce 01       	movw	r24, r28
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	0e 94 5a 2e 	call	0x5cb4	; 0x5cb4 <_ZN7MessageC1ERKS_>
     576:	80 e1       	ldi	r24, 0x10	; 16
     578:	fe 01       	movw	r30, r28
     57a:	31 96       	adiw	r30, 0x01	; 1
     57c:	d7 01       	movw	r26, r14
     57e:	01 90       	ld	r0, Z+
     580:	0d 92       	st	X+, r0
     582:	8a 95       	dec	r24
     584:	e1 f7       	brne	.-8      	; 0x57e <_ZN12MessageQueue4pushERK7Message+0x54>
     586:	f8 01       	movw	r30, r16
     588:	93 81       	ldd	r25, Z+3	; 0x03
     58a:	80 81       	ld	r24, Z
     58c:	98 13       	cpse	r25, r24
     58e:	01 c0       	rjmp	.+2      	; 0x592 <_ZN12MessageQueue4pushERK7Message+0x68>
     590:	13 82       	std	Z+3, r1	; 0x03
     592:	f8 01       	movw	r30, r16
     594:	81 81       	ldd	r24, Z+1	; 0x01
     596:	8f 5f       	subi	r24, 0xFF	; 255
     598:	81 83       	std	Z+1, r24	; 0x01
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	01 c0       	rjmp	.+2      	; 0x5a0 <_ZN12MessageQueue4pushERK7Message+0x76>
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	60 96       	adiw	r28, 0x10	; 16
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	1f 91       	pop	r17
     5b2:	0f 91       	pop	r16
     5b4:	ff 90       	pop	r15
     5b6:	ef 90       	pop	r14
     5b8:	08 95       	ret

000005ba <_ZN12MessageQueue3popEv>:
     5ba:	0f 93       	push	r16
     5bc:	1f 93       	push	r17
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	8c 01       	movw	r16, r24
     5c4:	eb 01       	movw	r28, r22
     5c6:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
     5ca:	89 81       	ldd	r24, Y+1	; 0x01
     5cc:	88 23       	and	r24, r24
     5ce:	d9 f0       	breq	.+54     	; 0x606 <_ZN12MessageQueue3popEv+0x4c>
     5d0:	ec 81       	ldd	r30, Y+4	; 0x04
     5d2:	fd 81       	ldd	r31, Y+5	; 0x05
     5d4:	30 97       	sbiw	r30, 0x00	; 0
     5d6:	b9 f0       	breq	.+46     	; 0x606 <_ZN12MessageQueue3popEv+0x4c>
     5d8:	8a 81       	ldd	r24, Y+2	; 0x02
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	98 0f       	add	r25, r24
     5de:	9a 83       	std	Y+2, r25	; 0x02
     5e0:	90 e1       	ldi	r25, 0x10	; 16
     5e2:	89 9f       	mul	r24, r25
     5e4:	e0 0d       	add	r30, r0
     5e6:	f1 1d       	adc	r31, r1
     5e8:	11 24       	eor	r1, r1
     5ea:	80 e1       	ldi	r24, 0x10	; 16
     5ec:	d8 01       	movw	r26, r16
     5ee:	01 90       	ld	r0, Z+
     5f0:	0d 92       	st	X+, r0
     5f2:	8a 95       	dec	r24
     5f4:	e1 f7       	brne	.-8      	; 0x5ee <_ZN12MessageQueue3popEv+0x34>
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
     5f8:	81 50       	subi	r24, 0x01	; 1
     5fa:	89 83       	std	Y+1, r24	; 0x01
     5fc:	9a 81       	ldd	r25, Y+2	; 0x02
     5fe:	88 81       	ld	r24, Y
     600:	98 13       	cpse	r25, r24
     602:	01 c0       	rjmp	.+2      	; 0x606 <_ZN12MessageQueue3popEv+0x4c>
     604:	1a 82       	std	Y+2, r1	; 0x02
     606:	c8 01       	movw	r24, r16
     608:	df 91       	pop	r29
     60a:	cf 91       	pop	r28
     60c:	1f 91       	pop	r17
     60e:	0f 91       	pop	r16
     610:	08 95       	ret

00000612 <_ZN12MessageQueue4peekEv>:
     612:	0f 93       	push	r16
     614:	1f 93       	push	r17
     616:	cf 93       	push	r28
     618:	df 93       	push	r29
     61a:	ec 01       	movw	r28, r24
     61c:	8b 01       	movw	r16, r22
     61e:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
     622:	d8 01       	movw	r26, r16
     624:	11 96       	adiw	r26, 0x01	; 1
     626:	8c 91       	ld	r24, X
     628:	11 97       	sbiw	r26, 0x01	; 1
     62a:	88 23       	and	r24, r24
     62c:	99 f0       	breq	.+38     	; 0x654 <_ZN12MessageQueue4peekEv+0x42>
     62e:	14 96       	adiw	r26, 0x04	; 4
     630:	ed 91       	ld	r30, X+
     632:	fc 91       	ld	r31, X
     634:	15 97       	sbiw	r26, 0x05	; 5
     636:	30 97       	sbiw	r30, 0x00	; 0
     638:	69 f0       	breq	.+26     	; 0x654 <_ZN12MessageQueue4peekEv+0x42>
     63a:	12 96       	adiw	r26, 0x02	; 2
     63c:	8c 91       	ld	r24, X
     63e:	b0 e1       	ldi	r27, 0x10	; 16
     640:	8b 9f       	mul	r24, r27
     642:	e0 0d       	add	r30, r0
     644:	f1 1d       	adc	r31, r1
     646:	11 24       	eor	r1, r1
     648:	80 e1       	ldi	r24, 0x10	; 16
     64a:	de 01       	movw	r26, r28
     64c:	01 90       	ld	r0, Z+
     64e:	0d 92       	st	X+, r0
     650:	8a 95       	dec	r24
     652:	e1 f7       	brne	.-8      	; 0x64c <_ZN12MessageQueue4peekEv+0x3a>
     654:	ce 01       	movw	r24, r28
     656:	df 91       	pop	r29
     658:	cf 91       	pop	r28
     65a:	1f 91       	pop	r17
     65c:	0f 91       	pop	r16
     65e:	08 95       	ret

00000660 <_ZN12MessageQueue9peekClearEv>:
     660:	fc 01       	movw	r30, r24
     662:	91 81       	ldd	r25, Z+1	; 0x01
     664:	99 23       	and	r25, r25
     666:	49 f0       	breq	.+18     	; 0x67a <_ZN12MessageQueue9peekClearEv+0x1a>
     668:	82 81       	ldd	r24, Z+2	; 0x02
     66a:	8f 5f       	subi	r24, 0xFF	; 255
     66c:	82 83       	std	Z+2, r24	; 0x02
     66e:	91 50       	subi	r25, 0x01	; 1
     670:	91 83       	std	Z+1, r25	; 0x01
     672:	90 81       	ld	r25, Z
     674:	89 13       	cpse	r24, r25
     676:	01 c0       	rjmp	.+2      	; 0x67a <_ZN12MessageQueue9peekClearEv+0x1a>
     678:	12 82       	std	Z+2, r1	; 0x02
     67a:	08 95       	ret

0000067c <_Z10processKeyR7Message>:
     67c:	fc 01       	movw	r30, r24
     67e:	20 85       	ldd	r18, Z+8	; 0x08
     680:	21 11       	cpse	r18, r1
     682:	03 c0       	rjmp	.+6      	; 0x68a <_Z10processKeyR7Message+0xe>
     684:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <ignition>
     688:	08 95       	ret
     68a:	fc 01       	movw	r30, r24
     68c:	81 85       	ldd	r24, Z+9	; 0x09
     68e:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <ignition>
     692:	08 95       	ret

00000694 <_Z11processTimeR7Message>:
     694:	1f 93       	push	r17
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	fc 01       	movw	r30, r24
     69c:	12 85       	ldd	r17, Z+10	; 0x0a
     69e:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <day>
     6a2:	18 17       	cp	r17, r24
     6a4:	89 f0       	breq	.+34     	; 0x6c8 <_Z11processTimeR7Message+0x34>
     6a6:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     6aa:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     6ae:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     6b2:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     6b6:	90 62       	ori	r25, 0x20	; 32
     6b8:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     6bc:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     6c0:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     6c4:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     6c8:	80 85       	ldd	r24, Z+8	; 0x08
     6ca:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <year>
     6ce:	d1 85       	ldd	r29, Z+9	; 0x09
     6d0:	dd 30       	cpi	r29, 0x0D	; 13
     6d2:	08 f0       	brcs	.+2      	; 0x6d6 <_Z11processTimeR7Message+0x42>
     6d4:	dc e0       	ldi	r29, 0x0C	; 12
     6d6:	d0 93 15 02 	sts	0x0215, r29	; 0x800215 <month>
     6da:	10 93 14 02 	sts	0x0214, r17	; 0x800214 <day>
     6de:	c3 85       	ldd	r28, Z+11	; 0x0b
     6e0:	c6 95       	lsr	r28
     6e2:	c0 93 13 02 	sts	0x0213, r28	; 0x800213 <hour>
     6e6:	84 85       	ldd	r24, Z+12	; 0x0c
     6e8:	86 95       	lsr	r24
     6ea:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <minute>
     6ee:	85 85       	ldd	r24, Z+13	; 0x0d
     6f0:	86 95       	lsr	r24
     6f2:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <second>
     6f6:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <ampm>
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e7       	ldi	r20, 0x70	; 112
     700:	51 ec       	ldi	r21, 0xC1	; 193
     702:	60 91 19 02 	lds	r22, 0x0219	; 0x800219 <longitude>
     706:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <longitude+0x1>
     70a:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <longitude+0x2>
     70e:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <longitude+0x3>
     712:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     716:	0e 94 67 1d 	call	0x3ace	; 0x3ace <trunc>
     71a:	0e 94 14 1c 	call	0x3828	; 0x3828 <__fixunssfsi>
     71e:	6c 17       	cp	r22, r28
     720:	40 f0       	brcs	.+16     	; 0x732 <_Z11processTimeR7Message+0x9e>
     722:	c4 5f       	subi	r28, 0xF4	; 244
     724:	c6 1b       	sub	r28, r22
     726:	c0 93 13 02 	sts	0x0213, r28	; 0x800213 <hour>
     72a:	11 50       	subi	r17, 0x01	; 1
     72c:	10 93 14 02 	sts	0x0214, r17	; 0x800214 <day>
     730:	03 c0       	rjmp	.+6      	; 0x738 <_Z11processTimeR7Message+0xa4>
     732:	c6 1b       	sub	r28, r22
     734:	c0 93 13 02 	sts	0x0213, r28	; 0x800213 <hour>
     738:	d3 50       	subi	r29, 0x03	; 3
     73a:	d8 30       	cpi	r29, 0x08	; 8
     73c:	28 f4       	brcc	.+10     	; 0x748 <_Z11processTimeR7Message+0xb4>
     73e:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <hour>
     742:	8f 5f       	subi	r24, 0xFF	; 255
     744:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <hour>
     748:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <hour>
     74c:	8d 30       	cpi	r24, 0x0D	; 13
     74e:	30 f0       	brcs	.+12     	; 0x75c <_Z11processTimeR7Message+0xc8>
     750:	91 e0       	ldi	r25, 0x01	; 1
     752:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <ampm>
     756:	8c 50       	subi	r24, 0x0C	; 12
     758:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <hour>
     75c:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <hour>
     760:	91 e0       	ldi	r25, 0x01	; 1
     762:	81 11       	cpse	r24, r1
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	89 0f       	add	r24, r25
     768:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <hour>
     76c:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <day>
     770:	91 e0       	ldi	r25, 0x01	; 1
     772:	81 11       	cpse	r24, r1
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	89 0f       	add	r24, r25
     778:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <day>
     77c:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <timeZone>
     780:	68 17       	cp	r22, r24
     782:	99 f0       	breq	.+38     	; 0x7aa <_Z11processTimeR7Message+0x116>
     784:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     788:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     78c:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     790:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     794:	90 64       	ori	r25, 0x40	; 64
     796:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     79a:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     79e:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     7a2:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     7a6:	60 93 10 02 	sts	0x0210, r22	; 0x800210 <timeZone>
     7aa:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     7ae:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     7b2:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     7b6:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     7ba:	a0 62       	ori	r26, 0x20	; 32
     7bc:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     7c0:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     7c4:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     7c8:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     7cc:	df 91       	pop	r29
     7ce:	cf 91       	pop	r28
     7d0:	1f 91       	pop	r17
     7d2:	08 95       	ret

000007d4 <_Z12processRadioR7Message>:
     7d4:	fc 01       	movw	r30, r24
     7d6:	83 85       	ldd	r24, Z+11	; 0x0b
     7d8:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <xmChannel>
     7dc:	89 17       	cp	r24, r25
     7de:	99 f0       	breq	.+38     	; 0x806 <_Z12processRadioR7Message+0x32>
     7e0:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <xmChannel>
     7e4:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     7e8:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     7ec:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     7f0:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     7f4:	a8 60       	ori	r26, 0x08	; 8
     7f6:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     7fa:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     7fe:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     802:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     806:	08 95       	ret

00000808 <_Z13processDimmerR7Message>:
     808:	fc 01       	movw	r30, r24
     80a:	80 85       	ldd	r24, Z+8	; 0x08
     80c:	f4 e6       	ldi	r31, 0x64	; 100
     80e:	8f 9f       	mul	r24, r31
     810:	c0 01       	movw	r24, r0
     812:	11 24       	eor	r1, r1
     814:	6f ef       	ldi	r22, 0xFF	; 255
     816:	70 e0       	ldi	r23, 0x00	; 0
     818:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <__udivmodhi4>
     81c:	60 93 25 02 	sts	0x0225, r22	; 0x800225 <dimmer>
     820:	08 95       	ret

00000822 <_Z17processGeographicR7Message>:
     822:	0f 93       	push	r16
     824:	1f 93       	push	r17
     826:	cf 93       	push	r28
     828:	df 93       	push	r29
     82a:	fc 01       	movw	r30, r24
     82c:	c0 85       	ldd	r28, Z+8	; 0x08
     82e:	d0 e0       	ldi	r29, 0x00	; 0
     830:	dc 2f       	mov	r29, r28
     832:	cc 27       	eor	r28, r28
     834:	81 85       	ldd	r24, Z+9	; 0x09
     836:	c8 0f       	add	r28, r24
     838:	d1 1d       	adc	r29, r1
     83a:	45 85       	ldd	r20, Z+13	; 0x0d
     83c:	50 e0       	ldi	r21, 0x00	; 0
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	9a 01       	movw	r18, r20
     844:	11 27       	eor	r17, r17
     846:	00 27       	eor	r16, r16
     848:	87 85       	ldd	r24, Z+15	; 0x0f
     84a:	48 2f       	mov	r20, r24
     84c:	50 e0       	ldi	r21, 0x00	; 0
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	40 5a       	subi	r20, 0xA0	; 160
     854:	56 48       	sbci	r21, 0x86	; 134
     856:	61 40       	sbci	r22, 0x01	; 1
     858:	71 09       	sbc	r23, r1
     85a:	40 0f       	add	r20, r16
     85c:	51 1f       	adc	r21, r17
     85e:	62 1f       	adc	r22, r18
     860:	73 1f       	adc	r23, r19
     862:	86 85       	ldd	r24, Z+14	; 0x0e
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	a0 e0       	ldi	r26, 0x00	; 0
     868:	b0 e0       	ldi	r27, 0x00	; 0
     86a:	ba 2f       	mov	r27, r26
     86c:	a9 2f       	mov	r26, r25
     86e:	98 2f       	mov	r25, r24
     870:	88 27       	eor	r24, r24
     872:	8a 01       	movw	r16, r20
     874:	9b 01       	movw	r18, r22
     876:	08 0f       	add	r16, r24
     878:	19 1f       	adc	r17, r25
     87a:	2a 1f       	adc	r18, r26
     87c:	3b 1f       	adc	r19, r27
     87e:	c9 01       	movw	r24, r18
     880:	b8 01       	movw	r22, r16
     882:	2e e1       	ldi	r18, 0x1E	; 30
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	40 e0       	ldi	r20, 0x00	; 0
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	0e 94 70 2f 	call	0x5ee0	; 0x5ee0 <__udivmodsi4>
     88e:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <heading>
     892:	90 91 24 02 	lds	r25, 0x0224	; 0x800224 <heading+0x1>
     896:	c8 17       	cp	r28, r24
     898:	d9 07       	cpc	r29, r25
     89a:	39 f4       	brne	.+14     	; 0x8aa <_Z17processGeographicR7Message+0x88>
     89c:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <elevation>
     8a0:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <elevation+0x1>
     8a4:	82 17       	cp	r24, r18
     8a6:	93 07       	cpc	r25, r19
     8a8:	c9 f0       	breq	.+50     	; 0x8dc <_Z17processGeographicR7Message+0xba>
     8aa:	d0 93 24 02 	sts	0x0224, r29	; 0x800224 <heading+0x1>
     8ae:	c0 93 23 02 	sts	0x0223, r28	; 0x800223 <heading>
     8b2:	30 93 22 02 	sts	0x0222, r19	; 0x800222 <elevation+0x1>
     8b6:	20 93 21 02 	sts	0x0221, r18	; 0x800221 <elevation>
     8ba:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     8be:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     8c2:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     8c6:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     8ca:	91 60       	ori	r25, 0x01	; 1
     8cc:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     8d0:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     8d4:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     8d8:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	1f 91       	pop	r17
     8e2:	0f 91       	pop	r16
     8e4:	08 95       	ret

000008e6 <_Z10processGPSR7Message>:
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	ec 01       	movw	r28, r24
     8f4:	4c 85       	ldd	r20, Y+12	; 0x0c
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	74 2f       	mov	r23, r20
     8fe:	66 27       	eor	r22, r22
     900:	55 27       	eor	r21, r21
     902:	44 27       	eor	r20, r20
     904:	8d 85       	ldd	r24, Y+13	; 0x0d
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	a0 e0       	ldi	r26, 0x00	; 0
     90a:	b0 e0       	ldi	r27, 0x00	; 0
     90c:	dc 01       	movw	r26, r24
     90e:	99 27       	eor	r25, r25
     910:	88 27       	eor	r24, r24
     912:	48 0f       	add	r20, r24
     914:	59 1f       	adc	r21, r25
     916:	6a 1f       	adc	r22, r26
     918:	7b 1f       	adc	r23, r27
     91a:	8e 85       	ldd	r24, Y+14	; 0x0e
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	a0 e0       	ldi	r26, 0x00	; 0
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	ba 2f       	mov	r27, r26
     924:	a9 2f       	mov	r26, r25
     926:	98 2f       	mov	r25, r24
     928:	88 27       	eor	r24, r24
     92a:	84 0f       	add	r24, r20
     92c:	95 1f       	adc	r25, r21
     92e:	a6 1f       	adc	r26, r22
     930:	b7 1f       	adc	r27, r23
     932:	2f 85       	ldd	r18, Y+15	; 0x0f
     934:	bc 01       	movw	r22, r24
     936:	cd 01       	movw	r24, r26
     938:	62 0f       	add	r22, r18
     93a:	71 1d       	adc	r23, r1
     93c:	81 1d       	adc	r24, r1
     93e:	91 1d       	adc	r25, r1
     940:	0e 94 45 1c 	call	0x388a	; 0x388a <__floatsisf>
     944:	6b 01       	movw	r12, r22
     946:	7c 01       	movw	r14, r24
     948:	48 85       	ldd	r20, Y+8	; 0x08
     94a:	50 e0       	ldi	r21, 0x00	; 0
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	74 2f       	mov	r23, r20
     952:	66 27       	eor	r22, r22
     954:	55 27       	eor	r21, r21
     956:	44 27       	eor	r20, r20
     958:	89 85       	ldd	r24, Y+9	; 0x09
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	a0 e0       	ldi	r26, 0x00	; 0
     95e:	b0 e0       	ldi	r27, 0x00	; 0
     960:	dc 01       	movw	r26, r24
     962:	99 27       	eor	r25, r25
     964:	88 27       	eor	r24, r24
     966:	48 0f       	add	r20, r24
     968:	59 1f       	adc	r21, r25
     96a:	6a 1f       	adc	r22, r26
     96c:	7b 1f       	adc	r23, r27
     96e:	8a 85       	ldd	r24, Y+10	; 0x0a
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e0       	ldi	r26, 0x00	; 0
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	ba 2f       	mov	r27, r26
     978:	a9 2f       	mov	r26, r25
     97a:	98 2f       	mov	r25, r24
     97c:	88 27       	eor	r24, r24
     97e:	84 0f       	add	r24, r20
     980:	95 1f       	adc	r25, r21
     982:	a6 1f       	adc	r26, r22
     984:	b7 1f       	adc	r27, r23
     986:	2b 85       	ldd	r18, Y+11	; 0x0b
     988:	bc 01       	movw	r22, r24
     98a:	cd 01       	movw	r24, r26
     98c:	62 0f       	add	r22, r18
     98e:	71 1d       	adc	r23, r1
     990:	81 1d       	adc	r24, r1
     992:	91 1d       	adc	r25, r1
     994:	0e 94 45 1c 	call	0x388a	; 0x388a <__floatsisf>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	3a eb       	ldi	r19, 0xBA	; 186
     99c:	4b e5       	ldi	r20, 0x5B	; 91
     99e:	5a e4       	ldi	r21, 0x4A	; 74
     9a0:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     9a4:	60 93 1d 02 	sts	0x021D, r22	; 0x80021d <latitude>
     9a8:	70 93 1e 02 	sts	0x021E, r23	; 0x80021e <latitude+0x1>
     9ac:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <latitude+0x2>
     9b0:	90 93 20 02 	sts	0x0220, r25	; 0x800220 <latitude+0x3>
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	3a eb       	ldi	r19, 0xBA	; 186
     9b8:	4b e5       	ldi	r20, 0x5B	; 91
     9ba:	5a e4       	ldi	r21, 0x4A	; 74
     9bc:	c7 01       	movw	r24, r14
     9be:	b6 01       	movw	r22, r12
     9c0:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     9c4:	2d e7       	ldi	r18, 0x7D	; 125
     9c6:	31 e2       	ldi	r19, 0x21	; 33
     9c8:	45 e1       	ldi	r20, 0x15	; 21
     9ca:	54 e4       	ldi	r21, 0x44	; 68
     9cc:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
     9d0:	60 93 19 02 	sts	0x0219, r22	; 0x800219 <longitude>
     9d4:	70 93 1a 02 	sts	0x021A, r23	; 0x80021a <longitude+0x1>
     9d8:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <longitude+0x2>
     9dc:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <longitude+0x3>
     9e0:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     9e4:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     9e8:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     9ec:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     9f0:	80 68       	ori	r24, 0x80	; 128
     9f2:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     9f6:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     9fa:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     9fe:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	ff 90       	pop	r15
     a08:	ef 90       	pop	r14
     a0a:	df 90       	pop	r13
     a0c:	cf 90       	pop	r12
     a0e:	08 95       	ret

00000a10 <_Z11processHVACR7Message>:
     a10:	fc 01       	movw	r30, r24
     a12:	83 85       	ldd	r24, Z+11	; 0x0b
     a14:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <hvacStatus>
     a18:	89 17       	cp	r24, r25
     a1a:	99 f0       	breq	.+38     	; 0xa42 <_Z11processHVACR7Message+0x32>
     a1c:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <hvacStatus>
     a20:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     a24:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     a28:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     a2c:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     a30:	80 62       	ori	r24, 0x20	; 32
     a32:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     a36:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     a3a:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     a3e:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     a42:	08 95       	ret

00000a44 <_Z22processBrakesAndCruiseR7Message>:
     a44:	fc 01       	movw	r30, r24
     a46:	83 85       	ldd	r24, Z+11	; 0x0b
     a48:	87 ff       	sbrs	r24, 7
     a4a:	1a c0       	rjmp	.+52     	; 0xa80 <_Z22processBrakesAndCruiseR7Message+0x3c>
     a4c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a50:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     a54:	80 68       	ori	r24, 0x80	; 128
     a56:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a5a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a5e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     a62:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     a66:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     a6a:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     a6e:	82 60       	ori	r24, 0x02	; 2
     a70:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     a74:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     a78:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     a7c:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     a80:	80 85       	ldd	r24, Z+8	; 0x08
     a82:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     a86:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     a8a:	86 ff       	sbrs	r24, 6
     a8c:	18 c0       	rjmp	.+48     	; 0xabe <_Z22processBrakesAndCruiseR7Message+0x7a>
     a8e:	81 85       	ldd	r24, Z+9	; 0x09
     a90:	82 ff       	sbrs	r24, 2
     a92:	15 c0       	rjmp	.+42     	; 0xabe <_Z22processBrakesAndCruiseR7Message+0x7a>
     a94:	26 fd       	sbrc	r18, 6
     a96:	11 c0       	rjmp	.+34     	; 0xaba <_Z22processBrakesAndCruiseR7Message+0x76>
     a98:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     a9c:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     aa0:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     aa4:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     aa8:	a1 60       	ori	r26, 0x01	; 1
     aaa:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     aae:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     ab2:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     ab6:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     aba:	20 64       	ori	r18, 0x40	; 64
     abc:	14 c0       	rjmp	.+40     	; 0xae6 <_Z22processBrakesAndCruiseR7Message+0xa2>
     abe:	26 ff       	sbrs	r18, 6
     ac0:	11 c0       	rjmp	.+34     	; 0xae4 <_Z22processBrakesAndCruiseR7Message+0xa0>
     ac2:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     ac6:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     aca:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     ace:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     ad2:	a1 60       	ori	r26, 0x01	; 1
     ad4:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     ad8:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     adc:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     ae0:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     ae4:	2f 7b       	andi	r18, 0xBF	; 191
     ae6:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__data_start+0x1>
     aea:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
     aee:	08 95       	ret

00000af0 <_Z19processTransmissionR7Message>:
     af0:	fc 01       	movw	r30, r24
     af2:	20 85       	ldd	r18, Z+8	; 0x08
     af4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <currentGear>
     af8:	28 17       	cp	r18, r24
     afa:	09 f1       	breq	.+66     	; 0xb3e <__stack+0x3f>
     afc:	80 3f       	cpi	r24, 0xF0	; 240
     afe:	29 f0       	breq	.+10     	; 0xb0a <__stack+0xb>
     b00:	80 e1       	ldi	r24, 0x10	; 16
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	a0 e0       	ldi	r26, 0x00	; 0
     b06:	b0 e0       	ldi	r27, 0x00	; 0
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <__stack+0x13>
     b0a:	80 e5       	ldi	r24, 0x50	; 80
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	a0 e0       	ldi	r26, 0x00	; 0
     b10:	b0 e0       	ldi	r27, 0x00	; 0
     b12:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <triggers>
     b16:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <triggers+0x1>
     b1a:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <triggers+0x2>
     b1e:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <triggers+0x3>
     b22:	84 2b       	or	r24, r20
     b24:	95 2b       	or	r25, r21
     b26:	a6 2b       	or	r26, r22
     b28:	b7 2b       	or	r27, r23
     b2a:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     b2e:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     b32:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     b36:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     b3a:	20 93 28 02 	sts	0x0228, r18	; 0x800228 <currentGear>
     b3e:	08 95       	ret

00000b40 <_Z11processFuelR7Message>:
     b40:	fc 01       	movw	r30, r24
     b42:	61 85       	ldd	r22, Z+9	; 0x09
     b44:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <fuel>
     b48:	68 17       	cp	r22, r24
     b4a:	d1 f1       	breq	.+116    	; 0xbc0 <_Z11processFuelR7Message+0x80>
     b4c:	60 93 40 02 	sts	0x0240, r22	; 0x800240 <fuel>
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     b5a:	20 e0       	ldi	r18, 0x00	; 0
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	4f e7       	ldi	r20, 0x7F	; 127
     b60:	53 e4       	ldi	r21, 0x43	; 67
     b62:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	40 ed       	ldi	r20, 0xD0	; 208
     b6c:	51 e4       	ldi	r21, 0x41	; 65
     b6e:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     b72:	60 93 3c 02 	sts	0x023C, r22	; 0x80023c <fuelRemaining>
     b76:	70 93 3d 02 	sts	0x023D, r23	; 0x80023d <fuelRemaining+0x1>
     b7a:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <fuelRemaining+0x2>
     b7e:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <fuelRemaining+0x3>
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	40 e7       	ldi	r20, 0x70	; 112
     b88:	51 e4       	ldi	r21, 0x41	; 65
     b8a:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     b8e:	60 93 2e 02 	sts	0x022E, r22	; 0x80022e <rangeToEmpty>
     b92:	70 93 2f 02 	sts	0x022F, r23	; 0x80022f <rangeToEmpty+0x1>
     b96:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <rangeToEmpty+0x2>
     b9a:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <rangeToEmpty+0x3>
     b9e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     ba2:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     ba6:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     baa:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     bae:	88 60       	ori	r24, 0x08	; 8
     bb0:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     bb4:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     bb8:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     bbc:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     bc0:	08 95       	ret

00000bc2 <_Z12processSpeedR7Message>:
     bc2:	ff 92       	push	r15
     bc4:	0f 93       	push	r16
     bc6:	1f 93       	push	r17
     bc8:	cf 93       	push	r28
     bca:	df 93       	push	r29
     bcc:	8c 01       	movw	r16, r24
     bce:	fc 01       	movw	r30, r24
     bd0:	25 85       	ldd	r18, Z+13	; 0x0d
     bd2:	c4 85       	ldd	r28, Z+12	; 0x0c
     bd4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     bd8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     bdc:	21 11       	cpse	r18, r1
     bde:	02 c0       	rjmp	.+4      	; 0xbe4 <_Z12processSpeedR7Message+0x22>
     be0:	cc 23       	and	r28, r28
     be2:	11 f0       	breq	.+4      	; 0xbe8 <_Z12processSpeedR7Message+0x26>
     be4:	82 62       	ori	r24, 0x22	; 34
     be6:	01 c0       	rjmp	.+2      	; 0xbea <_Z12processSpeedR7Message+0x28>
     be8:	8d 7d       	andi	r24, 0xDD	; 221
     bea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     bee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     bf2:	d0 e0       	ldi	r29, 0x00	; 0
     bf4:	dc 2f       	mov	r29, r28
     bf6:	cc 27       	eor	r28, r28
     bf8:	c2 0f       	add	r28, r18
     bfa:	d1 1d       	adc	r29, r1
     bfc:	d6 95       	lsr	r29
     bfe:	c7 95       	ror	r28
     c00:	d6 95       	lsr	r29
     c02:	c7 95       	ror	r28
     c04:	d0 93 50 02 	sts	0x0250, r29	; 0x800250 <engineRPM+0x1>
     c08:	c0 93 4f 02 	sts	0x024F, r28	; 0x80024f <engineRPM>
     c0c:	f8 01       	movw	r30, r16
     c0e:	82 85       	ldd	r24, Z+10	; 0x0a
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	98 2f       	mov	r25, r24
     c14:	88 27       	eor	r24, r24
     c16:	23 85       	ldd	r18, Z+11	; 0x0b
     c18:	82 0f       	add	r24, r18
     c1a:	91 1d       	adc	r25, r1
     c1c:	64 e6       	ldi	r22, 0x64	; 100
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <__udivmodhi4>
     c24:	9b 01       	movw	r18, r22
     c26:	33 27       	eor	r19, r19
     c28:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <speedMPH>
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	28 17       	cp	r18, r24
     c30:	39 07       	cpc	r19, r25
     c32:	99 f0       	breq	.+38     	; 0xc5a <_Z12processSpeedR7Message+0x98>
     c34:	60 93 55 02 	sts	0x0255, r22	; 0x800255 <speedMPH>
     c38:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     c3c:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     c40:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     c44:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     c48:	81 60       	ori	r24, 0x01	; 1
     c4a:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     c4e:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     c52:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     c56:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     c5a:	f0 90 55 02 	lds	r15, 0x0255	; 0x800255 <speedMPH>
     c5e:	6f 2d       	mov	r22, r15
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     c6a:	20 e0       	ldi	r18, 0x00	; 0
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	40 e7       	ldi	r20, 0x70	; 112
     c70:	52 e4       	ldi	r21, 0x42	; 66
     c72:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     c76:	20 e0       	ldi	r18, 0x00	; 0
     c78:	30 e8       	ldi	r19, 0x80	; 128
     c7a:	47 e7       	ldi	r20, 0x77	; 119
     c7c:	57 e4       	ldi	r21, 0x47	; 71
     c7e:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     c82:	2c ed       	ldi	r18, 0xDC	; 220
     c84:	3f e0       	ldi	r19, 0x0F	; 15
     c86:	49 ec       	ldi	r20, 0xC9	; 201
     c88:	52 e4       	ldi	r21, 0x42	; 66
     c8a:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     c8e:	60 93 51 02 	sts	0x0251, r22	; 0x800251 <wheelRPM>
     c92:	70 93 52 02 	sts	0x0252, r23	; 0x800252 <wheelRPM+0x1>
     c96:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <wheelRPM+0x2>
     c9a:	90 93 54 02 	sts	0x0254, r25	; 0x800254 <wheelRPM+0x3>
     c9e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ca2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     ca6:	f8 e4       	ldi	r31, 0x48	; 72
     ca8:	ff 15       	cp	r31, r15
     caa:	a8 f4       	brcc	.+42     	; 0xcd6 <_Z12processSpeedR7Message+0x114>
     cac:	94 fd       	sbrc	r25, 4
     cae:	1b c0       	rjmp	.+54     	; 0xce6 <_Z12processSpeedR7Message+0x124>
     cb0:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <triggers>
     cb4:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <triggers+0x1>
     cb8:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <triggers+0x2>
     cbc:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <triggers+0x3>
     cc0:	60 61       	ori	r22, 0x10	; 16
     cc2:	40 93 56 02 	sts	0x0256, r20	; 0x800256 <triggers>
     cc6:	50 93 57 02 	sts	0x0257, r21	; 0x800257 <triggers+0x1>
     cca:	60 93 58 02 	sts	0x0258, r22	; 0x800258 <triggers+0x2>
     cce:	70 93 59 02 	sts	0x0259, r23	; 0x800259 <triggers+0x3>
     cd2:	90 61       	ori	r25, 0x10	; 16
     cd4:	04 c0       	rjmp	.+8      	; 0xcde <_Z12processSpeedR7Message+0x11c>
     cd6:	23 e4       	ldi	r18, 0x43	; 67
     cd8:	2f 15       	cp	r18, r15
     cda:	28 f0       	brcs	.+10     	; 0xce6 <_Z12processSpeedR7Message+0x124>
     cdc:	9f 7e       	andi	r25, 0xEF	; 239
     cde:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     ce2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     ce6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     cea:	81 ff       	sbrs	r24, 1
     cec:	04 c0       	rjmp	.+8      	; 0xcf6 <_Z12processSpeedR7Message+0x134>
     cee:	f8 01       	movw	r30, r16
     cf0:	66 85       	ldd	r22, Z+14	; 0x0e
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <_Z12processSpeedR7Message+0x138>
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <throttle>
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	86 17       	cp	r24, r22
     d02:	97 07       	cpc	r25, r23
     d04:	61 f1       	breq	.+88     	; 0xd5e <_Z12processSpeedR7Message+0x19c>
     d06:	60 93 4e 02 	sts	0x024E, r22	; 0x80024e <throttle>
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     d12:	20 e0       	ldi	r18, 0x00	; 0
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	4f e7       	ldi	r20, 0x7F	; 127
     d18:	53 e4       	ldi	r21, 0x43	; 67
     d1a:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	48 ec       	ldi	r20, 0xC8	; 200
     d24:	52 e4       	ldi	r21, 0x42	; 66
     d26:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     d2a:	60 93 4a 02 	sts	0x024A, r22	; 0x80024a <throttleF>
     d2e:	70 93 4b 02 	sts	0x024B, r23	; 0x80024b <throttleF+0x1>
     d32:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <throttleF+0x2>
     d36:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <throttleF+0x3>
     d3a:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     d3e:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     d42:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     d46:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     d4a:	84 60       	ori	r24, 0x04	; 4
     d4c:	90 68       	ori	r25, 0x80	; 128
     d4e:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     d52:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     d56:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     d5a:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     d5e:	f8 01       	movw	r30, r16
     d60:	67 85       	ldd	r22, Z+15	; 0x0f
     d62:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <pedal>
     d66:	68 17       	cp	r22, r24
     d68:	61 f1       	breq	.+88     	; 0xdc2 <_Z12processSpeedR7Message+0x200>
     d6a:	60 93 45 02 	sts	0x0245, r22	; 0x800245 <pedal>
     d6e:	70 e0       	ldi	r23, 0x00	; 0
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	4f e7       	ldi	r20, 0x7F	; 127
     d7e:	53 e4       	ldi	r21, 0x43	; 67
     d80:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	48 ec       	ldi	r20, 0xC8	; 200
     d8a:	52 e4       	ldi	r21, 0x42	; 66
     d8c:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     d90:	60 93 41 02 	sts	0x0241, r22	; 0x800241 <pedalF>
     d94:	70 93 42 02 	sts	0x0242, r23	; 0x800242 <pedalF+0x1>
     d98:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <pedalF+0x2>
     d9c:	90 93 44 02 	sts	0x0244, r25	; 0x800244 <pedalF+0x3>
     da0:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     da4:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     da8:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     dac:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     db0:	82 60       	ori	r24, 0x02	; 2
     db2:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     db6:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     dba:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     dbe:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     dc2:	be 01       	movw	r22, r28
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	49 ea       	ldi	r20, 0xA9	; 169
     dd2:	53 e4       	ldi	r21, 0x43	; 67
     dd4:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     dd8:	20 e0       	ldi	r18, 0x00	; 0
     dda:	30 e2       	ldi	r19, 0x20	; 32
     ddc:	44 ea       	ldi	r20, 0xA4	; 164
     dde:	55 e4       	ldi	r21, 0x45	; 69
     de0:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     de4:	60 93 46 02 	sts	0x0246, r22	; 0x800246 <horsePower>
     de8:	70 93 47 02 	sts	0x0247, r23	; 0x800247 <horsePower+0x1>
     dec:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <horsePower+0x2>
     df0:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <horsePower+0x3>
     df4:	df 91       	pop	r29
     df6:	cf 91       	pop	r28
     df8:	1f 91       	pop	r17
     dfa:	0f 91       	pop	r16
     dfc:	ff 90       	pop	r15
     dfe:	08 95       	ret

00000e00 <_Z15processLightingR7Message>:
     e00:	26 e0       	ldi	r18, 0x06	; 6
     e02:	fc 01       	movw	r30, r24
     e04:	38 96       	adiw	r30, 0x08	; 8
     e06:	a9 e0       	ldi	r26, 0x09	; 9
     e08:	b2 e0       	ldi	r27, 0x02	; 2
     e0a:	01 90       	ld	r0, Z+
     e0c:	0d 92       	st	X+, r0
     e0e:	2a 95       	dec	r18
     e10:	e1 f7       	brne	.-8      	; 0xe0a <_Z15processLightingR7Message+0xa>
     e12:	08 95       	ret

00000e14 <_ZN3OBDC1Ev>:
     e14:	fc 01       	movw	r30, r24
     e16:	10 82       	st	Z, r1
     e18:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <lastRequest>
     e1c:	10 92 6d 03 	sts	0x036D, r1	; 0x80036d <lastRequest+0x1>
     e20:	10 92 6e 03 	sts	0x036E, r1	; 0x80036e <lastRequest+0x2>
     e24:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <lastRequest+0x3>
     e28:	24 e0       	ldi	r18, 0x04	; 4
     e2a:	31 e0       	ldi	r19, 0x01	; 1
     e2c:	32 83       	std	Z+2, r19	; 0x02
     e2e:	21 83       	std	Z+1, r18	; 0x01
     e30:	08 95       	ret

00000e32 <_ZN3OBD12calculateMPGEv>:
     e32:	cf 92       	push	r12
     e34:	df 92       	push	r13
     e36:	ef 92       	push	r14
     e38:	ff 92       	push	r15
     e3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e3e:	81 ff       	sbrs	r24, 1
     e40:	43 c0       	rjmp	.+134    	; 0xec8 <_ZN3OBD12calculateMPGEv+0x96>
     e42:	60 91 3a 02 	lds	r22, 0x023A	; 0x80023a <MAF>
     e46:	70 91 3b 02 	lds	r23, 0x023B	; 0x80023b <MAF+0x1>
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     e52:	23 e3       	ldi	r18, 0x33	; 51
     e54:	33 e3       	ldi	r19, 0x33	; 51
     e56:	4b e6       	ldi	r20, 0x6B	; 107
     e58:	51 e4       	ldi	r21, 0x41	; 65
     e5a:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     e5e:	24 ea       	ldi	r18, 0xA4	; 164
     e60:	30 e7       	ldi	r19, 0x70	; 112
     e62:	45 ec       	ldi	r20, 0xC5	; 197
     e64:	50 e4       	ldi	r21, 0x40	; 64
     e66:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     e6a:	27 ec       	ldi	r18, 0xC7	; 199
     e6c:	3b ec       	ldi	r19, 0xCB	; 203
     e6e:	42 ee       	ldi	r20, 0xE2	; 226
     e70:	53 e4       	ldi	r21, 0x43	; 67
     e72:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	40 e7       	ldi	r20, 0x70	; 112
     e7c:	52 e4       	ldi	r21, 0x42	; 66
     e7e:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     e82:	6b 01       	movw	r12, r22
     e84:	7c 01       	movw	r14, r24
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	a9 01       	movw	r20, r18
     e8c:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
     e90:	18 16       	cp	r1, r24
     e92:	d4 f4       	brge	.+52     	; 0xec8 <_ZN3OBD12calculateMPGEv+0x96>
     e94:	60 91 55 02 	lds	r22, 0x0255	; 0x800255 <speedMPH>
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	40 e7       	ldi	r20, 0x70	; 112
     ea8:	52 e4       	ldi	r21, 0x42	; 66
     eaa:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     eae:	a7 01       	movw	r20, r14
     eb0:	96 01       	movw	r18, r12
     eb2:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     eb6:	60 93 32 02 	sts	0x0232, r22	; 0x800232 <MPG>
     eba:	70 93 33 02 	sts	0x0233, r23	; 0x800233 <MPG+0x1>
     ebe:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <MPG+0x2>
     ec2:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <MPG+0x3>
     ec6:	08 c0       	rjmp	.+16     	; 0xed8 <_ZN3OBD12calculateMPGEv+0xa6>
     ec8:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <MPG>
     ecc:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <MPG+0x1>
     ed0:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <MPG+0x2>
     ed4:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <MPG+0x3>
     ed8:	ff 90       	pop	r15
     eda:	ef 90       	pop	r14
     edc:	df 90       	pop	r13
     ede:	cf 90       	pop	r12
     ee0:	08 95       	ret

00000ee2 <_ZN3OBD7processERK7Message>:
     ee2:	8f 92       	push	r8
     ee4:	9f 92       	push	r9
     ee6:	af 92       	push	r10
     ee8:	bf 92       	push	r11
     eea:	cf 92       	push	r12
     eec:	df 92       	push	r13
     eee:	ef 92       	push	r14
     ef0:	ff 92       	push	r15
     ef2:	cf 93       	push	r28
     ef4:	df 93       	push	r29
     ef6:	fb 01       	movw	r30, r22
     ef8:	c0 80       	ld	r12, Z
     efa:	d1 80       	ldd	r13, Z+1	; 0x01
     efc:	e2 80       	ldd	r14, Z+2	; 0x02
     efe:	f3 80       	ldd	r15, Z+3	; 0x03
     f00:	f8 ee       	ldi	r31, 0xE8	; 232
     f02:	cf 16       	cp	r12, r31
     f04:	f7 e0       	ldi	r31, 0x07	; 7
     f06:	df 06       	cpc	r13, r31
     f08:	e1 04       	cpc	r14, r1
     f0a:	f1 04       	cpc	r15, r1
     f0c:	09 f0       	breq	.+2      	; 0xf10 <_ZN3OBD7processERK7Message+0x2e>
     f0e:	f0 c0       	rjmp	.+480    	; 0x10f0 <_ZN3OBD7processERK7Message+0x20e>
     f10:	fb 01       	movw	r30, r22
     f12:	ec 01       	movw	r28, r24
     f14:	83 85       	ldd	r24, Z+11	; 0x0b
     f16:	8f 30       	cpi	r24, 0x0F	; 15
     f18:	09 f4       	brne	.+2      	; 0xf1c <_ZN3OBD7processERK7Message+0x3a>
     f1a:	7e c0       	rjmp	.+252    	; 0x1018 <_ZN3OBD7processERK7Message+0x136>
     f1c:	80 31       	cpi	r24, 0x10	; 16
     f1e:	21 f0       	breq	.+8      	; 0xf28 <_ZN3OBD7processERK7Message+0x46>
     f20:	8b 30       	cpi	r24, 0x0B	; 11
     f22:	09 f0       	breq	.+2      	; 0xf26 <_ZN3OBD7processERK7Message+0x44>
     f24:	e5 c0       	rjmp	.+458    	; 0x10f0 <_ZN3OBD7processERK7Message+0x20e>
     f26:	cc c0       	rjmp	.+408    	; 0x10c0 <_ZN3OBD7processERK7Message+0x1de>
     f28:	84 85       	ldd	r24, Z+12	; 0x0c
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	98 2f       	mov	r25, r24
     f2e:	88 27       	eor	r24, r24
     f30:	25 85       	ldd	r18, Z+13	; 0x0d
     f32:	82 0f       	add	r24, r18
     f34:	91 1d       	adc	r25, r1
     f36:	64 e6       	ldi	r22, 0x64	; 100
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <__udivmodhi4>
     f3e:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <MAF>
     f42:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <MAF+0x1>
     f46:	68 17       	cp	r22, r24
     f48:	79 07       	cpc	r23, r25
     f4a:	89 f0       	breq	.+34     	; 0xf6e <_ZN3OBD7processERK7Message+0x8c>
     f4c:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
     f50:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
     f54:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
     f58:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
     f5c:	98 60       	ori	r25, 0x08	; 8
     f5e:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
     f62:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
     f66:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
     f6a:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
     f6e:	70 93 3b 02 	sts	0x023B, r23	; 0x80023b <MAF+0x1>
     f72:	60 93 3a 02 	sts	0x023A, r22	; 0x80023a <MAF>
     f76:	80 e0       	ldi	r24, 0x00	; 0
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     f7e:	23 ec       	ldi	r18, 0xC3	; 195
     f80:	31 e8       	ldi	r19, 0x81	; 129
     f82:	40 e1       	ldi	r20, 0x10	; 16
     f84:	5b e3       	ldi	r21, 0x3B	; 59
     f86:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     f8a:	6b 01       	movw	r12, r22
     f8c:	7c 01       	movw	r14, r24
     f8e:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
     f92:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     f96:	4b 01       	movw	r8, r22
     f98:	5c 01       	movw	r10, r24
     f9a:	60 91 6c 03 	lds	r22, 0x036C	; 0x80036c <lastRequest>
     f9e:	70 91 6d 03 	lds	r23, 0x036D	; 0x80036d <lastRequest+0x1>
     fa2:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <lastRequest+0x2>
     fa6:	90 91 6f 03 	lds	r25, 0x036F	; 0x80036f <lastRequest+0x3>
     faa:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
     fae:	9b 01       	movw	r18, r22
     fb0:	ac 01       	movw	r20, r24
     fb2:	c5 01       	movw	r24, r10
     fb4:	b4 01       	movw	r22, r8
     fb6:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
     fba:	a7 01       	movw	r20, r14
     fbc:	96 01       	movw	r18, r12
     fbe:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	4a e7       	ldi	r20, 0x7A	; 122
     fc8:	54 e4       	ldi	r21, 0x44	; 68
     fca:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
     fce:	a7 01       	movw	r20, r14
     fd0:	96 01       	movw	r18, r12
     fd2:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
     fd6:	9b 01       	movw	r18, r22
     fd8:	ac 01       	movw	r20, r24
     fda:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <totalMAF>
     fde:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <totalMAF+0x1>
     fe2:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <totalMAF+0x2>
     fe6:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <totalMAF+0x3>
     fea:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
     fee:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <totalMAF>
     ff2:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <totalMAF+0x1>
     ff6:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <totalMAF+0x2>
     ffa:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <totalMAF+0x3>
     ffe:	ce 01       	movw	r24, r28
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	ff 90       	pop	r15
    1006:	ef 90       	pop	r14
    1008:	df 90       	pop	r13
    100a:	cf 90       	pop	r12
    100c:	bf 90       	pop	r11
    100e:	af 90       	pop	r10
    1010:	9f 90       	pop	r9
    1012:	8f 90       	pop	r8
    1014:	0c 94 19 07 	jmp	0xe32	; 0xe32 <_ZN3OBD12calculateMPGEv>
    1018:	64 85       	ldd	r22, Z+12	; 0x0c
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	40 e2       	ldi	r20, 0x20	; 32
    102a:	52 e4       	ldi	r21, 0x42	; 66
    102c:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    1030:	26 e6       	ldi	r18, 0x66	; 102
    1032:	36 e6       	ldi	r19, 0x66	; 102
    1034:	46 ee       	ldi	r20, 0xE6	; 230
    1036:	5f e3       	ldi	r21, 0x3F	; 63
    1038:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	52 e4       	ldi	r21, 0x42	; 66
    1044:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    1048:	4b 01       	movw	r8, r22
    104a:	5c 01       	movw	r10, r24
    104c:	20 91 29 02 	lds	r18, 0x0229	; 0x800229 <intakeAirTemperature>
    1050:	30 91 2a 02 	lds	r19, 0x022A	; 0x80022a <intakeAirTemperature+0x1>
    1054:	40 91 2b 02 	lds	r20, 0x022B	; 0x80022b <intakeAirTemperature+0x2>
    1058:	50 91 2c 02 	lds	r21, 0x022C	; 0x80022c <intakeAirTemperature+0x3>
    105c:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    1060:	6b 01       	movw	r12, r22
    1062:	7c 01       	movw	r14, r24
    1064:	20 e0       	ldi	r18, 0x00	; 0
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	a9 01       	movw	r20, r18
    106a:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    106e:	18 16       	cp	r1, r24
    1070:	5c f4       	brge	.+22     	; 0x1088 <_ZN3OBD7processERK7Message+0x1a6>
    1072:	2d ec       	ldi	r18, 0xCD	; 205
    1074:	3c ec       	ldi	r19, 0xCC	; 204
    1076:	4c ec       	ldi	r20, 0xCC	; 204
    1078:	5d e3       	ldi	r21, 0x3D	; 61
    107a:	c7 01       	movw	r24, r14
    107c:	b6 01       	movw	r22, r12
    107e:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    1082:	18 16       	cp	r1, r24
    1084:	5c f0       	brlt	.+22     	; 0x109c <_ZN3OBD7processERK7Message+0x1ba>
    1086:	34 c0       	rjmp	.+104    	; 0x10f0 <_ZN3OBD7processERK7Message+0x20e>
    1088:	2d ec       	ldi	r18, 0xCD	; 205
    108a:	3c ec       	ldi	r19, 0xCC	; 204
    108c:	4c ec       	ldi	r20, 0xCC	; 204
    108e:	5d eb       	ldi	r21, 0xBD	; 189
    1090:	c7 01       	movw	r24, r14
    1092:	b6 01       	movw	r22, r12
    1094:	0e 94 96 1b 	call	0x372c	; 0x372c <__cmpsf2>
    1098:	87 ff       	sbrs	r24, 7
    109a:	2a c0       	rjmp	.+84     	; 0x10f0 <_ZN3OBD7processERK7Message+0x20e>
    109c:	80 92 29 02 	sts	0x0229, r8	; 0x800229 <intakeAirTemperature>
    10a0:	90 92 2a 02 	sts	0x022A, r9	; 0x80022a <intakeAirTemperature+0x1>
    10a4:	a0 92 2b 02 	sts	0x022B, r10	; 0x80022b <intakeAirTemperature+0x2>
    10a8:	b0 92 2c 02 	sts	0x022C, r11	; 0x80022c <intakeAirTemperature+0x3>
    10ac:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    10b0:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    10b4:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    10b8:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    10bc:	94 60       	ori	r25, 0x04	; 4
    10be:	10 c0       	rjmp	.+32     	; 0x10e0 <_ZN3OBD7processERK7Message+0x1fe>
    10c0:	84 85       	ldd	r24, Z+12	; 0x0c
    10c2:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <manifoldPressure>
    10c6:	89 17       	cp	r24, r25
    10c8:	99 f0       	breq	.+38     	; 0x10f0 <_ZN3OBD7processERK7Message+0x20e>
    10ca:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <manifoldPressure>
    10ce:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    10d2:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    10d6:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    10da:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    10de:	92 60       	ori	r25, 0x02	; 2
    10e0:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    10e4:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    10e8:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    10ec:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    10f0:	df 91       	pop	r29
    10f2:	cf 91       	pop	r28
    10f4:	ff 90       	pop	r15
    10f6:	ef 90       	pop	r14
    10f8:	df 90       	pop	r13
    10fa:	cf 90       	pop	r12
    10fc:	bf 90       	pop	r11
    10fe:	af 90       	pop	r10
    1100:	9f 90       	pop	r9
    1102:	8f 90       	pop	r8
    1104:	08 95       	ret

00001106 <_ZN3OBD7requestERKh>:
    1106:	0f 93       	push	r16
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	60 97       	sbiw	r28, 0x10	; 16
    1114:	0f b6       	in	r0, 0x3f	; 63
    1116:	f8 94       	cli
    1118:	de bf       	out	0x3e, r29	; 62
    111a:	0f be       	out	0x3f, r0	; 63
    111c:	cd bf       	out	0x3d, r28	; 61
    111e:	8b 01       	movw	r16, r22
    1120:	ce 01       	movw	r24, r28
    1122:	01 96       	adiw	r24, 0x01	; 1
    1124:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    1128:	80 ee       	ldi	r24, 0xE0	; 224
    112a:	97 e0       	ldi	r25, 0x07	; 7
    112c:	a0 e0       	ldi	r26, 0x00	; 0
    112e:	b0 e0       	ldi	r27, 0x00	; 0
    1130:	89 83       	std	Y+1, r24	; 0x01
    1132:	9a 83       	std	Y+2, r25	; 0x02
    1134:	ab 83       	std	Y+3, r26	; 0x03
    1136:	bc 83       	std	Y+4, r27	; 0x04
    1138:	81 e0       	ldi	r24, 0x01	; 1
    113a:	8d 83       	std	Y+5, r24	; 0x05
    113c:	88 e0       	ldi	r24, 0x08	; 8
    113e:	88 87       	std	Y+8, r24	; 0x08
    1140:	83 e0       	ldi	r24, 0x03	; 3
    1142:	89 87       	std	Y+9, r24	; 0x09
    1144:	82 e2       	ldi	r24, 0x22	; 34
    1146:	8a 87       	std	Y+10, r24	; 0x0a
    1148:	f8 01       	movw	r30, r16
    114a:	80 81       	ld	r24, Z
    114c:	8c 87       	std	Y+12, r24	; 0x0c
    114e:	be 01       	movw	r22, r28
    1150:	6f 5f       	subi	r22, 0xFF	; 255
    1152:	7f 4f       	sbci	r23, 0xFF	; 255
    1154:	8a e5       	ldi	r24, 0x5A	; 90
    1156:	92 e0       	ldi	r25, 0x02	; 2
    1158:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    115c:	88 23       	and	r24, r24
    115e:	51 f0       	breq	.+20     	; 0x1174 <_ZN3OBD7requestERKh+0x6e>
    1160:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    1164:	60 93 6c 03 	sts	0x036C, r22	; 0x80036c <lastRequest>
    1168:	70 93 6d 03 	sts	0x036D, r23	; 0x80036d <lastRequest+0x1>
    116c:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <lastRequest+0x2>
    1170:	90 93 6f 03 	sts	0x036F, r25	; 0x80036f <lastRequest+0x3>
    1174:	60 96       	adiw	r28, 0x10	; 16
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	08 95       	ret

0000118a <_ZN7ButtonsC1Ev>:
    118a:	fc 01       	movw	r30, r24
    118c:	10 82       	st	Z, r1
    118e:	61 e0       	ldi	r22, 0x01	; 1
    1190:	82 e1       	ldi	r24, 0x12	; 18
    1192:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    1196:	62 e0       	ldi	r22, 0x02	; 2
    1198:	83 e1       	ldi	r24, 0x13	; 19
    119a:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    119e:	61 e0       	ldi	r22, 0x01	; 1
    11a0:	86 e1       	ldi	r24, 0x16	; 22
    11a2:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    11a6:	62 e0       	ldi	r22, 0x02	; 2
    11a8:	87 e1       	ldi	r24, 0x17	; 23
    11aa:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	82 e1       	ldi	r24, 0x12	; 18
    11b2:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	86 e1       	ldi	r24, 0x16	; 22
    11ba:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

000011be <_ZN6Sleepy7processERK7Message>:
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	fb 01       	movw	r30, r22
    11c4:	40 81       	ld	r20, Z
    11c6:	51 81       	ldd	r21, Z+1	; 0x01
    11c8:	62 81       	ldd	r22, Z+2	; 0x02
    11ca:	73 81       	ldd	r23, Z+3	; 0x03
    11cc:	44 31       	cpi	r20, 0x14	; 20
    11ce:	55 40       	sbci	r21, 0x05	; 5
    11d0:	61 05       	cpc	r22, r1
    11d2:	71 05       	cpc	r23, r1
    11d4:	39 f4       	brne	.+14     	; 0x11e4 <_ZN6Sleepy7processERK7Message+0x26>
    11d6:	ec 01       	movw	r28, r24
    11d8:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    11dc:	68 83       	st	Y, r22
    11de:	79 83       	std	Y+1, r23	; 0x01
    11e0:	8a 83       	std	Y+2, r24	; 0x02
    11e2:	9b 83       	std	Y+3, r25	; 0x03
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	08 95       	ret

000011ea <_ZN6Sleepy8SleepAVREv>:
    11ea:	ef 92       	push	r14
    11ec:	ff 92       	push	r15
    11ee:	0f 93       	push	r16
    11f0:	1f 93       	push	r17
    11f2:	cf 93       	push	r28
    11f4:	df 93       	push	r29
    11f6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    11fa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    11fe:	a9 01       	movw	r20, r18
    1200:	44 70       	andi	r20, 0x04	; 4
    1202:	52 70       	andi	r21, 0x02	; 2
    1204:	44 30       	cpi	r20, 0x04	; 4
    1206:	52 40       	sbci	r21, 0x02	; 2
    1208:	09 f0       	breq	.+2      	; 0x120c <_ZN6Sleepy8SleepAVREv+0x22>
    120a:	8a c0       	rjmp	.+276    	; 0x1320 <_ZN6Sleepy8SleepAVREv+0x136>
    120c:	ec 01       	movw	r28, r24
    120e:	2b 7f       	andi	r18, 0xFB	; 251
    1210:	3d 7f       	andi	r19, 0xFD	; 253
    1212:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__data_start+0x1>
    1216:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
    121a:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	80 5f       	subi	r24, 0xF0	; 240
    1224:	98 4d       	sbci	r25, 0xD8	; 216
    1226:	af 4f       	sbci	r26, 0xFF	; 255
    1228:	bf 4f       	sbci	r27, 0xFF	; 255
    122a:	88 83       	st	Y, r24
    122c:	99 83       	std	Y+1, r25	; 0x01
    122e:	aa 83       	std	Y+2, r26	; 0x02
    1230:	bb 83       	std	Y+3, r27	; 0x03
    1232:	c5 e0       	ldi	r28, 0x05	; 5
    1234:	61 e0       	ldi	r22, 0x01	; 1
    1236:	8d e0       	ldi	r24, 0x0D	; 13
    1238:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    123c:	68 ec       	ldi	r22, 0xC8	; 200
    123e:	70 e0       	ldi	r23, 0x00	; 0
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    1248:	60 e0       	ldi	r22, 0x00	; 0
    124a:	8d e0       	ldi	r24, 0x0D	; 13
    124c:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    1250:	68 ec       	ldi	r22, 0xC8	; 200
    1252:	70 e0       	ldi	r23, 0x00	; 0
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    125c:	c1 50       	subi	r28, 0x01	; 1
    125e:	51 f7       	brne	.-44     	; 0x1234 <_ZN6Sleepy8SleepAVREv+0x4a>
    1260:	88 e4       	ldi	r24, 0x48	; 72
    1262:	93 e0       	ldi	r25, 0x03	; 3
    1264:	0e 94 fa 2d 	call	0x5bf4	; 0x5bf4 <_ZN6CANBus22prepareWakeupInterruptEv>
    1268:	14 e1       	ldi	r17, 0x14	; 20
    126a:	e1 2e       	mov	r14, r17
    126c:	15 e0       	ldi	r17, 0x05	; 5
    126e:	f1 2e       	mov	r15, r17
    1270:	00 e0       	ldi	r16, 0x00	; 0
    1272:	10 e0       	ldi	r17, 0x00	; 0
    1274:	24 e1       	ldi	r18, 0x14	; 20
    1276:	35 e0       	ldi	r19, 0x05	; 5
    1278:	40 e0       	ldi	r20, 0x00	; 0
    127a:	50 e0       	ldi	r21, 0x00	; 0
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	88 e4       	ldi	r24, 0x48	; 72
    1280:	93 e0       	ldi	r25, 0x03	; 3
    1282:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    1286:	84 e4       	ldi	r24, 0x44	; 68
    1288:	93 e0       	ldi	r25, 0x03	; 3
    128a:	0e 94 89 2d 	call	0x5b12	; 0x5b12 <_ZN6CANBus9powerDownEv>
    128e:	6a e0       	ldi	r22, 0x0A	; 10
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    129a:	72 98       	cbi	0x0e, 2	; 14
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	62 e9       	ldi	r22, 0x92	; 146
    12a2:	72 e0       	ldi	r23, 0x02	; 2
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	0e 94 f1 24 	call	0x49e2	; 0x49e2 <attachInterrupt>
    12aa:	83 b7       	in	r24, 0x33	; 51
    12ac:	81 7f       	andi	r24, 0xF1	; 241
    12ae:	84 60       	ori	r24, 0x04	; 4
    12b0:	83 bf       	out	0x33, r24	; 51
    12b2:	f8 94       	cli
    12b4:	83 b7       	in	r24, 0x33	; 51
    12b6:	81 60       	ori	r24, 0x01	; 1
    12b8:	83 bf       	out	0x33, r24	; 51
    12ba:	78 94       	sei
    12bc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    12c0:	81 60       	ori	r24, 0x01	; 1
    12c2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    12c6:	88 95       	sleep
    12c8:	64 e0       	ldi	r22, 0x04	; 4
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    12d4:	83 b7       	in	r24, 0x33	; 51
    12d6:	8e 7f       	andi	r24, 0xFE	; 254
    12d8:	83 bf       	out	0x33, r24	; 51
    12da:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    12de:	8e 7f       	andi	r24, 0xFE	; 254
    12e0:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    12e4:	64 e0       	ldi	r22, 0x04	; 4
    12e6:	70 e0       	ldi	r23, 0x00	; 0
    12e8:	80 e0       	ldi	r24, 0x00	; 0
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    12f0:	88 e4       	ldi	r24, 0x48	; 72
    12f2:	93 e0       	ldi	r25, 0x03	; 3
    12f4:	0e 94 ba 2d 	call	0x5b74	; 0x5b74 <_ZN6CANBus7powerUpEv>
    12f8:	18 ee       	ldi	r17, 0xE8	; 232
    12fa:	e1 2e       	mov	r14, r17
    12fc:	17 e0       	ldi	r17, 0x07	; 7
    12fe:	f1 2e       	mov	r15, r17
    1300:	00 e0       	ldi	r16, 0x00	; 0
    1302:	10 e0       	ldi	r17, 0x00	; 0
    1304:	24 e1       	ldi	r18, 0x14	; 20
    1306:	35 e0       	ldi	r19, 0x05	; 5
    1308:	40 e0       	ldi	r20, 0x00	; 0
    130a:	50 e0       	ldi	r21, 0x00	; 0
    130c:	60 e0       	ldi	r22, 0x00	; 0
    130e:	88 e4       	ldi	r24, 0x48	; 72
    1310:	93 e0       	ldi	r25, 0x03	; 3
    1312:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    1316:	84 e4       	ldi	r24, 0x44	; 68
    1318:	93 e0       	ldi	r25, 0x03	; 3
    131a:	0e 94 ba 2d 	call	0x5b74	; 0x5b74 <_ZN6CANBus7powerUpEv>
    131e:	72 9a       	sbi	0x0e, 2	; 14
    1320:	df 91       	pop	r29
    1322:	cf 91       	pop	r28
    1324:	1f 91       	pop	r17
    1326:	0f 91       	pop	r16
    1328:	ff 90       	pop	r15
    132a:	ef 90       	pop	r14
    132c:	08 95       	ret

0000132e <_ZN5RS23211receiveDataEPh>:
    132e:	ef 92       	push	r14
    1330:	ff 92       	push	r15
    1332:	0f 93       	push	r16
    1334:	1f 93       	push	r17
    1336:	cf 93       	push	r28
    1338:	dc 01       	movw	r26, r24
    133a:	2d 91       	ld	r18, X+
    133c:	3c 91       	ld	r19, X
    133e:	23 2b       	or	r18, r19
    1340:	31 f1       	breq	.+76     	; 0x138e <_ZN5RS23211receiveDataEPh+0x60>
    1342:	7b 01       	movw	r14, r22
    1344:	8c 01       	movw	r16, r24
    1346:	88 e1       	ldi	r24, 0x18	; 24
    1348:	fb 01       	movw	r30, r22
    134a:	11 92       	st	Z+, r1
    134c:	8a 95       	dec	r24
    134e:	e9 f7       	brne	.-6      	; 0x134a <_ZN5RS23211receiveDataEPh+0x1c>
    1350:	c0 e0       	ldi	r28, 0x00	; 0
    1352:	d8 01       	movw	r26, r16
    1354:	8d 91       	ld	r24, X+
    1356:	9c 91       	ld	r25, X
    1358:	dc 01       	movw	r26, r24
    135a:	ed 91       	ld	r30, X+
    135c:	fc 91       	ld	r31, X
    135e:	04 80       	ldd	r0, Z+4	; 0x04
    1360:	f5 81       	ldd	r31, Z+5	; 0x05
    1362:	e0 2d       	mov	r30, r0
    1364:	09 95       	icall
    1366:	89 2b       	or	r24, r25
    1368:	a1 f0       	breq	.+40     	; 0x1392 <_ZN5RS23211receiveDataEPh+0x64>
    136a:	f8 01       	movw	r30, r16
    136c:	80 81       	ld	r24, Z
    136e:	91 81       	ldd	r25, Z+1	; 0x01
    1370:	dc 01       	movw	r26, r24
    1372:	ed 91       	ld	r30, X+
    1374:	fc 91       	ld	r31, X
    1376:	06 80       	ldd	r0, Z+6	; 0x06
    1378:	f7 81       	ldd	r31, Z+7	; 0x07
    137a:	e0 2d       	mov	r30, r0
    137c:	09 95       	icall
    137e:	c8 31       	cpi	r28, 0x18	; 24
    1380:	40 f7       	brcc	.-48     	; 0x1352 <_ZN5RS23211receiveDataEPh+0x24>
    1382:	f7 01       	movw	r30, r14
    1384:	ec 0f       	add	r30, r28
    1386:	f1 1d       	adc	r31, r1
    1388:	80 83       	st	Z, r24
    138a:	cf 5f       	subi	r28, 0xFF	; 255
    138c:	e2 cf       	rjmp	.-60     	; 0x1352 <_ZN5RS23211receiveDataEPh+0x24>
    138e:	80 e0       	ldi	r24, 0x00	; 0
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <_ZN5RS23211receiveDataEPh+0x66>
    1392:	8c 2f       	mov	r24, r28
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	ff 90       	pop	r15
    139c:	ef 90       	pop	r14
    139e:	08 95       	ret

000013a0 <_ZN5RS23213processBTDataEPKhh>:
    13a0:	fc 01       	movw	r30, r24
    13a2:	61 15       	cp	r22, r1
    13a4:	71 05       	cpc	r23, r1
    13a6:	f1 f0       	breq	.+60     	; 0x13e4 <_ZN5RS23213processBTDataEPKhh+0x44>
    13a8:	db 01       	movw	r26, r22
    13aa:	9c 91       	ld	r25, X
    13ac:	91 3b       	cpi	r25, 0xB1	; 177
    13ae:	59 f0       	breq	.+22     	; 0x13c6 <_ZN5RS23213processBTDataEPKhh+0x26>
    13b0:	92 3b       	cpi	r25, 0xB2	; 178
    13b2:	79 f0       	breq	.+30     	; 0x13d2 <_ZN5RS23213processBTDataEPKhh+0x32>
    13b4:	90 3b       	cpi	r25, 0xB0	; 176
    13b6:	b1 f4       	brne	.+44     	; 0x13e4 <_ZN5RS23213processBTDataEPKhh+0x44>
    13b8:	92 81       	ldd	r25, Z+2	; 0x02
    13ba:	90 61       	ori	r25, 0x10	; 16
    13bc:	92 83       	std	Z+2, r25	; 0x02
    13be:	61 e0       	ldi	r22, 0x01	; 1
    13c0:	8d e0       	ldi	r24, 0x0D	; 13
    13c2:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>
    13c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13ca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    13ce:	90 62       	ori	r25, 0x20	; 32
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <_ZN5RS23213processBTDataEPKhh+0x3c>
    13d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    13d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    13da:	9f 7d       	andi	r25, 0xDF	; 223
    13dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    13e0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    13e4:	08 95       	ret

000013e6 <_ZN5RS23220executeInjectCommandEPKhh>:
    13e6:	0f 93       	push	r16
    13e8:	1f 93       	push	r17
    13ea:	cf 93       	push	r28
    13ec:	df 93       	push	r29
    13ee:	cd b7       	in	r28, 0x3d	; 61
    13f0:	de b7       	in	r29, 0x3e	; 62
    13f2:	60 97       	sbiw	r28, 0x10	; 16
    13f4:	0f b6       	in	r0, 0x3f	; 63
    13f6:	f8 94       	cli
    13f8:	de bf       	out	0x3e, r29	; 62
    13fa:	0f be       	out	0x3f, r0	; 63
    13fc:	cd bf       	out	0x3d, r28	; 61
    13fe:	61 15       	cp	r22, r1
    1400:	71 05       	cpc	r23, r1
    1402:	09 f4       	brne	.+2      	; 0x1406 <_ZN5RS23220executeInjectCommandEPKhh+0x20>
    1404:	47 c0       	rjmp	.+142    	; 0x1494 <_ZN5RS23220executeInjectCommandEPKhh+0xae>
    1406:	48 30       	cpi	r20, 0x08	; 8
    1408:	08 f4       	brcc	.+2      	; 0x140c <_ZN5RS23220executeInjectCommandEPKhh+0x26>
    140a:	44 c0       	rjmp	.+136    	; 0x1494 <_ZN5RS23220executeInjectCommandEPKhh+0xae>
    140c:	8b 01       	movw	r16, r22
    140e:	ce 01       	movw	r24, r28
    1410:	01 96       	adiw	r24, 0x01	; 1
    1412:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    1416:	f8 01       	movw	r30, r16
    1418:	81 81       	ldd	r24, Z+1	; 0x01
    141a:	8d 83       	std	Y+5, r24	; 0x05
    141c:	82 81       	ldd	r24, Z+2	; 0x02
    141e:	8e 83       	std	Y+6, r24	; 0x06
    1420:	83 81       	ldd	r24, Z+3	; 0x03
    1422:	88 87       	std	Y+8, r24	; 0x08
    1424:	84 81       	ldd	r24, Z+4	; 0x04
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	a0 e0       	ldi	r26, 0x00	; 0
    142a:	b0 e0       	ldi	r27, 0x00	; 0
    142c:	78 2f       	mov	r23, r24
    142e:	66 27       	eor	r22, r22
    1430:	55 27       	eor	r21, r21
    1432:	44 27       	eor	r20, r20
    1434:	95 81       	ldd	r25, Z+5	; 0x05
    1436:	89 2f       	mov	r24, r25
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	a0 e0       	ldi	r26, 0x00	; 0
    143c:	b0 e0       	ldi	r27, 0x00	; 0
    143e:	dc 01       	movw	r26, r24
    1440:	99 27       	eor	r25, r25
    1442:	88 27       	eor	r24, r24
    1444:	84 0f       	add	r24, r20
    1446:	95 1f       	adc	r25, r21
    1448:	a6 1f       	adc	r26, r22
    144a:	b7 1f       	adc	r27, r23
    144c:	27 81       	ldd	r18, Z+7	; 0x07
    144e:	82 0f       	add	r24, r18
    1450:	91 1d       	adc	r25, r1
    1452:	a1 1d       	adc	r26, r1
    1454:	b1 1d       	adc	r27, r1
    1456:	46 81       	ldd	r20, Z+6	; 0x06
    1458:	50 e0       	ldi	r21, 0x00	; 0
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	70 e0       	ldi	r23, 0x00	; 0
    145e:	76 2f       	mov	r23, r22
    1460:	65 2f       	mov	r22, r21
    1462:	54 2f       	mov	r21, r20
    1464:	44 27       	eor	r20, r20
    1466:	84 0f       	add	r24, r20
    1468:	95 1f       	adc	r25, r21
    146a:	a6 1f       	adc	r26, r22
    146c:	b7 1f       	adc	r27, r23
    146e:	89 83       	std	Y+1, r24	; 0x01
    1470:	9a 83       	std	Y+2, r25	; 0x02
    1472:	ab 83       	std	Y+3, r26	; 0x03
    1474:	bc 83       	std	Y+4, r27	; 0x04
    1476:	88 e0       	ldi	r24, 0x08	; 8
    1478:	38 96       	adiw	r30, 0x08	; 8
    147a:	de 01       	movw	r26, r28
    147c:	19 96       	adiw	r26, 0x09	; 9
    147e:	01 90       	ld	r0, Z+
    1480:	0d 92       	st	X+, r0
    1482:	8a 95       	dec	r24
    1484:	e1 f7       	brne	.-8      	; 0x147e <_ZN5RS23220executeInjectCommandEPKhh+0x98>
    1486:	be 01       	movw	r22, r28
    1488:	6f 5f       	subi	r22, 0xFF	; 255
    148a:	7f 4f       	sbci	r23, 0xFF	; 255
    148c:	8a e5       	ldi	r24, 0x5A	; 90
    148e:	92 e0       	ldi	r25, 0x02	; 2
    1490:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    1494:	60 96       	adiw	r28, 0x10	; 16
    1496:	0f b6       	in	r0, 0x3f	; 63
    1498:	f8 94       	cli
    149a:	de bf       	out	0x3e, r29	; 62
    149c:	0f be       	out	0x3f, r0	; 63
    149e:	cd bf       	out	0x3d, r28	; 61
    14a0:	df 91       	pop	r29
    14a2:	cf 91       	pop	r28
    14a4:	1f 91       	pop	r17
    14a6:	0f 91       	pop	r16
    14a8:	08 95       	ret

000014aa <_ZN5RS23217executeLogCommandEPKhh>:
    14aa:	ef 92       	push	r14
    14ac:	ff 92       	push	r15
    14ae:	0f 93       	push	r16
    14b0:	1f 93       	push	r17
    14b2:	fc 01       	movw	r30, r24
    14b4:	db 01       	movw	r26, r22
    14b6:	10 97       	sbiw	r26, 0x00	; 0
    14b8:	f1 f1       	breq	.+124    	; 0x1536 <_ZN5RS23217executeLogCommandEPKhh+0x8c>
    14ba:	44 30       	cpi	r20, 0x04	; 4
    14bc:	e1 f5       	brne	.+120    	; 0x1536 <_ZN5RS23217executeLogCommandEPKhh+0x8c>
    14be:	11 96       	adiw	r26, 0x01	; 1
    14c0:	8c 91       	ld	r24, X
    14c2:	11 97       	sbiw	r26, 0x01	; 1
    14c4:	92 81       	ldd	r25, Z+2	; 0x02
    14c6:	88 23       	and	r24, r24
    14c8:	11 f0       	breq	.+4      	; 0x14ce <_ZN5RS23217executeLogCommandEPKhh+0x24>
    14ca:	92 60       	ori	r25, 0x02	; 2
    14cc:	01 c0       	rjmp	.+2      	; 0x14d0 <_ZN5RS23217executeLogCommandEPKhh+0x26>
    14ce:	9d 7f       	andi	r25, 0xFD	; 253
    14d0:	92 83       	std	Z+2, r25	; 0x02
    14d2:	12 96       	adiw	r26, 0x02	; 2
    14d4:	8c 91       	ld	r24, X
    14d6:	12 97       	sbiw	r26, 0x02	; 2
    14d8:	88 23       	and	r24, r24
    14da:	11 f0       	breq	.+4      	; 0x14e0 <_ZN5RS23217executeLogCommandEPKhh+0x36>
    14dc:	94 60       	ori	r25, 0x04	; 4
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <_ZN5RS23217executeLogCommandEPKhh+0x38>
    14e0:	9b 7f       	andi	r25, 0xFB	; 251
    14e2:	92 83       	std	Z+2, r25	; 0x02
    14e4:	13 96       	adiw	r26, 0x03	; 3
    14e6:	8c 91       	ld	r24, X
    14e8:	88 23       	and	r24, r24
    14ea:	11 f0       	breq	.+4      	; 0x14f0 <_ZN5RS23217executeLogCommandEPKhh+0x46>
    14ec:	98 60       	ori	r25, 0x08	; 8
    14ee:	01 c0       	rjmp	.+2      	; 0x14f2 <_ZN5RS23217executeLogCommandEPKhh+0x48>
    14f0:	97 7f       	andi	r25, 0xF7	; 247
    14f2:	92 83       	std	Z+2, r25	; 0x02
    14f4:	91 ff       	sbrs	r25, 1
    14f6:	1f c0       	rjmp	.+62     	; 0x1536 <_ZN5RS23217executeLogCommandEPKhh+0x8c>
    14f8:	60 e0       	ldi	r22, 0x00	; 0
    14fa:	88 e4       	ldi	r24, 0x48	; 72
    14fc:	93 e0       	ldi	r25, 0x03	; 3
    14fe:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    1502:	61 e0       	ldi	r22, 0x01	; 1
    1504:	70 e0       	ldi	r23, 0x00	; 0
    1506:	80 e0       	ldi	r24, 0x00	; 0
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    150e:	e1 2c       	mov	r14, r1
    1510:	f1 2c       	mov	r15, r1
    1512:	87 01       	movw	r16, r14
    1514:	20 e0       	ldi	r18, 0x00	; 0
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	a9 01       	movw	r20, r18
    151a:	60 e0       	ldi	r22, 0x00	; 0
    151c:	88 e4       	ldi	r24, 0x48	; 72
    151e:	93 e0       	ldi	r25, 0x03	; 3
    1520:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    1524:	61 e0       	ldi	r22, 0x01	; 1
    1526:	88 e4       	ldi	r24, 0x48	; 72
    1528:	93 e0       	ldi	r25, 0x03	; 3
    152a:	1f 91       	pop	r17
    152c:	0f 91       	pop	r16
    152e:	ff 90       	pop	r15
    1530:	ef 90       	pop	r14
    1532:	0c 94 e5 29 	jmp	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    1536:	1f 91       	pop	r17
    1538:	0f 91       	pop	r16
    153a:	ff 90       	pop	r15
    153c:	ef 90       	pop	r14
    153e:	08 95       	ret

00001540 <_ZN5RS23220executeFilterCommandEPKhh>:
    1540:	8f 92       	push	r8
    1542:	9f 92       	push	r9
    1544:	af 92       	push	r10
    1546:	bf 92       	push	r11
    1548:	cf 92       	push	r12
    154a:	df 92       	push	r13
    154c:	ef 92       	push	r14
    154e:	ff 92       	push	r15
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	cf 93       	push	r28
    1556:	df 93       	push	r29
    1558:	61 15       	cp	r22, r1
    155a:	71 05       	cpc	r23, r1
    155c:	09 f4       	brne	.+2      	; 0x1560 <_ZN5RS23220executeFilterCommandEPKhh+0x20>
    155e:	a7 c0       	rjmp	.+334    	; 0x16ae <_ZN5RS23220executeFilterCommandEPKhh+0x16e>
    1560:	eb 01       	movw	r28, r22
    1562:	8b 80       	ldd	r8, Y+3	; 0x03
    1564:	91 2c       	mov	r9, r1
    1566:	a1 2c       	mov	r10, r1
    1568:	b1 2c       	mov	r11, r1
    156a:	78 2d       	mov	r23, r8
    156c:	66 27       	eor	r22, r22
    156e:	55 27       	eor	r21, r21
    1570:	44 27       	eor	r20, r20
    1572:	8c 80       	ldd	r8, Y+4	; 0x04
    1574:	91 2c       	mov	r9, r1
    1576:	a1 2c       	mov	r10, r1
    1578:	b1 2c       	mov	r11, r1
    157a:	54 01       	movw	r10, r8
    157c:	99 24       	eor	r9, r9
    157e:	88 24       	eor	r8, r8
    1580:	84 0e       	add	r8, r20
    1582:	95 1e       	adc	r9, r21
    1584:	a6 1e       	adc	r10, r22
    1586:	b7 1e       	adc	r11, r23
    1588:	8e 81       	ldd	r24, Y+6	; 0x06
    158a:	a5 01       	movw	r20, r10
    158c:	94 01       	movw	r18, r8
    158e:	28 0f       	add	r18, r24
    1590:	31 1d       	adc	r19, r1
    1592:	41 1d       	adc	r20, r1
    1594:	51 1d       	adc	r21, r1
    1596:	da 01       	movw	r26, r20
    1598:	c9 01       	movw	r24, r18
    159a:	8d 80       	ldd	r8, Y+5	; 0x05
    159c:	91 2c       	mov	r9, r1
    159e:	a1 2c       	mov	r10, r1
    15a0:	b1 2c       	mov	r11, r1
    15a2:	ba 2c       	mov	r11, r10
    15a4:	a9 2c       	mov	r10, r9
    15a6:	98 2c       	mov	r9, r8
    15a8:	88 24       	eor	r8, r8
    15aa:	88 0e       	add	r8, r24
    15ac:	99 1e       	adc	r9, r25
    15ae:	aa 1e       	adc	r10, r26
    15b0:	bb 1e       	adc	r11, r27
    15b2:	cf 80       	ldd	r12, Y+7	; 0x07
    15b4:	d1 2c       	mov	r13, r1
    15b6:	e1 2c       	mov	r14, r1
    15b8:	f1 2c       	mov	r15, r1
    15ba:	7c 2d       	mov	r23, r12
    15bc:	66 27       	eor	r22, r22
    15be:	55 27       	eor	r21, r21
    15c0:	44 27       	eor	r20, r20
    15c2:	c8 84       	ldd	r12, Y+8	; 0x08
    15c4:	d1 2c       	mov	r13, r1
    15c6:	e1 2c       	mov	r14, r1
    15c8:	f1 2c       	mov	r15, r1
    15ca:	76 01       	movw	r14, r12
    15cc:	dd 24       	eor	r13, r13
    15ce:	cc 24       	eor	r12, r12
    15d0:	c4 0e       	add	r12, r20
    15d2:	d5 1e       	adc	r13, r21
    15d4:	e6 1e       	adc	r14, r22
    15d6:	f7 1e       	adc	r15, r23
    15d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    15da:	a7 01       	movw	r20, r14
    15dc:	96 01       	movw	r18, r12
    15de:	28 0f       	add	r18, r24
    15e0:	31 1d       	adc	r19, r1
    15e2:	41 1d       	adc	r20, r1
    15e4:	51 1d       	adc	r21, r1
    15e6:	c9 84       	ldd	r12, Y+9	; 0x09
    15e8:	d1 2c       	mov	r13, r1
    15ea:	e1 2c       	mov	r14, r1
    15ec:	f1 2c       	mov	r15, r1
    15ee:	fe 2c       	mov	r15, r14
    15f0:	ed 2c       	mov	r14, r13
    15f2:	dc 2c       	mov	r13, r12
    15f4:	cc 24       	eor	r12, r12
    15f6:	c2 0e       	add	r12, r18
    15f8:	d3 1e       	adc	r13, r19
    15fa:	e4 1e       	adc	r14, r20
    15fc:	f5 1e       	adc	r15, r21
    15fe:	89 81       	ldd	r24, Y+1	; 0x01
    1600:	82 30       	cpi	r24, 0x02	; 2
    1602:	c1 f0       	breq	.+48     	; 0x1634 <_ZN5RS23220executeFilterCommandEPKhh+0xf4>
    1604:	83 30       	cpi	r24, 0x03	; 3
    1606:	71 f1       	breq	.+92     	; 0x1664 <_ZN5RS23220executeFilterCommandEPKhh+0x124>
    1608:	81 30       	cpi	r24, 0x01	; 1
    160a:	09 f0       	breq	.+2      	; 0x160e <_ZN5RS23220executeFilterCommandEPKhh+0xce>
    160c:	50 c0       	rjmp	.+160    	; 0x16ae <_ZN5RS23220executeFilterCommandEPKhh+0x16e>
    160e:	60 e0       	ldi	r22, 0x00	; 0
    1610:	88 e4       	ldi	r24, 0x48	; 72
    1612:	93 e0       	ldi	r25, 0x03	; 3
    1614:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    1618:	61 e0       	ldi	r22, 0x01	; 1
    161a:	70 e0       	ldi	r23, 0x00	; 0
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    1624:	87 01       	movw	r16, r14
    1626:	76 01       	movw	r14, r12
    1628:	a5 01       	movw	r20, r10
    162a:	94 01       	movw	r18, r8
    162c:	6a 81       	ldd	r22, Y+2	; 0x02
    162e:	88 e4       	ldi	r24, 0x48	; 72
    1630:	93 e0       	ldi	r25, 0x03	; 3
    1632:	2a c0       	rjmp	.+84     	; 0x1688 <_ZN5RS23220executeFilterCommandEPKhh+0x148>
    1634:	60 e0       	ldi	r22, 0x00	; 0
    1636:	84 e4       	ldi	r24, 0x44	; 68
    1638:	93 e0       	ldi	r25, 0x03	; 3
    163a:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    163e:	61 e0       	ldi	r22, 0x01	; 1
    1640:	70 e0       	ldi	r23, 0x00	; 0
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    164a:	87 01       	movw	r16, r14
    164c:	76 01       	movw	r14, r12
    164e:	a5 01       	movw	r20, r10
    1650:	94 01       	movw	r18, r8
    1652:	6a 81       	ldd	r22, Y+2	; 0x02
    1654:	84 e4       	ldi	r24, 0x44	; 68
    1656:	93 e0       	ldi	r25, 0x03	; 3
    1658:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    165c:	61 e0       	ldi	r22, 0x01	; 1
    165e:	84 e4       	ldi	r24, 0x44	; 68
    1660:	93 e0       	ldi	r25, 0x03	; 3
    1662:	17 c0       	rjmp	.+46     	; 0x1692 <_ZN5RS23220executeFilterCommandEPKhh+0x152>
    1664:	60 e0       	ldi	r22, 0x00	; 0
    1666:	80 e4       	ldi	r24, 0x40	; 64
    1668:	93 e0       	ldi	r25, 0x03	; 3
    166a:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    166e:	61 e0       	ldi	r22, 0x01	; 1
    1670:	70 e0       	ldi	r23, 0x00	; 0
    1672:	80 e0       	ldi	r24, 0x00	; 0
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    167a:	87 01       	movw	r16, r14
    167c:	76 01       	movw	r14, r12
    167e:	a5 01       	movw	r20, r10
    1680:	94 01       	movw	r18, r8
    1682:	6a 81       	ldd	r22, Y+2	; 0x02
    1684:	80 e4       	ldi	r24, 0x40	; 64
    1686:	93 e0       	ldi	r25, 0x03	; 3
    1688:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    168c:	61 e0       	ldi	r22, 0x01	; 1
    168e:	88 e4       	ldi	r24, 0x48	; 72
    1690:	93 e0       	ldi	r25, 0x03	; 3
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	1f 91       	pop	r17
    1698:	0f 91       	pop	r16
    169a:	ff 90       	pop	r15
    169c:	ef 90       	pop	r14
    169e:	df 90       	pop	r13
    16a0:	cf 90       	pop	r12
    16a2:	bf 90       	pop	r11
    16a4:	af 90       	pop	r10
    16a6:	9f 90       	pop	r9
    16a8:	8f 90       	pop	r8
    16aa:	0c 94 e5 29 	jmp	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    16ae:	df 91       	pop	r29
    16b0:	cf 91       	pop	r28
    16b2:	1f 91       	pop	r17
    16b4:	0f 91       	pop	r16
    16b6:	ff 90       	pop	r15
    16b8:	ef 90       	pop	r14
    16ba:	df 90       	pop	r13
    16bc:	cf 90       	pop	r12
    16be:	bf 90       	pop	r11
    16c0:	af 90       	pop	r10
    16c2:	9f 90       	pop	r9
    16c4:	8f 90       	pop	r8
    16c6:	08 95       	ret

000016c8 <_ZN7DisplayC1Ev>:
    16c8:	cf 92       	push	r12
    16ca:	df 92       	push	r13
    16cc:	ef 92       	push	r14
    16ce:	ff 92       	push	r15
    16d0:	0f 93       	push	r16
    16d2:	1f 93       	push	r17
    16d4:	cf 93       	push	r28
    16d6:	df 93       	push	r29
    16d8:	ec 01       	movw	r28, r24
    16da:	7c 01       	movw	r14, r24
    16dc:	82 e0       	ldi	r24, 0x02	; 2
    16de:	e8 0e       	add	r14, r24
    16e0:	f1 1c       	adc	r15, r1
    16e2:	87 01       	movw	r16, r14
    16e4:	6e 01       	movw	r12, r28
    16e6:	e2 e6       	ldi	r30, 0x62	; 98
    16e8:	ce 0e       	add	r12, r30
    16ea:	d1 1c       	adc	r13, r1
    16ec:	c8 01       	movw	r24, r16
    16ee:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    16f2:	00 5f       	subi	r16, 0xF0	; 240
    16f4:	1f 4f       	sbci	r17, 0xFF	; 255
    16f6:	0c 15       	cp	r16, r12
    16f8:	1d 05       	cpc	r17, r13
    16fa:	c1 f7       	brne	.-16     	; 0x16ec <_ZN7DisplayC1Ev+0x24>
    16fc:	86 e0       	ldi	r24, 0x06	; 6
    16fe:	f8 01       	movw	r30, r16
    1700:	80 83       	st	Z, r24
    1702:	11 82       	std	Z+1, r1	; 0x01
    1704:	12 82       	std	Z+2, r1	; 0x02
    1706:	13 82       	std	Z+3, r1	; 0x03
    1708:	f5 82       	std	Z+5, r15	; 0x05
    170a:	e4 82       	std	Z+4, r14	; 0x04
    170c:	81 e0       	ldi	r24, 0x01	; 1
    170e:	88 83       	st	Y, r24
    1710:	84 e0       	ldi	r24, 0x04	; 4
    1712:	89 83       	std	Y+1, r24	; 0x01
    1714:	fe 01       	movw	r30, r28
    1716:	e8 59       	subi	r30, 0x98	; 152
    1718:	ff 4f       	sbci	r31, 0xFF	; 255
    171a:	10 82       	st	Z, r1
    171c:	b8 96       	adiw	r30, 0x28	; 40
    171e:	10 82       	st	Z, r1
    1720:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <lastDequeue>
    1724:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <lastDequeue+0x1>
    1728:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <lastDequeue+0x2>
    172c:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <lastDequeue+0x3>
    1730:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <lastTempUpdate>
    1734:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <lastTempUpdate+0x1>
    1738:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <lastTempUpdate+0x2>
    173c:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <lastTempUpdate+0x3>
    1740:	c7 59       	subi	r28, 0x97	; 151
    1742:	df 4f       	sbci	r29, 0xFF	; 255
    1744:	19 82       	std	Y+1, r1	; 0x01
    1746:	18 82       	st	Y, r1
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	1f 91       	pop	r17
    174e:	0f 91       	pop	r16
    1750:	ff 90       	pop	r15
    1752:	ef 90       	pop	r14
    1754:	df 90       	pop	r13
    1756:	cf 90       	pop	r12
    1758:	08 95       	ret

0000175a <_ZN7Display16updateStatusBitsEv>:
    175a:	8f 92       	push	r8
    175c:	9f 92       	push	r9
    175e:	af 92       	push	r10
    1760:	bf 92       	push	r11
    1762:	cf 92       	push	r12
    1764:	df 92       	push	r13
    1766:	ef 92       	push	r14
    1768:	ff 92       	push	r15
    176a:	0f 93       	push	r16
    176c:	1f 93       	push	r17
    176e:	8c 01       	movw	r16, r24
    1770:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    1774:	c0 90 7c 03 	lds	r12, 0x037C	; 0x80037c <lastDequeue>
    1778:	d0 90 7d 03 	lds	r13, 0x037D	; 0x80037d <lastDequeue+0x1>
    177c:	e0 90 7e 03 	lds	r14, 0x037E	; 0x80037e <lastDequeue+0x2>
    1780:	f0 90 7f 03 	lds	r15, 0x037F	; 0x80037f <lastDequeue+0x3>
    1784:	46 01       	movw	r8, r12
    1786:	57 01       	movw	r10, r14
    1788:	20 e3       	ldi	r18, 0x30	; 48
    178a:	82 0e       	add	r8, r18
    178c:	91 1c       	adc	r9, r1
    178e:	a1 1c       	adc	r10, r1
    1790:	b1 1c       	adc	r11, r1
    1792:	f8 01       	movw	r30, r16
    1794:	e8 59       	subi	r30, 0x98	; 152
    1796:	ff 4f       	sbci	r31, 0xFF	; 255
    1798:	20 81       	ld	r18, Z
    179a:	86 16       	cp	r8, r22
    179c:	97 06       	cpc	r9, r23
    179e:	a8 06       	cpc	r10, r24
    17a0:	b9 06       	cpc	r11, r25
    17a2:	10 f4       	brcc	.+4      	; 0x17a8 <_ZN7Display16updateStatusBitsEv+0x4e>
    17a4:	22 60       	ori	r18, 0x02	; 2
    17a6:	01 c0       	rjmp	.+2      	; 0x17aa <_ZN7Display16updateStatusBitsEv+0x50>
    17a8:	2d 7f       	andi	r18, 0xFD	; 253
    17aa:	20 83       	st	Z, r18
    17ac:	46 01       	movw	r8, r12
    17ae:	57 01       	movw	r10, r14
    17b0:	28 ec       	ldi	r18, 0xC8	; 200
    17b2:	82 0e       	add	r8, r18
    17b4:	91 1c       	adc	r9, r1
    17b6:	a1 1c       	adc	r10, r1
    17b8:	b1 1c       	adc	r11, r1
    17ba:	20 81       	ld	r18, Z
    17bc:	86 16       	cp	r8, r22
    17be:	97 06       	cpc	r9, r23
    17c0:	a8 06       	cpc	r10, r24
    17c2:	b9 06       	cpc	r11, r25
    17c4:	10 f4       	brcc	.+4      	; 0x17ca <_ZN7Display16updateStatusBitsEv+0x70>
    17c6:	24 60       	ori	r18, 0x04	; 4
    17c8:	01 c0       	rjmp	.+2      	; 0x17cc <_ZN7Display16updateStatusBitsEv+0x72>
    17ca:	2b 7f       	andi	r18, 0xFB	; 251
    17cc:	20 83       	st	Z, r18
    17ce:	20 e1       	ldi	r18, 0x10	; 16
    17d0:	d2 0e       	add	r13, r18
    17d2:	e1 1c       	adc	r14, r1
    17d4:	f1 1c       	adc	r15, r1
    17d6:	c6 16       	cp	r12, r22
    17d8:	d7 06       	cpc	r13, r23
    17da:	e8 06       	cpc	r14, r24
    17dc:	f9 06       	cpc	r15, r25
    17de:	90 f4       	brcc	.+36     	; 0x1804 <_ZN7Display16updateStatusBitsEv+0xaa>
    17e0:	c0 90 56 02 	lds	r12, 0x0256	; 0x800256 <triggers>
    17e4:	d0 90 57 02 	lds	r13, 0x0257	; 0x800257 <triggers+0x1>
    17e8:	e0 90 58 02 	lds	r14, 0x0258	; 0x800258 <triggers+0x2>
    17ec:	f0 90 59 02 	lds	r15, 0x0259	; 0x800259 <triggers+0x3>
    17f0:	68 94       	set
    17f2:	e1 f8       	bld	r14, 1
    17f4:	c0 92 56 02 	sts	0x0256, r12	; 0x800256 <triggers>
    17f8:	d0 92 57 02 	sts	0x0257, r13	; 0x800257 <triggers+0x1>
    17fc:	e0 92 58 02 	sts	0x0258, r14	; 0x800258 <triggers+0x2>
    1800:	f0 92 59 02 	sts	0x0259, r15	; 0x800259 <triggers+0x3>
    1804:	20 81       	ld	r18, Z
    1806:	23 ff       	sbrs	r18, 3
    1808:	29 c0       	rjmp	.+82     	; 0x185c <_ZN7Display16updateStatusBitsEv+0x102>
    180a:	d8 01       	movw	r26, r16
    180c:	a7 59       	subi	r26, 0x97	; 151
    180e:	bf 4f       	sbci	r27, 0xFF	; 255
    1810:	4d 91       	ld	r20, X+
    1812:	5c 91       	ld	r21, X
    1814:	c0 90 78 03 	lds	r12, 0x0378	; 0x800378 <lastTempUpdate>
    1818:	d0 90 79 03 	lds	r13, 0x0379	; 0x800379 <lastTempUpdate+0x1>
    181c:	e0 90 7a 03 	lds	r14, 0x037A	; 0x80037a <lastTempUpdate+0x2>
    1820:	f0 90 7b 03 	lds	r15, 0x037B	; 0x80037b <lastTempUpdate+0x3>
    1824:	c4 0e       	add	r12, r20
    1826:	d5 1e       	adc	r13, r21
    1828:	e1 1c       	adc	r14, r1
    182a:	f1 1c       	adc	r15, r1
    182c:	c6 16       	cp	r12, r22
    182e:	d7 06       	cpc	r13, r23
    1830:	e8 06       	cpc	r14, r24
    1832:	f9 06       	cpc	r15, r25
    1834:	98 f4       	brcc	.+38     	; 0x185c <_ZN7Display16updateStatusBitsEv+0x102>
    1836:	27 7e       	andi	r18, 0xE7	; 231
    1838:	20 83       	st	Z, r18
    183a:	00 91 56 02 	lds	r16, 0x0256	; 0x800256 <triggers>
    183e:	10 91 57 02 	lds	r17, 0x0257	; 0x800257 <triggers+0x1>
    1842:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <triggers+0x2>
    1846:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <triggers+0x3>
    184a:	22 60       	ori	r18, 0x02	; 2
    184c:	00 93 56 02 	sts	0x0256, r16	; 0x800256 <triggers>
    1850:	10 93 57 02 	sts	0x0257, r17	; 0x800257 <triggers+0x1>
    1854:	20 93 58 02 	sts	0x0258, r18	; 0x800258 <triggers+0x2>
    1858:	30 93 59 02 	sts	0x0259, r19	; 0x800259 <triggers+0x3>
    185c:	00 91 56 02 	lds	r16, 0x0256	; 0x800256 <triggers>
    1860:	10 91 57 02 	lds	r17, 0x0257	; 0x800257 <triggers+0x1>
    1864:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <triggers+0x2>
    1868:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <triggers+0x3>
    186c:	22 ff       	sbrs	r18, 2
    186e:	33 c0       	rjmp	.+102    	; 0x18d6 <_ZN7Display16updateStatusBitsEv+0x17c>
    1870:	c0 90 74 03 	lds	r12, 0x0374	; 0x800374 <updateDisplayAt>
    1874:	d0 90 75 03 	lds	r13, 0x0375	; 0x800375 <updateDisplayAt+0x1>
    1878:	e0 90 76 03 	lds	r14, 0x0376	; 0x800376 <updateDisplayAt+0x2>
    187c:	f0 90 77 03 	lds	r15, 0x0377	; 0x800377 <updateDisplayAt+0x3>
    1880:	c1 14       	cp	r12, r1
    1882:	d1 04       	cpc	r13, r1
    1884:	e1 04       	cpc	r14, r1
    1886:	f1 04       	cpc	r15, r1
    1888:	79 f4       	brne	.+30     	; 0x18a8 <_ZN7Display16updateStatusBitsEv+0x14e>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	88 54       	subi	r24, 0x48	; 72
    1890:	94 4f       	sbci	r25, 0xF4	; 244
    1892:	af 4f       	sbci	r26, 0xFF	; 255
    1894:	bf 4f       	sbci	r27, 0xFF	; 255
    1896:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <updateDisplayAt>
    189a:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <updateDisplayAt+0x1>
    189e:	a0 93 76 03 	sts	0x0376, r26	; 0x800376 <updateDisplayAt+0x2>
    18a2:	b0 93 77 03 	sts	0x0377, r27	; 0x800377 <updateDisplayAt+0x3>
    18a6:	17 c0       	rjmp	.+46     	; 0x18d6 <_ZN7Display16updateStatusBitsEv+0x17c>
    18a8:	6c 15       	cp	r22, r12
    18aa:	7d 05       	cpc	r23, r13
    18ac:	8e 05       	cpc	r24, r14
    18ae:	9f 05       	cpc	r25, r15
    18b0:	90 f0       	brcs	.+36     	; 0x18d6 <_ZN7Display16updateStatusBitsEv+0x17c>
    18b2:	2b 7f       	andi	r18, 0xFB	; 251
    18b4:	22 60       	ori	r18, 0x02	; 2
    18b6:	00 93 56 02 	sts	0x0256, r16	; 0x800256 <triggers>
    18ba:	10 93 57 02 	sts	0x0257, r17	; 0x800257 <triggers+0x1>
    18be:	20 93 58 02 	sts	0x0258, r18	; 0x800258 <triggers+0x2>
    18c2:	30 93 59 02 	sts	0x0259, r19	; 0x800259 <triggers+0x3>
    18c6:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <updateDisplayAt>
    18ca:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <updateDisplayAt+0x1>
    18ce:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <updateDisplayAt+0x2>
    18d2:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <updateDisplayAt+0x3>
    18d6:	1f 91       	pop	r17
    18d8:	0f 91       	pop	r16
    18da:	ff 90       	pop	r15
    18dc:	ef 90       	pop	r14
    18de:	df 90       	pop	r13
    18e0:	cf 90       	pop	r12
    18e2:	bf 90       	pop	r11
    18e4:	af 90       	pop	r10
    18e6:	9f 90       	pop	r9
    18e8:	8f 90       	pop	r8
    18ea:	08 95       	ret

000018ec <_ZN7Display20setClusterParametersERKb>:
    18ec:	0f 93       	push	r16
    18ee:	1f 93       	push	r17
    18f0:	cf 93       	push	r28
    18f2:	df 93       	push	r29
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62
    18f8:	60 97       	sbiw	r28, 0x10	; 16
    18fa:	0f b6       	in	r0, 0x3f	; 63
    18fc:	f8 94       	cli
    18fe:	de bf       	out	0x3e, r29	; 62
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	cd bf       	out	0x3d, r28	; 61
    1904:	8b 01       	movw	r16, r22
    1906:	ce 01       	movw	r24, r28
    1908:	01 96       	adiw	r24, 0x01	; 1
    190a:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    190e:	85 ef       	ldi	r24, 0xF5	; 245
    1910:	90 ea       	ldi	r25, 0xA0	; 160
    1912:	a0 e3       	ldi	r26, 0x30	; 48
    1914:	b0 e1       	ldi	r27, 0x10	; 16
    1916:	89 83       	std	Y+1, r24	; 0x01
    1918:	9a 83       	std	Y+2, r25	; 0x02
    191a:	ab 83       	std	Y+3, r26	; 0x03
    191c:	bc 83       	std	Y+4, r27	; 0x04
    191e:	86 e0       	ldi	r24, 0x06	; 6
    1920:	88 87       	std	Y+8, r24	; 0x08
    1922:	82 e0       	ldi	r24, 0x02	; 2
    1924:	8d 83       	std	Y+5, r24	; 0x05
    1926:	98 e0       	ldi	r25, 0x08	; 8
    1928:	9e 83       	std	Y+6, r25	; 0x06
    192a:	8a 87       	std	Y+10, r24	; 0x0a
    192c:	f8 01       	movw	r30, r16
    192e:	80 81       	ld	r24, Z
    1930:	81 11       	cpse	r24, r1
    1932:	02 c0       	rjmp	.+4      	; 0x1938 <_ZN7Display20setClusterParametersERKb+0x4c>
    1934:	90 e6       	ldi	r25, 0x60	; 96
    1936:	01 c0       	rjmp	.+2      	; 0x193a <_ZN7Display20setClusterParametersERKb+0x4e>
    1938:	92 e6       	ldi	r25, 0x62	; 98
    193a:	9b 87       	std	Y+11, r25	; 0x0b
    193c:	88 23       	and	r24, r24
    193e:	11 f0       	breq	.+4      	; 0x1944 <_ZN7Display20setClusterParametersERKb+0x58>
    1940:	82 e0       	ldi	r24, 0x02	; 2
    1942:	8c 87       	std	Y+12, r24	; 0x0c
    1944:	85 e1       	ldi	r24, 0x15	; 21
    1946:	8e 87       	std	Y+14, r24	; 0x0e
    1948:	be 01       	movw	r22, r28
    194a:	6f 5f       	subi	r22, 0xFF	; 255
    194c:	7f 4f       	sbci	r23, 0xFF	; 255
    194e:	8a e5       	ldi	r24, 0x5A	; 90
    1950:	92 e0       	ldi	r25, 0x02	; 2
    1952:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    1956:	60 96       	adiw	r28, 0x10	; 16
    1958:	0f b6       	in	r0, 0x3f	; 63
    195a:	f8 94       	cli
    195c:	de bf       	out	0x3e, r29	; 62
    195e:	0f be       	out	0x3f, r0	; 63
    1960:	cd bf       	out	0x3d, r28	; 61
    1962:	df 91       	pop	r29
    1964:	cf 91       	pop	r28
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	08 95       	ret

0000196c <_ZN7Display10updateTextEPKhRS0_>:
    196c:	2f 92       	push	r2
    196e:	3f 92       	push	r3
    1970:	4f 92       	push	r4
    1972:	5f 92       	push	r5
    1974:	6f 92       	push	r6
    1976:	7f 92       	push	r7
    1978:	8f 92       	push	r8
    197a:	9f 92       	push	r9
    197c:	af 92       	push	r10
    197e:	bf 92       	push	r11
    1980:	cf 92       	push	r12
    1982:	df 92       	push	r13
    1984:	ef 92       	push	r14
    1986:	ff 92       	push	r15
    1988:	0f 93       	push	r16
    198a:	1f 93       	push	r17
    198c:	cf 93       	push	r28
    198e:	df 93       	push	r29
    1990:	cd b7       	in	r28, 0x3d	; 61
    1992:	de b7       	in	r29, 0x3e	; 62
    1994:	60 97       	sbiw	r28, 0x10	; 16
    1996:	0f b6       	in	r0, 0x3f	; 63
    1998:	f8 94       	cli
    199a:	de bf       	out	0x3e, r29	; 62
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	cd bf       	out	0x3d, r28	; 61
    19a0:	9c 01       	movw	r18, r24
    19a2:	8b 01       	movw	r16, r22
    19a4:	67 2b       	or	r22, r23
    19a6:	f1 f0       	breq	.+60     	; 0x19e4 <_ZN7Display10updateTextEPKhRS0_+0x78>
    19a8:	fa 01       	movw	r30, r20
    19aa:	80 81       	ld	r24, Z
    19ac:	84 32       	cpi	r24, 0x24	; 36
    19ae:	d0 f4       	brcc	.+52     	; 0x19e4 <_ZN7Display10updateTextEPKhRS0_+0x78>
    19b0:	86 30       	cpi	r24, 0x06	; 6
    19b2:	38 f0       	brcs	.+14     	; 0x19c2 <_ZN7Display10updateTextEPKhRS0_+0x56>
    19b4:	66 e0       	ldi	r22, 0x06	; 6
    19b6:	0e 94 3c 2f 	call	0x5e78	; 0x5e78 <__udivmodqi4>
    19ba:	77 24       	eor	r7, r7
    19bc:	73 94       	inc	r7
    19be:	78 0e       	add	r7, r24
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <_ZN7Display10updateTextEPKhRS0_+0x5a>
    19c2:	77 24       	eor	r7, r7
    19c4:	73 94       	inc	r7
    19c6:	69 01       	movw	r12, r18
    19c8:	f2 e6       	ldi	r31, 0x62	; 98
    19ca:	cf 0e       	add	r12, r31
    19cc:	d1 1c       	adc	r13, r1
    19ce:	f6 01       	movw	r30, r12
    19d0:	81 81       	ldd	r24, Z+1	; 0x01
    19d2:	67 2d       	mov	r22, r7
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	68 0f       	add	r22, r24
    19d8:	71 1d       	adc	r23, r1
    19da:	80 81       	ld	r24, Z
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	86 17       	cp	r24, r22
    19e0:	97 07       	cpc	r25, r23
    19e2:	14 f4       	brge	.+4      	; 0x19e8 <_ZN7Display10updateTextEPKhRS0_+0x7c>
    19e4:	80 e0       	ldi	r24, 0x00	; 0
    19e6:	7a c0       	rjmp	.+244    	; 0x1adc <_ZN7Display10updateTextEPKhRS0_+0x170>
    19e8:	7a 01       	movw	r14, r20
    19ea:	c9 01       	movw	r24, r18
    19ec:	21 e0       	ldi	r18, 0x01	; 1
    19ee:	29 83       	std	Y+1, r18	; 0x01
    19f0:	be 01       	movw	r22, r28
    19f2:	6f 5f       	subi	r22, 0xFF	; 255
    19f4:	7f 4f       	sbci	r23, 0xFF	; 255
    19f6:	0e 94 76 0c 	call	0x18ec	; 0x18ec <_ZN7Display20setClusterParametersERKb>
    19fa:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    19fe:	dc 01       	movw	r26, r24
    1a00:	cb 01       	movw	r24, r22
    1a02:	81 96       	adiw	r24, 0x21	; 33
    1a04:	a1 1d       	adc	r26, r1
    1a06:	b1 1d       	adc	r27, r1
    1a08:	80 93 7c 03 	sts	0x037C, r24	; 0x80037c <lastDequeue>
    1a0c:	90 93 7d 03 	sts	0x037D, r25	; 0x80037d <lastDequeue+0x1>
    1a10:	a0 93 7e 03 	sts	0x037E, r26	; 0x80037e <lastDequeue+0x2>
    1a14:	b0 93 7f 03 	sts	0x037F, r27	; 0x80037f <lastDequeue+0x3>
    1a18:	ce 01       	movw	r24, r28
    1a1a:	01 96       	adiw	r24, 0x01	; 1
    1a1c:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    1a20:	82 e0       	ldi	r24, 0x02	; 2
    1a22:	8d 83       	std	Y+5, r24	; 0x05
    1a24:	88 e0       	ldi	r24, 0x08	; 8
    1a26:	8e 83       	std	Y+6, r24	; 0x06
    1a28:	45 ef       	ldi	r20, 0xF5	; 245
    1a2a:	50 ec       	ldi	r21, 0xC0	; 192
    1a2c:	60 e3       	ldi	r22, 0x30	; 48
    1a2e:	70 e1       	ldi	r23, 0x10	; 16
    1a30:	49 83       	std	Y+1, r20	; 0x01
    1a32:	5a 83       	std	Y+2, r21	; 0x02
    1a34:	6b 83       	std	Y+3, r22	; 0x03
    1a36:	7c 83       	std	Y+4, r23	; 0x04
    1a38:	88 87       	std	Y+8, r24	; 0x08
    1a3a:	87 e2       	ldi	r24, 0x27	; 39
    1a3c:	89 87       	std	Y+9, r24	; 0x09
    1a3e:	7a 86       	std	Y+10, r7	; 0x0a
    1a40:	44 24       	eor	r4, r4
    1a42:	43 94       	inc	r4
    1a44:	51 2c       	mov	r5, r1
    1a46:	5e 01       	movw	r10, r28
    1a48:	fb e0       	ldi	r31, 0x0B	; 11
    1a4a:	af 0e       	add	r10, r31
    1a4c:	b1 1c       	adc	r11, r1
    1a4e:	86 e0       	ldi	r24, 0x06	; 6
    1a50:	28 2e       	mov	r2, r24
    1a52:	4e 01       	movw	r8, r28
    1a54:	89 e0       	ldi	r24, 0x09	; 9
    1a56:	88 0e       	add	r8, r24
    1a58:	91 1c       	adc	r9, r1
    1a5a:	94 e0       	ldi	r25, 0x04	; 4
    1a5c:	39 2e       	mov	r3, r25
    1a5e:	f5 01       	movw	r30, r10
    1a60:	82 2d       	mov	r24, r2
    1a62:	11 92       	st	Z+, r1
    1a64:	8a 95       	dec	r24
    1a66:	e9 f7       	brne	.-6      	; 0x1a62 <_ZN7Display10updateTextEPKhRS0_+0xf6>
    1a68:	f7 01       	movw	r30, r14
    1a6a:	60 80       	ld	r6, Z
    1a6c:	65 2d       	mov	r22, r5
    1a6e:	70 e0       	ldi	r23, 0x00	; 0
    1a70:	9b 01       	movw	r18, r22
    1a72:	2b 5f       	subi	r18, 0xFB	; 251
    1a74:	3f 4f       	sbci	r19, 0xFF	; 255
    1a76:	86 2d       	mov	r24, r6
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	28 17       	cp	r18, r24
    1a7c:	39 07       	cpc	r19, r25
    1a7e:	2c f0       	brlt	.+10     	; 0x1a8a <_ZN7Display10updateTextEPKhRS0_+0x11e>
    1a80:	65 18       	sub	r6, r5
    1a82:	f6 e0       	ldi	r31, 0x06	; 6
    1a84:	f6 15       	cp	r31, r6
    1a86:	30 f0       	brcs	.+12     	; 0x1a94 <_ZN7Display10updateTextEPKhRS0_+0x128>
    1a88:	02 c0       	rjmp	.+4      	; 0x1a8e <_ZN7Display10updateTextEPKhRS0_+0x122>
    1a8a:	26 e0       	ldi	r18, 0x06	; 6
    1a8c:	62 2e       	mov	r6, r18
    1a8e:	46 2d       	mov	r20, r6
    1a90:	50 e0       	ldi	r21, 0x00	; 0
    1a92:	02 c0       	rjmp	.+4      	; 0x1a98 <_ZN7Display10updateTextEPKhRS0_+0x12c>
    1a94:	46 e0       	ldi	r20, 0x06	; 6
    1a96:	50 e0       	ldi	r21, 0x00	; 0
    1a98:	60 0f       	add	r22, r16
    1a9a:	71 1f       	adc	r23, r17
    1a9c:	c5 01       	movw	r24, r10
    1a9e:	0e 94 ce 2f 	call	0x5f9c	; 0x5f9c <memcpy>
    1aa2:	56 0c       	add	r5, r6
    1aa4:	81 e0       	ldi	r24, 0x01	; 1
    1aa6:	78 12       	cpse	r7, r24
    1aa8:	0e c0       	rjmp	.+28     	; 0x1ac6 <_ZN7Display10updateTextEPKhRS0_+0x15a>
    1aaa:	be 01       	movw	r22, r28
    1aac:	6f 5f       	subi	r22, 0xFF	; 255
    1aae:	7f 4f       	sbci	r23, 0xFF	; 255
    1ab0:	c6 01       	movw	r24, r12
    1ab2:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    1ab6:	e6 e2       	ldi	r30, 0x26	; 38
    1ab8:	e9 87       	std	Y+9, r30	; 0x09
    1aba:	43 94       	inc	r4
    1abc:	4a 86       	std	Y+10, r4	; 0x0a
    1abe:	74 14       	cp	r7, r4
    1ac0:	70 f6       	brcc	.-100    	; 0x1a5e <_ZN7Display10updateTextEPKhRS0_+0xf2>
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	0b c0       	rjmp	.+22     	; 0x1adc <_ZN7Display10updateTextEPKhRS0_+0x170>
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	31 96       	adiw	r30, 0x01	; 1
    1aca:	80 85       	ldd	r24, Z+8	; 0x08
    1acc:	81 11       	cpse	r24, r1
    1ace:	01 c0       	rjmp	.+2      	; 0x1ad2 <_ZN7Display10updateTextEPKhRS0_+0x166>
    1ad0:	30 86       	std	Z+8, r3	; 0x08
    1ad2:	31 96       	adiw	r30, 0x01	; 1
    1ad4:	e8 15       	cp	r30, r8
    1ad6:	f9 05       	cpc	r31, r9
    1ad8:	c1 f7       	brne	.-16     	; 0x1aca <_ZN7Display10updateTextEPKhRS0_+0x15e>
    1ada:	e7 cf       	rjmp	.-50     	; 0x1aaa <_ZN7Display10updateTextEPKhRS0_+0x13e>
    1adc:	60 96       	adiw	r28, 0x10	; 16
    1ade:	0f b6       	in	r0, 0x3f	; 63
    1ae0:	f8 94       	cli
    1ae2:	de bf       	out	0x3e, r29	; 62
    1ae4:	0f be       	out	0x3f, r0	; 63
    1ae6:	cd bf       	out	0x3d, r28	; 61
    1ae8:	df 91       	pop	r29
    1aea:	cf 91       	pop	r28
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	ff 90       	pop	r15
    1af2:	ef 90       	pop	r14
    1af4:	df 90       	pop	r13
    1af6:	cf 90       	pop	r12
    1af8:	bf 90       	pop	r11
    1afa:	af 90       	pop	r10
    1afc:	9f 90       	pop	r9
    1afe:	8f 90       	pop	r8
    1b00:	7f 90       	pop	r7
    1b02:	6f 90       	pop	r6
    1b04:	5f 90       	pop	r5
    1b06:	4f 90       	pop	r4
    1b08:	3f 90       	pop	r3
    1b0a:	2f 90       	pop	r2
    1b0c:	08 95       	ret

00001b0e <_ZN7Display10updateTextEPKhRS0_RKj>:
    1b0e:	cf 92       	push	r12
    1b10:	df 92       	push	r13
    1b12:	ef 92       	push	r14
    1b14:	ff 92       	push	r15
    1b16:	1f 93       	push	r17
    1b18:	cf 93       	push	r28
    1b1a:	df 93       	push	r29
    1b1c:	7c 01       	movw	r14, r24
    1b1e:	a8 e6       	ldi	r26, 0x68	; 104
    1b20:	ea 0e       	add	r14, r26
    1b22:	f1 1c       	adc	r15, r1
    1b24:	d7 01       	movw	r26, r14
    1b26:	ec 91       	ld	r30, X
    1b28:	e4 fd       	sbrc	r30, 4
    1b2a:	07 c0       	rjmp	.+14     	; 0x1b3a <_ZN7Display10updateTextEPKhRS0_RKj+0x2c>
    1b2c:	69 01       	movw	r12, r18
    1b2e:	ec 01       	movw	r28, r24
    1b30:	0e 94 b6 0c 	call	0x196c	; 0x196c <_ZN7Display10updateTextEPKhRS0_>
    1b34:	18 2f       	mov	r17, r24
    1b36:	81 11       	cpse	r24, r1
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <_ZN7Display10updateTextEPKhRS0_RKj+0x30>
    1b3a:	10 e0       	ldi	r17, 0x00	; 0
    1b3c:	15 c0       	rjmp	.+42     	; 0x1b68 <_ZN7Display10updateTextEPKhRS0_RKj+0x5a>
    1b3e:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    1b42:	60 93 78 03 	sts	0x0378, r22	; 0x800378 <lastTempUpdate>
    1b46:	70 93 79 03 	sts	0x0379, r23	; 0x800379 <lastTempUpdate+0x1>
    1b4a:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <lastTempUpdate+0x2>
    1b4e:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <lastTempUpdate+0x3>
    1b52:	f6 01       	movw	r30, r12
    1b54:	80 81       	ld	r24, Z
    1b56:	91 81       	ldd	r25, Z+1	; 0x01
    1b58:	c7 59       	subi	r28, 0x97	; 151
    1b5a:	df 4f       	sbci	r29, 0xFF	; 255
    1b5c:	99 83       	std	Y+1, r25	; 0x01
    1b5e:	88 83       	st	Y, r24
    1b60:	d7 01       	movw	r26, r14
    1b62:	8c 91       	ld	r24, X
    1b64:	88 60       	ori	r24, 0x08	; 8
    1b66:	8c 93       	st	X, r24
    1b68:	81 2f       	mov	r24, r17
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	1f 91       	pop	r17
    1b70:	ff 90       	pop	r15
    1b72:	ef 90       	pop	r14
    1b74:	df 90       	pop	r13
    1b76:	cf 90       	pop	r12
    1b78:	08 95       	ret

00001b7a <_ZN7Display23handleTemporaryTriggersEv>:
    1b7a:	ef 92       	push	r14
    1b7c:	ff 92       	push	r15
    1b7e:	0f 93       	push	r16
    1b80:	1f 93       	push	r17
    1b82:	cf 93       	push	r28
    1b84:	df 93       	push	r29
    1b86:	00 d0       	rcall	.+0      	; 0x1b88 <_ZN7Display23handleTemporaryTriggersEv+0xe>
    1b88:	1f 92       	push	r1
    1b8a:	cd b7       	in	r28, 0x3d	; 61
    1b8c:	de b7       	in	r29, 0x3e	; 62
    1b8e:	8c 01       	movw	r16, r24
    1b90:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    1b94:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1b98:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1b9c:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1ba0:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1ba4:	94 ff       	sbrs	r25, 4
    1ba6:	37 c0       	rjmp	.+110    	; 0x1c16 <_ZN7Display23handleTemporaryTriggersEv+0x9c>
    1ba8:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <dimmer>
    1bac:	1f 92       	push	r1
    1bae:	8f 93       	push	r24
    1bb0:	8c e5       	ldi	r24, 0x5C	; 92
    1bb2:	92 e0       	ldi	r25, 0x02	; 2
    1bb4:	9f 93       	push	r25
    1bb6:	8f 93       	push	r24
    1bb8:	1f 92       	push	r1
    1bba:	81 e1       	ldi	r24, 0x11	; 17
    1bbc:	8f 93       	push	r24
    1bbe:	78 01       	movw	r14, r16
    1bc0:	2b e6       	ldi	r18, 0x6B	; 107
    1bc2:	e2 0e       	add	r14, r18
    1bc4:	f1 1c       	adc	r15, r1
    1bc6:	ff 92       	push	r15
    1bc8:	ef 92       	push	r14
    1bca:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1bce:	f8 01       	movw	r30, r16
    1bd0:	e0 57       	subi	r30, 0x70	; 112
    1bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd4:	80 83       	st	Z, r24
    1bd6:	20 ed       	ldi	r18, 0xD0	; 208
    1bd8:	37 e0       	ldi	r19, 0x07	; 7
    1bda:	3a 83       	std	Y+2, r19	; 0x02
    1bdc:	29 83       	std	Y+1, r18	; 0x01
    1bde:	8b 83       	std	Y+3, r24	; 0x03
    1be0:	9e 01       	movw	r18, r28
    1be2:	2f 5f       	subi	r18, 0xFF	; 255
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	ae 01       	movw	r20, r28
    1be8:	4d 5f       	subi	r20, 0xFD	; 253
    1bea:	5f 4f       	sbci	r21, 0xFF	; 255
    1bec:	b7 01       	movw	r22, r14
    1bee:	c8 01       	movw	r24, r16
    1bf0:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <_ZN7Display10updateTextEPKhRS0_RKj>
    1bf4:	0f b6       	in	r0, 0x3f	; 63
    1bf6:	f8 94       	cli
    1bf8:	de bf       	out	0x3e, r29	; 62
    1bfa:	0f be       	out	0x3f, r0	; 63
    1bfc:	cd bf       	out	0x3d, r28	; 61
    1bfe:	88 23       	and	r24, r24
    1c00:	51 f0       	breq	.+20     	; 0x1c16 <_ZN7Display23handleTemporaryTriggersEv+0x9c>
    1c02:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1c06:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1c0a:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1c0e:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1c12:	9f 7e       	andi	r25, 0xEF	; 239
    1c14:	bb c0       	rjmp	.+374    	; 0x1d8c <_ZN7Display23handleTemporaryTriggersEv+0x212>
    1c16:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1c1a:	85 ff       	sbrs	r24, 5
    1c1c:	37 c0       	rjmp	.+110    	; 0x1c8c <_ZN7Display23handleTemporaryTriggersEv+0x112>
    1c1e:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <hvacStatus>
    1c22:	1f 92       	push	r1
    1c24:	8f 93       	push	r24
    1c26:	84 e5       	ldi	r24, 0x54	; 84
    1c28:	92 e0       	ldi	r25, 0x02	; 2
    1c2a:	9f 93       	push	r25
    1c2c:	8f 93       	push	r24
    1c2e:	1f 92       	push	r1
    1c30:	81 e1       	ldi	r24, 0x11	; 17
    1c32:	8f 93       	push	r24
    1c34:	78 01       	movw	r14, r16
    1c36:	3b e6       	ldi	r19, 0x6B	; 107
    1c38:	e3 0e       	add	r14, r19
    1c3a:	f1 1c       	adc	r15, r1
    1c3c:	ff 92       	push	r15
    1c3e:	ef 92       	push	r14
    1c40:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1c44:	f8 01       	movw	r30, r16
    1c46:	e0 57       	subi	r30, 0x70	; 112
    1c48:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4a:	80 83       	st	Z, r24
    1c4c:	20 ed       	ldi	r18, 0xD0	; 208
    1c4e:	37 e0       	ldi	r19, 0x07	; 7
    1c50:	3a 83       	std	Y+2, r19	; 0x02
    1c52:	29 83       	std	Y+1, r18	; 0x01
    1c54:	8b 83       	std	Y+3, r24	; 0x03
    1c56:	9e 01       	movw	r18, r28
    1c58:	2f 5f       	subi	r18, 0xFF	; 255
    1c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5c:	ae 01       	movw	r20, r28
    1c5e:	4d 5f       	subi	r20, 0xFD	; 253
    1c60:	5f 4f       	sbci	r21, 0xFF	; 255
    1c62:	b7 01       	movw	r22, r14
    1c64:	c8 01       	movw	r24, r16
    1c66:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <_ZN7Display10updateTextEPKhRS0_RKj>
    1c6a:	0f b6       	in	r0, 0x3f	; 63
    1c6c:	f8 94       	cli
    1c6e:	de bf       	out	0x3e, r29	; 62
    1c70:	0f be       	out	0x3f, r0	; 63
    1c72:	cd bf       	out	0x3d, r28	; 61
    1c74:	88 23       	and	r24, r24
    1c76:	51 f0       	breq	.+20     	; 0x1c8c <_ZN7Display23handleTemporaryTriggersEv+0x112>
    1c78:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1c7c:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1c80:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1c84:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1c88:	8f 7d       	andi	r24, 0xDF	; 223
    1c8a:	80 c0       	rjmp	.+256    	; 0x1d8c <_ZN7Display23handleTemporaryTriggersEv+0x212>
    1c8c:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1c90:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1c94:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1c98:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1c9c:	a3 ff       	sbrs	r26, 3
    1c9e:	37 c0       	rjmp	.+110    	; 0x1d0e <_ZN7Display23handleTemporaryTriggersEv+0x194>
    1ca0:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <xmChannel>
    1ca4:	1f 92       	push	r1
    1ca6:	8f 93       	push	r24
    1ca8:	85 e4       	ldi	r24, 0x45	; 69
    1caa:	92 e0       	ldi	r25, 0x02	; 2
    1cac:	9f 93       	push	r25
    1cae:	8f 93       	push	r24
    1cb0:	1f 92       	push	r1
    1cb2:	81 e1       	ldi	r24, 0x11	; 17
    1cb4:	8f 93       	push	r24
    1cb6:	78 01       	movw	r14, r16
    1cb8:	3b e6       	ldi	r19, 0x6B	; 107
    1cba:	e3 0e       	add	r14, r19
    1cbc:	f1 1c       	adc	r15, r1
    1cbe:	ff 92       	push	r15
    1cc0:	ef 92       	push	r14
    1cc2:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1cc6:	f8 01       	movw	r30, r16
    1cc8:	e0 57       	subi	r30, 0x70	; 112
    1cca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ccc:	80 83       	st	Z, r24
    1cce:	20 ed       	ldi	r18, 0xD0	; 208
    1cd0:	37 e0       	ldi	r19, 0x07	; 7
    1cd2:	3a 83       	std	Y+2, r19	; 0x02
    1cd4:	29 83       	std	Y+1, r18	; 0x01
    1cd6:	8b 83       	std	Y+3, r24	; 0x03
    1cd8:	9e 01       	movw	r18, r28
    1cda:	2f 5f       	subi	r18, 0xFF	; 255
    1cdc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cde:	ae 01       	movw	r20, r28
    1ce0:	4d 5f       	subi	r20, 0xFD	; 253
    1ce2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ce4:	b7 01       	movw	r22, r14
    1ce6:	c8 01       	movw	r24, r16
    1ce8:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <_ZN7Display10updateTextEPKhRS0_RKj>
    1cec:	0f b6       	in	r0, 0x3f	; 63
    1cee:	f8 94       	cli
    1cf0:	de bf       	out	0x3e, r29	; 62
    1cf2:	0f be       	out	0x3f, r0	; 63
    1cf4:	cd bf       	out	0x3d, r28	; 61
    1cf6:	88 23       	and	r24, r24
    1cf8:	51 f0       	breq	.+20     	; 0x1d0e <_ZN7Display23handleTemporaryTriggersEv+0x194>
    1cfa:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1cfe:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1d02:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1d06:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1d0a:	a7 7f       	andi	r26, 0xF7	; 247
    1d0c:	3f c0       	rjmp	.+126    	; 0x1d8c <_ZN7Display23handleTemporaryTriggersEv+0x212>
    1d0e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1d12:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1d16:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1d1a:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1d1e:	a4 fd       	sbrc	r26, 4
    1d20:	02 c0       	rjmp	.+4      	; 0x1d26 <_ZN7Display23handleTemporaryTriggersEv+0x1ac>
    1d22:	80 e0       	ldi	r24, 0x00	; 0
    1d24:	3c c0       	rjmp	.+120    	; 0x1d9e <_ZN7Display23handleTemporaryTriggersEv+0x224>
    1d26:	78 01       	movw	r14, r16
    1d28:	3b e6       	ldi	r19, 0x6B	; 107
    1d2a:	e3 0e       	add	r14, r19
    1d2c:	f1 1c       	adc	r15, r1
    1d2e:	85 e2       	ldi	r24, 0x25	; 37
    1d30:	92 e0       	ldi	r25, 0x02	; 2
    1d32:	9f 93       	push	r25
    1d34:	8f 93       	push	r24
    1d36:	1f 92       	push	r1
    1d38:	84 e2       	ldi	r24, 0x24	; 36
    1d3a:	8f 93       	push	r24
    1d3c:	ff 92       	push	r15
    1d3e:	ef 92       	push	r14
    1d40:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1d44:	f8 01       	movw	r30, r16
    1d46:	e0 57       	subi	r30, 0x70	; 112
    1d48:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4a:	80 83       	st	Z, r24
    1d4c:	20 ea       	ldi	r18, 0xA0	; 160
    1d4e:	3f e0       	ldi	r19, 0x0F	; 15
    1d50:	3a 83       	std	Y+2, r19	; 0x02
    1d52:	29 83       	std	Y+1, r18	; 0x01
    1d54:	8b 83       	std	Y+3, r24	; 0x03
    1d56:	9e 01       	movw	r18, r28
    1d58:	2f 5f       	subi	r18, 0xFF	; 255
    1d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d5c:	ae 01       	movw	r20, r28
    1d5e:	4d 5f       	subi	r20, 0xFD	; 253
    1d60:	5f 4f       	sbci	r21, 0xFF	; 255
    1d62:	b7 01       	movw	r22, r14
    1d64:	c8 01       	movw	r24, r16
    1d66:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <_ZN7Display10updateTextEPKhRS0_RKj>
    1d6a:	0f 90       	pop	r0
    1d6c:	0f 90       	pop	r0
    1d6e:	0f 90       	pop	r0
    1d70:	0f 90       	pop	r0
    1d72:	0f 90       	pop	r0
    1d74:	0f 90       	pop	r0
    1d76:	88 23       	and	r24, r24
    1d78:	a1 f2       	breq	.-88     	; 0x1d22 <_ZN7Display23handleTemporaryTriggersEv+0x1a8>
    1d7a:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    1d7e:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    1d82:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    1d86:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    1d8a:	af 7e       	andi	r26, 0xEF	; 239
    1d8c:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    1d90:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    1d94:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    1d98:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    1d9c:	81 e0       	ldi	r24, 0x01	; 1
    1d9e:	0f 90       	pop	r0
    1da0:	0f 90       	pop	r0
    1da2:	0f 90       	pop	r0
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	ff 90       	pop	r15
    1dae:	ef 90       	pop	r14
    1db0:	08 95       	ret

00001db2 <_ZN7Display13getGearStringEv>:
    1db2:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <currentGear>
    1db6:	80 33       	cpi	r24, 0x30	; 48
    1db8:	d1 f0       	breq	.+52     	; 0x1dee <_ZN7Display13getGearStringEv+0x3c>
    1dba:	38 f4       	brcc	.+14     	; 0x1dca <_ZN7Display13getGearStringEv+0x18>
    1dbc:	80 31       	cpi	r24, 0x10	; 16
    1dbe:	a1 f0       	breq	.+40     	; 0x1de8 <_ZN7Display13getGearStringEv+0x36>
    1dc0:	80 32       	cpi	r24, 0x20	; 32
    1dc2:	c1 f4       	brne	.+48     	; 0x1df4 <_ZN7Display13getGearStringEv+0x42>
    1dc4:	8e ef       	ldi	r24, 0xFE	; 254
    1dc6:	91 e0       	ldi	r25, 0x01	; 1
    1dc8:	08 95       	ret
    1dca:	80 3d       	cpi	r24, 0xD0	; 208
    1dcc:	51 f0       	breq	.+20     	; 0x1de2 <_ZN7Display13getGearStringEv+0x30>
    1dce:	80 3e       	cpi	r24, 0xE0	; 224
    1dd0:	29 f0       	breq	.+10     	; 0x1ddc <_ZN7Display13getGearStringEv+0x2a>
    1dd2:	80 34       	cpi	r24, 0x40	; 64
    1dd4:	79 f4       	brne	.+30     	; 0x1df4 <_ZN7Display13getGearStringEv+0x42>
    1dd6:	8f ee       	ldi	r24, 0xEF	; 239
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	08 95       	ret
    1ddc:	84 e1       	ldi	r24, 0x14	; 20
    1dde:	92 e0       	ldi	r25, 0x02	; 2
    1de0:	08 95       	ret
    1de2:	8a e0       	ldi	r24, 0x0A	; 10
    1de4:	92 e0       	ldi	r25, 0x02	; 2
    1de6:	08 95       	ret
    1de8:	84 e0       	ldi	r24, 0x04	; 4
    1dea:	92 e0       	ldi	r25, 0x02	; 2
    1dec:	08 95       	ret
    1dee:	86 ef       	ldi	r24, 0xF6	; 246
    1df0:	91 e0       	ldi	r25, 0x01	; 1
    1df2:	08 95       	ret
    1df4:	8e e1       	ldi	r24, 0x1E	; 30
    1df6:	92 e0       	ldi	r25, 0x02	; 2
    1df8:	08 95       	ret

00001dfa <_ZN7Display13writeToBufferEPcRKhRm.part.11>:
    1dfa:	af 92       	push	r10
    1dfc:	bf 92       	push	r11
    1dfe:	cf 92       	push	r12
    1e00:	df 92       	push	r13
    1e02:	ef 92       	push	r14
    1e04:	ff 92       	push	r15
    1e06:	0f 93       	push	r16
    1e08:	1f 93       	push	r17
    1e0a:	cf 93       	push	r28
    1e0c:	df 93       	push	r29
    1e0e:	cd b7       	in	r28, 0x3d	; 61
    1e10:	de b7       	in	r29, 0x3e	; 62
    1e12:	68 97       	sbiw	r28, 0x18	; 24
    1e14:	0f b6       	in	r0, 0x3f	; 63
    1e16:	f8 94       	cli
    1e18:	de bf       	out	0x3e, r29	; 62
    1e1a:	0f be       	out	0x3f, r0	; 63
    1e1c:	cd bf       	out	0x3d, r28	; 61
    1e1e:	5b 01       	movw	r10, r22
    1e20:	62 eb       	ldi	r22, 0xB2	; 178
    1e22:	73 e0       	ldi	r23, 0x03	; 3
    1e24:	7a 83       	std	Y+2, r23	; 0x02
    1e26:	69 83       	std	Y+1, r22	; 0x01
    1e28:	65 ea       	ldi	r22, 0xA5	; 165
    1e2a:	73 e0       	ldi	r23, 0x03	; 3
    1e2c:	7c 83       	std	Y+4, r23	; 0x04
    1e2e:	6b 83       	std	Y+3, r22	; 0x03
    1e30:	68 e9       	ldi	r22, 0x98	; 152
    1e32:	73 e0       	ldi	r23, 0x03	; 3
    1e34:	7e 83       	std	Y+6, r23	; 0x06
    1e36:	6d 83       	std	Y+5, r22	; 0x05
    1e38:	6b e8       	ldi	r22, 0x8B	; 139
    1e3a:	73 e0       	ldi	r23, 0x03	; 3
    1e3c:	78 87       	std	Y+8, r23	; 0x08
    1e3e:	6f 83       	std	Y+7, r22	; 0x07
    1e40:	6e e7       	ldi	r22, 0x7E	; 126
    1e42:	73 e0       	ldi	r23, 0x03	; 3
    1e44:	7a 87       	std	Y+10, r23	; 0x0a
    1e46:	69 87       	std	Y+9, r22	; 0x09
    1e48:	61 e7       	ldi	r22, 0x71	; 113
    1e4a:	73 e0       	ldi	r23, 0x03	; 3
    1e4c:	7c 87       	std	Y+12, r23	; 0x0c
    1e4e:	6b 87       	std	Y+11, r22	; 0x0b
    1e50:	64 e6       	ldi	r22, 0x64	; 100
    1e52:	73 e0       	ldi	r23, 0x03	; 3
    1e54:	7e 87       	std	Y+14, r23	; 0x0e
    1e56:	6d 87       	std	Y+13, r22	; 0x0d
    1e58:	67 e5       	ldi	r22, 0x57	; 87
    1e5a:	73 e0       	ldi	r23, 0x03	; 3
    1e5c:	78 8b       	std	Y+16, r23	; 0x10
    1e5e:	6f 87       	std	Y+15, r22	; 0x0f
    1e60:	69 e4       	ldi	r22, 0x49	; 73
    1e62:	73 e0       	ldi	r23, 0x03	; 3
    1e64:	7a 8b       	std	Y+18, r23	; 0x12
    1e66:	69 8b       	std	Y+17, r22	; 0x11
    1e68:	6c e3       	ldi	r22, 0x3C	; 60
    1e6a:	73 e0       	ldi	r23, 0x03	; 3
    1e6c:	7c 8b       	std	Y+20, r23	; 0x14
    1e6e:	6b 8b       	std	Y+19, r22	; 0x13
    1e70:	6f e2       	ldi	r22, 0x2F	; 47
    1e72:	73 e0       	ldi	r23, 0x03	; 3
    1e74:	7e 8b       	std	Y+22, r23	; 0x16
    1e76:	6d 8b       	std	Y+21, r22	; 0x15
    1e78:	62 e2       	ldi	r22, 0x22	; 34
    1e7a:	73 e0       	ldi	r23, 0x03	; 3
    1e7c:	78 8f       	std	Y+24, r23	; 0x18
    1e7e:	6f 8b       	std	Y+23, r22	; 0x17
    1e80:	62 e1       	ldi	r22, 0x12	; 18
    1e82:	d5 01       	movw	r26, r10
    1e84:	1d 92       	st	X+, r1
    1e86:	6a 95       	dec	r22
    1e88:	e9 f7       	brne	.-6      	; 0x1e84 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x8a>
    1e8a:	da 01       	movw	r26, r20
    1e8c:	ec 91       	ld	r30, X
    1e8e:	4e 2f       	mov	r20, r30
    1e90:	50 e0       	ldi	r21, 0x00	; 0
    1e92:	fa 01       	movw	r30, r20
    1e94:	31 97       	sbiw	r30, 0x01	; 1
    1e96:	e1 31       	cpi	r30, 0x11	; 17
    1e98:	f1 05       	cpc	r31, r1
    1e9a:	08 f0       	brcs	.+2      	; 0x1e9e <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xa4>
    1e9c:	06 c2       	rjmp	.+1036   	; 0x22aa <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x4b0>
    1e9e:	69 01       	movw	r12, r18
    1ea0:	ea 5a       	subi	r30, 0xAA	; 170
    1ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea4:	0c 94 92 2f 	jmp	0x5f24	; 0x5f24 <__tablejump2__>
    1ea8:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <_ZN7Display13getGearStringEv>
    1eac:	2d e2       	ldi	r18, 0x2D	; 45
    1eae:	31 e0       	ldi	r19, 0x01	; 1
    1eb0:	3f 93       	push	r19
    1eb2:	2f 93       	push	r18
    1eb4:	9f 93       	push	r25
    1eb6:	8f 93       	push	r24
    1eb8:	1f 92       	push	r1
    1eba:	82 e1       	ldi	r24, 0x12	; 18
    1ebc:	8f 93       	push	r24
    1ebe:	bf 92       	push	r11
    1ec0:	af 92       	push	r10
    1ec2:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1ec6:	80 e1       	ldi	r24, 0x10	; 16
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	a0 e0       	ldi	r26, 0x00	; 0
    1ecc:	b0 e0       	ldi	r27, 0x00	; 0
    1ece:	13 c0       	rjmp	.+38     	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    1ed0:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <manifoldPressure>
    1ed4:	1f 92       	push	r1
    1ed6:	8f 93       	push	r24
    1ed8:	82 e1       	ldi	r24, 0x12	; 18
    1eda:	93 e0       	ldi	r25, 0x03	; 3
    1edc:	9f 93       	push	r25
    1ede:	8f 93       	push	r24
    1ee0:	1f 92       	push	r1
    1ee2:	82 e1       	ldi	r24, 0x12	; 18
    1ee4:	8f 93       	push	r24
    1ee6:	bf 92       	push	r11
    1ee8:	af 92       	push	r10
    1eea:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1eee:	80 e0       	ldi	r24, 0x00	; 0
    1ef0:	92 e0       	ldi	r25, 0x02	; 2
    1ef2:	a0 e0       	ldi	r26, 0x00	; 0
    1ef4:	b0 e0       	ldi	r27, 0x00	; 0
    1ef6:	f6 01       	movw	r30, r12
    1ef8:	80 83       	st	Z, r24
    1efa:	91 83       	std	Z+1, r25	; 0x01
    1efc:	a2 83       	std	Z+2, r26	; 0x02
    1efe:	b3 83       	std	Z+3, r27	; 0x03
    1f00:	0f b6       	in	r0, 0x3f	; 63
    1f02:	f8 94       	cli
    1f04:	de bf       	out	0x3e, r29	; 62
    1f06:	0f be       	out	0x3f, r0	; 63
    1f08:	cd bf       	out	0x3d, r28	; 61
    1f0a:	d5 c1       	rjmp	.+938    	; 0x22b6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x4bc>
    1f0c:	7c 01       	movw	r14, r24
    1f0e:	ab e6       	ldi	r26, 0x6B	; 107
    1f10:	ea 0e       	add	r14, r26
    1f12:	f1 1c       	adc	r15, r1
    1f14:	60 91 29 02 	lds	r22, 0x0229	; 0x800229 <intakeAirTemperature>
    1f18:	70 91 2a 02 	lds	r23, 0x022A	; 0x80022a <intakeAirTemperature+0x1>
    1f1c:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <intakeAirTemperature+0x2>
    1f20:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <intakeAirTemperature+0x3>
    1f24:	87 01       	movw	r16, r14
    1f26:	21 e0       	ldi	r18, 0x01	; 1
    1f28:	4b ef       	ldi	r20, 0xFB	; 251
    1f2a:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    1f2e:	ff 92       	push	r15
    1f30:	ef 92       	push	r14
    1f32:	85 e0       	ldi	r24, 0x05	; 5
    1f34:	93 e0       	ldi	r25, 0x03	; 3
    1f36:	9f 93       	push	r25
    1f38:	8f 93       	push	r24
    1f3a:	1f 92       	push	r1
    1f3c:	82 e1       	ldi	r24, 0x12	; 18
    1f3e:	8f 93       	push	r24
    1f40:	bf 92       	push	r11
    1f42:	af 92       	push	r10
    1f44:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1f48:	80 e0       	ldi	r24, 0x00	; 0
    1f4a:	94 e0       	ldi	r25, 0x04	; 4
    1f4c:	a0 e0       	ldi	r26, 0x00	; 0
    1f4e:	b0 e0       	ldi	r27, 0x00	; 0
    1f50:	d2 cf       	rjmp	.-92     	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    1f52:	80 91 55 02 	lds	r24, 0x0255	; 0x800255 <speedMPH>
    1f56:	1f 92       	push	r1
    1f58:	8f 93       	push	r24
    1f5a:	8d ef       	ldi	r24, 0xFD	; 253
    1f5c:	92 e0       	ldi	r25, 0x02	; 2
    1f5e:	15 c0       	rjmp	.+42     	; 0x1f8a <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x190>
    1f60:	7c 01       	movw	r14, r24
    1f62:	ab e6       	ldi	r26, 0x6B	; 107
    1f64:	ea 0e       	add	r14, r26
    1f66:	f1 1c       	adc	r15, r1
    1f68:	60 91 51 02 	lds	r22, 0x0251	; 0x800251 <wheelRPM>
    1f6c:	70 91 52 02 	lds	r23, 0x0252	; 0x800252 <wheelRPM+0x1>
    1f70:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <wheelRPM+0x2>
    1f74:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <wheelRPM+0x3>
    1f78:	87 01       	movw	r16, r14
    1f7a:	21 e0       	ldi	r18, 0x01	; 1
    1f7c:	4f ef       	ldi	r20, 0xFF	; 255
    1f7e:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    1f82:	ff 92       	push	r15
    1f84:	ef 92       	push	r14
    1f86:	8f ee       	ldi	r24, 0xEF	; 239
    1f88:	92 e0       	ldi	r25, 0x02	; 2
    1f8a:	9f 93       	push	r25
    1f8c:	8f 93       	push	r24
    1f8e:	1f 92       	push	r1
    1f90:	82 e1       	ldi	r24, 0x12	; 18
    1f92:	8f 93       	push	r24
    1f94:	bf 92       	push	r11
    1f96:	af 92       	push	r10
    1f98:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1f9c:	81 e0       	ldi	r24, 0x01	; 1
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	a0 e0       	ldi	r26, 0x00	; 0
    1fa2:	b0 e0       	ldi	r27, 0x00	; 0
    1fa4:	a8 cf       	rjmp	.-176    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    1fa6:	7c 01       	movw	r14, r24
    1fa8:	ab e6       	ldi	r26, 0x6B	; 107
    1faa:	ea 0e       	add	r14, r26
    1fac:	f1 1c       	adc	r15, r1
    1fae:	60 91 46 02 	lds	r22, 0x0246	; 0x800246 <horsePower>
    1fb2:	70 91 47 02 	lds	r23, 0x0247	; 0x800247 <horsePower+0x1>
    1fb6:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <horsePower+0x2>
    1fba:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <horsePower+0x3>
    1fbe:	87 01       	movw	r16, r14
    1fc0:	21 e0       	ldi	r18, 0x01	; 1
    1fc2:	4b ef       	ldi	r20, 0xFB	; 251
    1fc4:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    1fc8:	ff 92       	push	r15
    1fca:	ef 92       	push	r14
    1fcc:	88 ee       	ldi	r24, 0xE8	; 232
    1fce:	92 e0       	ldi	r25, 0x02	; 2
    1fd0:	9f 93       	push	r25
    1fd2:	8f 93       	push	r24
    1fd4:	1f 92       	push	r1
    1fd6:	82 e1       	ldi	r24, 0x12	; 18
    1fd8:	8f 93       	push	r24
    1fda:	bf 92       	push	r11
    1fdc:	af 92       	push	r10
    1fde:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    1fe2:	84 e0       	ldi	r24, 0x04	; 4
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	a0 e0       	ldi	r26, 0x00	; 0
    1fe8:	b0 e0       	ldi	r27, 0x00	; 0
    1fea:	85 cf       	rjmp	.-246    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    1fec:	7c 01       	movw	r14, r24
    1fee:	ab e6       	ldi	r26, 0x6B	; 107
    1ff0:	ea 0e       	add	r14, r26
    1ff2:	f1 1c       	adc	r15, r1
    1ff4:	60 91 41 02 	lds	r22, 0x0241	; 0x800241 <pedalF>
    1ff8:	70 91 42 02 	lds	r23, 0x0242	; 0x800242 <pedalF+0x1>
    1ffc:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <pedalF+0x2>
    2000:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <pedalF+0x3>
    2004:	87 01       	movw	r16, r14
    2006:	22 e0       	ldi	r18, 0x02	; 2
    2008:	4b ef       	ldi	r20, 0xFB	; 251
    200a:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    200e:	ff 92       	push	r15
    2010:	ef 92       	push	r14
    2012:	8c ed       	ldi	r24, 0xDC	; 220
    2014:	92 e0       	ldi	r25, 0x02	; 2
    2016:	9f 93       	push	r25
    2018:	8f 93       	push	r24
    201a:	1f 92       	push	r1
    201c:	82 e1       	ldi	r24, 0x12	; 18
    201e:	8f 93       	push	r24
    2020:	bf 92       	push	r11
    2022:	af 92       	push	r10
    2024:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    2028:	82 e0       	ldi	r24, 0x02	; 2
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	a0 e0       	ldi	r26, 0x00	; 0
    202e:	b0 e0       	ldi	r27, 0x00	; 0
    2030:	62 cf       	rjmp	.-316    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    2032:	7c 01       	movw	r14, r24
    2034:	ab e6       	ldi	r26, 0x6B	; 107
    2036:	ea 0e       	add	r14, r26
    2038:	f1 1c       	adc	r15, r1
    203a:	60 91 4a 02 	lds	r22, 0x024A	; 0x80024a <throttleF>
    203e:	70 91 4b 02 	lds	r23, 0x024B	; 0x80024b <throttleF+0x1>
    2042:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <throttleF+0x2>
    2046:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <throttleF+0x3>
    204a:	87 01       	movw	r16, r14
    204c:	22 e0       	ldi	r18, 0x02	; 2
    204e:	4b ef       	ldi	r20, 0xFB	; 251
    2050:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    2054:	ff 92       	push	r15
    2056:	ef 92       	push	r14
    2058:	8d ec       	ldi	r24, 0xCD	; 205
    205a:	92 e0       	ldi	r25, 0x02	; 2
    205c:	9f 93       	push	r25
    205e:	8f 93       	push	r24
    2060:	1f 92       	push	r1
    2062:	82 e1       	ldi	r24, 0x12	; 18
    2064:	8f 93       	push	r24
    2066:	bf 92       	push	r11
    2068:	af 92       	push	r10
    206a:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    206e:	80 e0       	ldi	r24, 0x00	; 0
    2070:	90 e8       	ldi	r25, 0x80	; 128
    2072:	a0 e0       	ldi	r26, 0x00	; 0
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	3f cf       	rjmp	.-386    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    2078:	7c 01       	movw	r14, r24
    207a:	ab e6       	ldi	r26, 0x6B	; 107
    207c:	ea 0e       	add	r14, r26
    207e:	f1 1c       	adc	r15, r1
    2080:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <fuelRemaining>
    2084:	70 91 3d 02 	lds	r23, 0x023D	; 0x80023d <fuelRemaining+0x1>
    2088:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <fuelRemaining+0x2>
    208c:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <fuelRemaining+0x3>
    2090:	87 01       	movw	r16, r14
    2092:	22 e0       	ldi	r18, 0x02	; 2
    2094:	4b ef       	ldi	r20, 0xFB	; 251
    2096:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    209a:	ff 92       	push	r15
    209c:	ef 92       	push	r14
    209e:	80 ec       	ldi	r24, 0xC0	; 192
    20a0:	92 e0       	ldi	r25, 0x02	; 2
    20a2:	57 c0       	rjmp	.+174    	; 0x2152 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x358>
    20a4:	7c 01       	movw	r14, r24
    20a6:	ab e6       	ldi	r26, 0x6B	; 107
    20a8:	ea 0e       	add	r14, r26
    20aa:	f1 1c       	adc	r15, r1
    20ac:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <totalMAF>
    20b0:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <totalMAF+0x1>
    20b4:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <totalMAF+0x2>
    20b8:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <totalMAF+0x3>
    20bc:	87 01       	movw	r16, r14
    20be:	22 e0       	ldi	r18, 0x02	; 2
    20c0:	4b ef       	ldi	r20, 0xFB	; 251
    20c2:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    20c6:	ff 92       	push	r15
    20c8:	ef 92       	push	r14
    20ca:	87 ea       	ldi	r24, 0xA7	; 167
    20cc:	92 e0       	ldi	r25, 0x02	; 2
    20ce:	9f 93       	push	r25
    20d0:	8f 93       	push	r24
    20d2:	1f 92       	push	r1
    20d4:	82 e1       	ldi	r24, 0x12	; 18
    20d6:	8f 93       	push	r24
    20d8:	bf 92       	push	r11
    20da:	af 92       	push	r10
    20dc:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    20e0:	84 c0       	rjmp	.+264    	; 0x21ea <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x3f0>
    20e2:	7c 01       	movw	r14, r24
    20e4:	ab e6       	ldi	r26, 0x6B	; 107
    20e6:	ea 0e       	add	r14, r26
    20e8:	f1 1c       	adc	r15, r1
    20ea:	60 91 32 02 	lds	r22, 0x0232	; 0x800232 <MPG>
    20ee:	70 91 33 02 	lds	r23, 0x0233	; 0x800233 <MPG+0x1>
    20f2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <MPG+0x2>
    20f6:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <MPG+0x3>
    20fa:	87 01       	movw	r16, r14
    20fc:	22 e0       	ldi	r18, 0x02	; 2
    20fe:	4b ef       	ldi	r20, 0xFB	; 251
    2100:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    2104:	ff 92       	push	r15
    2106:	ef 92       	push	r14
    2108:	83 eb       	ldi	r24, 0xB3	; 179
    210a:	92 e0       	ldi	r25, 0x02	; 2
    210c:	9f 93       	push	r25
    210e:	8f 93       	push	r24
    2110:	1f 92       	push	r1
    2112:	82 e1       	ldi	r24, 0x12	; 18
    2114:	8f 93       	push	r24
    2116:	bf 92       	push	r11
    2118:	af 92       	push	r10
    211a:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	98 e0       	ldi	r25, 0x08	; 8
    2122:	a0 e0       	ldi	r26, 0x00	; 0
    2124:	b0 e0       	ldi	r27, 0x00	; 0
    2126:	e7 ce       	rjmp	.-562    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    2128:	7c 01       	movw	r14, r24
    212a:	ab e6       	ldi	r26, 0x6B	; 107
    212c:	ea 0e       	add	r14, r26
    212e:	f1 1c       	adc	r15, r1
    2130:	60 91 2e 02 	lds	r22, 0x022E	; 0x80022e <rangeToEmpty>
    2134:	70 91 2f 02 	lds	r23, 0x022F	; 0x80022f <rangeToEmpty+0x1>
    2138:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <rangeToEmpty+0x2>
    213c:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <rangeToEmpty+0x3>
    2140:	87 01       	movw	r16, r14
    2142:	21 e0       	ldi	r18, 0x01	; 1
    2144:	4b ef       	ldi	r20, 0xFB	; 251
    2146:	0e 94 98 2f 	call	0x5f30	; 0x5f30 <dtostrf>
    214a:	ff 92       	push	r15
    214c:	ef 92       	push	r14
    214e:	8a e9       	ldi	r24, 0x9A	; 154
    2150:	92 e0       	ldi	r25, 0x02	; 2
    2152:	9f 93       	push	r25
    2154:	8f 93       	push	r24
    2156:	1f 92       	push	r1
    2158:	82 e1       	ldi	r24, 0x12	; 18
    215a:	8f 93       	push	r24
    215c:	bf 92       	push	r11
    215e:	af 92       	push	r10
    2160:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    2164:	88 e0       	ldi	r24, 0x08	; 8
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	a0 e0       	ldi	r26, 0x00	; 0
    216a:	b0 e0       	ldi	r27, 0x00	; 0
    216c:	c4 ce       	rjmp	.-632    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    216e:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <heading+0x1>
    2172:	8f 93       	push	r24
    2174:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <heading>
    2178:	8f 93       	push	r24
    217a:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <elevation+0x1>
    217e:	8f 93       	push	r24
    2180:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <elevation>
    2184:	8f 93       	push	r24
    2186:	8e e8       	ldi	r24, 0x8E	; 142
    2188:	92 e0       	ldi	r25, 0x02	; 2
    218a:	9f 93       	push	r25
    218c:	8f 93       	push	r24
    218e:	1f 92       	push	r1
    2190:	82 e1       	ldi	r24, 0x12	; 18
    2192:	8f 93       	push	r24
    2194:	bf 92       	push	r11
    2196:	af 92       	push	r10
    2198:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    219c:	80 e0       	ldi	r24, 0x00	; 0
    219e:	91 e0       	ldi	r25, 0x01	; 1
    21a0:	a0 e0       	ldi	r26, 0x00	; 0
    21a2:	b0 e0       	ldi	r27, 0x00	; 0
    21a4:	a8 ce       	rjmp	.-688    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    21a6:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <ampm>
    21aa:	81 11       	cpse	r24, r1
    21ac:	03 c0       	rjmp	.+6      	; 0x21b4 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x3ba>
    21ae:	8a e2       	ldi	r24, 0x2A	; 42
    21b0:	91 e0       	ldi	r25, 0x01	; 1
    21b2:	02 c0       	rjmp	.+4      	; 0x21b8 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x3be>
    21b4:	87 e2       	ldi	r24, 0x27	; 39
    21b6:	91 e0       	ldi	r25, 0x01	; 1
    21b8:	9f 93       	push	r25
    21ba:	8f 93       	push	r24
    21bc:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <second>
    21c0:	1f 92       	push	r1
    21c2:	8f 93       	push	r24
    21c4:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <minute>
    21c8:	1f 92       	push	r1
    21ca:	8f 93       	push	r24
    21cc:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <hour>
    21d0:	1f 92       	push	r1
    21d2:	8f 93       	push	r24
    21d4:	8c e7       	ldi	r24, 0x7C	; 124
    21d6:	92 e0       	ldi	r25, 0x02	; 2
    21d8:	9f 93       	push	r25
    21da:	8f 93       	push	r24
    21dc:	1f 92       	push	r1
    21de:	82 e1       	ldi	r24, 0x12	; 18
    21e0:	8f 93       	push	r24
    21e2:	bf 92       	push	r11
    21e4:	af 92       	push	r10
    21e6:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    21ea:	80 e0       	ldi	r24, 0x00	; 0
    21ec:	90 e0       	ldi	r25, 0x00	; 0
    21ee:	a0 e2       	ldi	r26, 0x20	; 32
    21f0:	b0 e0       	ldi	r27, 0x00	; 0
    21f2:	81 ce       	rjmp	.-766    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    21f4:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <year>
    21f8:	1f 92       	push	r1
    21fa:	8f 93       	push	r24
    21fc:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <day>
    2200:	1f 92       	push	r1
    2202:	8f 93       	push	r24
    2204:	e0 91 15 02 	lds	r30, 0x0215	; 0x800215 <month>
    2208:	f0 e0       	ldi	r31, 0x00	; 0
    220a:	31 97       	sbiw	r30, 0x01	; 1
    220c:	ee 0f       	add	r30, r30
    220e:	ff 1f       	adc	r31, r31
    2210:	a1 e0       	ldi	r26, 0x01	; 1
    2212:	b0 e0       	ldi	r27, 0x00	; 0
    2214:	ac 0f       	add	r26, r28
    2216:	bd 1f       	adc	r27, r29
    2218:	ea 0f       	add	r30, r26
    221a:	fb 1f       	adc	r31, r27
    221c:	81 81       	ldd	r24, Z+1	; 0x01
    221e:	8f 93       	push	r24
    2220:	80 81       	ld	r24, Z
    2222:	8f 93       	push	r24
    2224:	1f 92       	push	r1
    2226:	82 e1       	ldi	r24, 0x12	; 18
    2228:	8f 93       	push	r24
    222a:	bf 92       	push	r11
    222c:	af 92       	push	r10
    222e:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	90 e2       	ldi	r25, 0x20	; 32
    2236:	a0 e0       	ldi	r26, 0x00	; 0
    2238:	b0 e0       	ldi	r27, 0x00	; 0
    223a:	5d ce       	rjmp	.-838    	; 0x1ef6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0xfc>
    223c:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <pedal>
    2240:	a4 e1       	ldi	r26, 0x14	; 20
    2242:	8a 9f       	mul	r24, r26
    2244:	c0 01       	movw	r24, r0
    2246:	11 24       	eor	r1, r1
    2248:	6f ef       	ldi	r22, 0xFF	; 255
    224a:	70 e0       	ldi	r23, 0x00	; 0
    224c:	0e 94 5c 2f 	call	0x5eb8	; 0x5eb8 <__divmodhi4>
    2250:	62 31       	cpi	r22, 0x12	; 18
    2252:	08 f0       	brcs	.+2      	; 0x2256 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x45c>
    2254:	61 e1       	ldi	r22, 0x11	; 17
    2256:	46 2f       	mov	r20, r22
    2258:	50 e0       	ldi	r21, 0x00	; 0
    225a:	6a e6       	ldi	r22, 0x6A	; 106
    225c:	72 e0       	ldi	r23, 0x02	; 2
    225e:	c5 01       	movw	r24, r10
    2260:	0e 94 b8 2f 	call	0x5f70	; 0x5f70 <memcpy_P>
    2264:	82 e0       	ldi	r24, 0x02	; 2
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	a0 e0       	ldi	r26, 0x00	; 0
    226a:	b0 e0       	ldi	r27, 0x00	; 0
    226c:	18 c0       	rjmp	.+48     	; 0x229e <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x4a4>
    226e:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <throttle>
    2272:	f4 e1       	ldi	r31, 0x14	; 20
    2274:	8f 9f       	mul	r24, r31
    2276:	c0 01       	movw	r24, r0
    2278:	11 24       	eor	r1, r1
    227a:	6f ef       	ldi	r22, 0xFF	; 255
    227c:	70 e0       	ldi	r23, 0x00	; 0
    227e:	0e 94 5c 2f 	call	0x5eb8	; 0x5eb8 <__divmodhi4>
    2282:	62 31       	cpi	r22, 0x12	; 18
    2284:	08 f0       	brcs	.+2      	; 0x2288 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x48e>
    2286:	61 e1       	ldi	r22, 0x11	; 17
    2288:	46 2f       	mov	r20, r22
    228a:	50 e0       	ldi	r21, 0x00	; 0
    228c:	6a e6       	ldi	r22, 0x6A	; 106
    228e:	72 e0       	ldi	r23, 0x02	; 2
    2290:	c5 01       	movw	r24, r10
    2292:	0e 94 b8 2f 	call	0x5f70	; 0x5f70 <memcpy_P>
    2296:	80 e0       	ldi	r24, 0x00	; 0
    2298:	90 e8       	ldi	r25, 0x80	; 128
    229a:	a0 e0       	ldi	r26, 0x00	; 0
    229c:	b0 e0       	ldi	r27, 0x00	; 0
    229e:	f6 01       	movw	r30, r12
    22a0:	80 83       	st	Z, r24
    22a2:	91 83       	std	Z+1, r25	; 0x01
    22a4:	a2 83       	std	Z+2, r26	; 0x02
    22a6:	b3 83       	std	Z+3, r27	; 0x03
    22a8:	06 c0       	rjmp	.+12     	; 0x22b6 <_ZN7Display13writeToBufferEPcRKhRm.part.11+0x4bc>
    22aa:	d9 01       	movw	r26, r18
    22ac:	1d 92       	st	X+, r1
    22ae:	1d 92       	st	X+, r1
    22b0:	1d 92       	st	X+, r1
    22b2:	1c 92       	st	X, r1
    22b4:	13 97       	sbiw	r26, 0x03	; 3
    22b6:	68 96       	adiw	r28, 0x18	; 24
    22b8:	0f b6       	in	r0, 0x3f	; 63
    22ba:	f8 94       	cli
    22bc:	de bf       	out	0x3e, r29	; 62
    22be:	0f be       	out	0x3f, r0	; 63
    22c0:	cd bf       	out	0x3d, r28	; 61
    22c2:	df 91       	pop	r29
    22c4:	cf 91       	pop	r28
    22c6:	1f 91       	pop	r17
    22c8:	0f 91       	pop	r16
    22ca:	ff 90       	pop	r15
    22cc:	ef 90       	pop	r14
    22ce:	df 90       	pop	r13
    22d0:	cf 90       	pop	r12
    22d2:	bf 90       	pop	r11
    22d4:	af 90       	pop	r10
    22d6:	08 95       	ret

000022d8 <_ZN7Display17autoUpdateDisplayEv>:
    22d8:	8f 92       	push	r8
    22da:	9f 92       	push	r9
    22dc:	af 92       	push	r10
    22de:	bf 92       	push	r11
    22e0:	ef 92       	push	r14
    22e2:	ff 92       	push	r15
    22e4:	0f 93       	push	r16
    22e6:	1f 93       	push	r17
    22e8:	cf 93       	push	r28
    22ea:	df 93       	push	r29
    22ec:	cd b7       	in	r28, 0x3d	; 61
    22ee:	de b7       	in	r29, 0x3e	; 62
    22f0:	ad 97       	sbiw	r28, 0x2d	; 45
    22f2:	0f b6       	in	r0, 0x3f	; 63
    22f4:	f8 94       	cli
    22f6:	de bf       	out	0x3e, r29	; 62
    22f8:	0f be       	out	0x3f, r0	; 63
    22fa:	cd bf       	out	0x3d, r28	; 61
    22fc:	8c 01       	movw	r16, r24
    22fe:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <_ZN7Display23handleTemporaryTriggersEv>
    2302:	81 11       	cpse	r24, r1
    2304:	92 c0       	rjmp	.+292    	; 0x242a <_ZN7Display17autoUpdateDisplayEv+0x152>
    2306:	f8 01       	movw	r30, r16
    2308:	e8 59       	subi	r30, 0x98	; 152
    230a:	ff 4f       	sbci	r31, 0xFF	; 255
    230c:	80 81       	ld	r24, Z
    230e:	83 fd       	sbrc	r24, 3
    2310:	8c c0       	rjmp	.+280    	; 0x242a <_ZN7Display17autoUpdateDisplayEv+0x152>
    2312:	19 a6       	std	Y+41, r1	; 0x29
    2314:	1a a6       	std	Y+42, r1	; 0x2a
    2316:	1b a6       	std	Y+43, r1	; 0x2b
    2318:	1c a6       	std	Y+44, r1	; 0x2c
    231a:	1d a2       	std	Y+37, r1	; 0x25
    231c:	1e a2       	std	Y+38, r1	; 0x26
    231e:	1f a2       	std	Y+39, r1	; 0x27
    2320:	18 a6       	std	Y+40, r1	; 0x28
    2322:	5e 01       	movw	r10, r28
    2324:	23 e1       	ldi	r18, 0x13	; 19
    2326:	a2 0e       	add	r10, r18
    2328:	b1 1c       	adc	r11, r1
    232a:	9e 01       	movw	r18, r28
    232c:	27 5d       	subi	r18, 0xD7	; 215
    232e:	3f 4f       	sbci	r19, 0xFF	; 255
    2330:	a8 01       	movw	r20, r16
    2332:	b5 01       	movw	r22, r10
    2334:	c8 01       	movw	r24, r16
    2336:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <_ZN7Display13writeToBufferEPcRKhRm.part.11>
    233a:	9e 01       	movw	r18, r28
    233c:	2b 5d       	subi	r18, 0xDB	; 219
    233e:	3f 4f       	sbci	r19, 0xFF	; 255
    2340:	a8 01       	movw	r20, r16
    2342:	4f 5f       	subi	r20, 0xFF	; 255
    2344:	5f 4f       	sbci	r21, 0xFF	; 255
    2346:	ce 01       	movw	r24, r28
    2348:	01 96       	adiw	r24, 0x01	; 1
    234a:	4c 01       	movw	r8, r24
    234c:	bc 01       	movw	r22, r24
    234e:	c8 01       	movw	r24, r16
    2350:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <_ZN7Display13writeToBufferEPcRKhRm.part.11>
    2354:	78 01       	movw	r14, r16
    2356:	9b e6       	ldi	r25, 0x6B	; 107
    2358:	e9 0e       	add	r14, r25
    235a:	f1 1c       	adc	r15, r1
    235c:	9f 92       	push	r9
    235e:	8f 92       	push	r8
    2360:	bf 92       	push	r11
    2362:	af 92       	push	r10
    2364:	86 ee       	ldi	r24, 0xE6	; 230
    2366:	91 e0       	ldi	r25, 0x01	; 1
    2368:	9f 93       	push	r25
    236a:	8f 93       	push	r24
    236c:	1f 92       	push	r1
    236e:	84 e2       	ldi	r24, 0x24	; 36
    2370:	8f 93       	push	r24
    2372:	ff 92       	push	r15
    2374:	ef 92       	push	r14
    2376:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <snprintf_P>
    237a:	0f b6       	in	r0, 0x3f	; 63
    237c:	f8 94       	cli
    237e:	de bf       	out	0x3e, r29	; 62
    2380:	0f be       	out	0x3f, r0	; 63
    2382:	cd bf       	out	0x3d, r28	; 61
    2384:	85 32       	cpi	r24, 0x25	; 37
    2386:	08 f0       	brcs	.+2      	; 0x238a <_ZN7Display17autoUpdateDisplayEv+0xb2>
    2388:	84 e2       	ldi	r24, 0x24	; 36
    238a:	f8 01       	movw	r30, r16
    238c:	e0 57       	subi	r30, 0x70	; 112
    238e:	ff 4f       	sbci	r31, 0xFF	; 255
    2390:	80 83       	st	Z, r24
    2392:	89 a4       	ldd	r8, Y+41	; 0x29
    2394:	9a a4       	ldd	r9, Y+42	; 0x2a
    2396:	ab a4       	ldd	r10, Y+43	; 0x2b
    2398:	bc a4       	ldd	r11, Y+44	; 0x2c
    239a:	4d a1       	ldd	r20, Y+37	; 0x25
    239c:	5e a1       	ldd	r21, Y+38	; 0x26
    239e:	6f a1       	ldd	r22, Y+39	; 0x27
    23a0:	78 a5       	ldd	r23, Y+40	; 0x28
    23a2:	48 29       	or	r20, r8
    23a4:	59 29       	or	r21, r9
    23a6:	6a 29       	or	r22, r10
    23a8:	7b 29       	or	r23, r11
    23aa:	62 60       	ori	r22, 0x02	; 2
    23ac:	80 90 56 02 	lds	r8, 0x0256	; 0x800256 <triggers>
    23b0:	90 90 57 02 	lds	r9, 0x0257	; 0x800257 <triggers+0x1>
    23b4:	a0 90 58 02 	lds	r10, 0x0258	; 0x800258 <triggers+0x2>
    23b8:	b0 90 59 02 	lds	r11, 0x0259	; 0x800259 <triggers+0x3>
    23bc:	48 21       	and	r20, r8
    23be:	59 21       	and	r21, r9
    23c0:	6a 21       	and	r22, r10
    23c2:	7b 21       	and	r23, r11
    23c4:	45 2b       	or	r20, r21
    23c6:	46 2b       	or	r20, r22
    23c8:	47 2b       	or	r20, r23
    23ca:	79 f1       	breq	.+94     	; 0x242a <_ZN7Display17autoUpdateDisplayEv+0x152>
    23cc:	8d a7       	std	Y+45, r24	; 0x2d
    23ce:	ae 01       	movw	r20, r28
    23d0:	43 5d       	subi	r20, 0xD3	; 211
    23d2:	5f 4f       	sbci	r21, 0xFF	; 255
    23d4:	b7 01       	movw	r22, r14
    23d6:	c8 01       	movw	r24, r16
    23d8:	0e 94 b6 0c 	call	0x196c	; 0x196c <_ZN7Display10updateTextEPKhRS0_>
    23dc:	88 23       	and	r24, r24
    23de:	29 f1       	breq	.+74     	; 0x242a <_ZN7Display17autoUpdateDisplayEv+0x152>
    23e0:	49 a5       	ldd	r20, Y+41	; 0x29
    23e2:	5a a5       	ldd	r21, Y+42	; 0x2a
    23e4:	6b a5       	ldd	r22, Y+43	; 0x2b
    23e6:	7c a5       	ldd	r23, Y+44	; 0x2c
    23e8:	8d a1       	ldd	r24, Y+37	; 0x25
    23ea:	9e a1       	ldd	r25, Y+38	; 0x26
    23ec:	af a1       	ldd	r26, Y+39	; 0x27
    23ee:	b8 a5       	ldd	r27, Y+40	; 0x28
    23f0:	84 2b       	or	r24, r20
    23f2:	95 2b       	or	r25, r21
    23f4:	a6 2b       	or	r26, r22
    23f6:	b7 2b       	or	r27, r23
    23f8:	a2 60       	ori	r26, 0x02	; 2
    23fa:	80 95       	com	r24
    23fc:	90 95       	com	r25
    23fe:	a0 95       	com	r26
    2400:	b0 95       	com	r27
    2402:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <triggers>
    2406:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <triggers+0x1>
    240a:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <triggers+0x2>
    240e:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <triggers+0x3>
    2412:	84 23       	and	r24, r20
    2414:	95 23       	and	r25, r21
    2416:	a6 23       	and	r26, r22
    2418:	b7 23       	and	r27, r23
    241a:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    241e:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    2422:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    2426:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    242a:	ad 96       	adiw	r28, 0x2d	; 45
    242c:	0f b6       	in	r0, 0x3f	; 63
    242e:	f8 94       	cli
    2430:	de bf       	out	0x3e, r29	; 62
    2432:	0f be       	out	0x3f, r0	; 63
    2434:	cd bf       	out	0x3d, r28	; 61
    2436:	df 91       	pop	r29
    2438:	cf 91       	pop	r28
    243a:	1f 91       	pop	r17
    243c:	0f 91       	pop	r16
    243e:	ff 90       	pop	r15
    2440:	ef 90       	pop	r14
    2442:	bf 90       	pop	r11
    2444:	af 90       	pop	r10
    2446:	9f 90       	pop	r9
    2448:	8f 90       	pop	r8
    244a:	08 95       	ret

0000244c <_ZN7Display4tickEv>:
    244c:	ef 92       	push	r14
    244e:	ff 92       	push	r15
    2450:	0f 93       	push	r16
    2452:	1f 93       	push	r17
    2454:	cf 93       	push	r28
    2456:	df 93       	push	r29
    2458:	cd b7       	in	r28, 0x3d	; 61
    245a:	de b7       	in	r29, 0x3e	; 62
    245c:	a0 97       	sbiw	r28, 0x20	; 32
    245e:	0f b6       	in	r0, 0x3f	; 63
    2460:	f8 94       	cli
    2462:	de bf       	out	0x3e, r29	; 62
    2464:	0f be       	out	0x3f, r0	; 63
    2466:	cd bf       	out	0x3d, r28	; 61
    2468:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    246c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2470:	33 ff       	sbrs	r19, 3
    2472:	34 c0       	rjmp	.+104    	; 0x24dc <_ZN7Display4tickEv+0x90>
    2474:	8c 01       	movw	r16, r24
    2476:	0e 94 ad 0b 	call	0x175a	; 0x175a <_ZN7Display16updateStatusBitsEv>
    247a:	78 01       	movw	r14, r16
    247c:	82 e6       	ldi	r24, 0x62	; 98
    247e:	e8 0e       	add	r14, r24
    2480:	f1 1c       	adc	r15, r1
    2482:	f7 01       	movw	r30, r14
    2484:	81 81       	ldd	r24, Z+1	; 0x01
    2486:	36 96       	adiw	r30, 0x06	; 6
    2488:	88 23       	and	r24, r24
    248a:	21 f0       	breq	.+8      	; 0x2494 <_ZN7Display4tickEv+0x48>
    248c:	80 81       	ld	r24, Z
    248e:	81 fd       	sbrc	r24, 1
    2490:	08 c0       	rjmp	.+16     	; 0x24a2 <_ZN7Display4tickEv+0x56>
    2492:	24 c0       	rjmp	.+72     	; 0x24dc <_ZN7Display4tickEv+0x90>
    2494:	80 81       	ld	r24, Z
    2496:	82 ff       	sbrs	r24, 2
    2498:	21 c0       	rjmp	.+66     	; 0x24dc <_ZN7Display4tickEv+0x90>
    249a:	c8 01       	movw	r24, r16
    249c:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <_ZN7Display17autoUpdateDisplayEv>
    24a0:	1d c0       	rjmp	.+58     	; 0x24dc <_ZN7Display4tickEv+0x90>
    24a2:	b7 01       	movw	r22, r14
    24a4:	ce 01       	movw	r24, r28
    24a6:	01 96       	adiw	r24, 0x01	; 1
    24a8:	0e 94 09 03 	call	0x612	; 0x612 <_ZN12MessageQueue4peekEv>
    24ac:	be 01       	movw	r22, r28
    24ae:	6f 5f       	subi	r22, 0xFF	; 255
    24b0:	7f 4f       	sbci	r23, 0xFF	; 255
    24b2:	8a e5       	ldi	r24, 0x5A	; 90
    24b4:	92 e0       	ldi	r25, 0x02	; 2
    24b6:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    24ba:	88 23       	and	r24, r24
    24bc:	79 f0       	breq	.+30     	; 0x24dc <_ZN7Display4tickEv+0x90>
    24be:	b7 01       	movw	r22, r14
    24c0:	ce 01       	movw	r24, r28
    24c2:	41 96       	adiw	r24, 0x11	; 17
    24c4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <_ZN12MessageQueue3popEv>
    24c8:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    24cc:	60 93 7c 03 	sts	0x037C, r22	; 0x80037c <lastDequeue>
    24d0:	70 93 7d 03 	sts	0x037D, r23	; 0x80037d <lastDequeue+0x1>
    24d4:	80 93 7e 03 	sts	0x037E, r24	; 0x80037e <lastDequeue+0x2>
    24d8:	90 93 7f 03 	sts	0x037F, r25	; 0x80037f <lastDequeue+0x3>
    24dc:	a0 96       	adiw	r28, 0x20	; 32
    24de:	0f b6       	in	r0, 0x3f	; 63
    24e0:	f8 94       	cli
    24e2:	de bf       	out	0x3e, r29	; 62
    24e4:	0f be       	out	0x3f, r0	; 63
    24e6:	cd bf       	out	0x3d, r28	; 61
    24e8:	df 91       	pop	r29
    24ea:	cf 91       	pop	r28
    24ec:	1f 91       	pop	r17
    24ee:	0f 91       	pop	r16
    24f0:	ff 90       	pop	r15
    24f2:	ef 90       	pop	r14
    24f4:	08 95       	ret

000024f6 <_Z8blinkLEDhRKj>:
    24f6:	0f 93       	push	r16
    24f8:	1f 93       	push	r17
    24fa:	cf 93       	push	r28
    24fc:	8b 01       	movw	r16, r22
    24fe:	c8 2f       	mov	r28, r24
    2500:	cc 23       	and	r28, r28
    2502:	c1 f0       	breq	.+48     	; 0x2534 <_Z8blinkLEDhRKj+0x3e>
    2504:	61 e0       	ldi	r22, 0x01	; 1
    2506:	8d e0       	ldi	r24, 0x0D	; 13
    2508:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    250c:	f8 01       	movw	r30, r16
    250e:	60 81       	ld	r22, Z
    2510:	71 81       	ldd	r23, Z+1	; 0x01
    2512:	80 e0       	ldi	r24, 0x00	; 0
    2514:	90 e0       	ldi	r25, 0x00	; 0
    2516:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    251a:	60 e0       	ldi	r22, 0x00	; 0
    251c:	8d e0       	ldi	r24, 0x0D	; 13
    251e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2522:	f8 01       	movw	r30, r16
    2524:	60 81       	ld	r22, Z
    2526:	71 81       	ldd	r23, Z+1	; 0x01
    2528:	80 e0       	ldi	r24, 0x00	; 0
    252a:	90 e0       	ldi	r25, 0x00	; 0
    252c:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    2530:	c1 50       	subi	r28, 0x01	; 1
    2532:	e6 cf       	rjmp	.-52     	; 0x2500 <_Z8blinkLEDhRKj+0xa>
    2534:	cf 91       	pop	r28
    2536:	1f 91       	pop	r17
    2538:	0f 91       	pop	r16
    253a:	08 95       	ret

0000253c <_Z10processVINR7MessagePKh>:
    253c:	ef 92       	push	r14
    253e:	ff 92       	push	r15
    2540:	0f 93       	push	r16
    2542:	1f 93       	push	r17
    2544:	cf 93       	push	r28
    2546:	df 93       	push	r29
    2548:	00 d0       	rcall	.+0      	; 0x254a <_Z10processVINR7MessagePKh+0xe>
    254a:	cd b7       	in	r28, 0x3d	; 61
    254c:	de b7       	in	r29, 0x3e	; 62
    254e:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__data_start>
    2552:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__data_start+0x1>
    2556:	02 fd       	sbrc	r16, 2
    2558:	2b c0       	rjmp	.+86     	; 0x25b0 <_Z10processVINR7MessagePKh+0x74>
    255a:	7b 01       	movw	r14, r22
    255c:	bc 01       	movw	r22, r24
    255e:	68 5f       	subi	r22, 0xF8	; 248
    2560:	7f 4f       	sbci	r23, 0xFF	; 255
    2562:	48 e0       	ldi	r20, 0x08	; 8
    2564:	50 e0       	ldi	r21, 0x00	; 0
    2566:	c7 01       	movw	r24, r14
    2568:	0e 94 c1 2f 	call	0x5f82	; 0x5f82 <memcmp>
    256c:	30 91 6a 01 	lds	r19, 0x016A	; 0x80016a <__data_end>
    2570:	f7 01       	movw	r30, r14
    2572:	20 81       	ld	r18, Z
    2574:	89 2b       	or	r24, r25
    2576:	11 f4       	brne	.+4      	; 0x257c <_Z10processVINR7MessagePKh+0x40>
    2578:	23 2b       	or	r18, r19
    257a:	02 c0       	rjmp	.+4      	; 0x2580 <_Z10processVINR7MessagePKh+0x44>
    257c:	20 95       	com	r18
    257e:	23 23       	and	r18, r19
    2580:	20 93 6a 01 	sts	0x016A, r18	; 0x80016a <__data_end>
    2584:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <__data_end>
    2588:	87 37       	cpi	r24, 0x77	; 119
    258a:	91 f4       	brne	.+36     	; 0x25b0 <_Z10processVINR7MessagePKh+0x74>
    258c:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <__data_end>
    2590:	04 62       	ori	r16, 0x24	; 36
    2592:	1a 60       	ori	r17, 0x0A	; 10
    2594:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <__data_start+0x1>
    2598:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__data_start>
    259c:	84 e6       	ldi	r24, 0x64	; 100
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	9a 83       	std	Y+2, r25	; 0x02
    25a2:	89 83       	std	Y+1, r24	; 0x01
    25a4:	be 01       	movw	r22, r28
    25a6:	6f 5f       	subi	r22, 0xFF	; 255
    25a8:	7f 4f       	sbci	r23, 0xFF	; 255
    25aa:	83 e0       	ldi	r24, 0x03	; 3
    25ac:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <_Z8blinkLEDhRKj>
    25b0:	0f 90       	pop	r0
    25b2:	0f 90       	pop	r0
    25b4:	df 91       	pop	r29
    25b6:	cf 91       	pop	r28
    25b8:	1f 91       	pop	r17
    25ba:	0f 91       	pop	r16
    25bc:	ff 90       	pop	r15
    25be:	ef 90       	pop	r14
    25c0:	08 95       	ret

000025c2 <_Z12processFrameR7Message>:
    25c2:	fc 01       	movw	r30, r24
    25c4:	40 81       	ld	r20, Z
    25c6:	51 81       	ldd	r21, Z+1	; 0x01
    25c8:	62 81       	ldd	r22, Z+2	; 0x02
    25ca:	73 81       	ldd	r23, Z+3	; 0x03
    25cc:	40 34       	cpi	r20, 0x40	; 64
    25ce:	f0 e2       	ldi	r31, 0x20	; 32
    25d0:	5f 07       	cpc	r21, r31
    25d2:	f4 e0       	ldi	r31, 0x04	; 4
    25d4:	6f 07       	cpc	r22, r31
    25d6:	f0 e1       	ldi	r31, 0x10	; 16
    25d8:	7f 07       	cpc	r23, r31
    25da:	09 f4       	brne	.+2      	; 0x25de <_Z12processFrameR7Message+0x1c>
    25dc:	8b c0       	rjmp	.+278    	; 0x26f4 <_Z12processFrameR7Message+0x132>
    25de:	08 f0       	brcs	.+2      	; 0x25e2 <_Z12processFrameR7Message+0x20>
    25e0:	43 c0       	rjmp	.+134    	; 0x2668 <_Z12processFrameR7Message+0xa6>
    25e2:	40 34       	cpi	r20, 0x40	; 64
    25e4:	e0 e2       	ldi	r30, 0x20	; 32
    25e6:	5e 07       	cpc	r21, r30
    25e8:	e2 e0       	ldi	r30, 0x02	; 2
    25ea:	6e 07       	cpc	r22, r30
    25ec:	e0 e1       	ldi	r30, 0x10	; 16
    25ee:	7e 07       	cpc	r23, r30
    25f0:	09 f4       	brne	.+2      	; 0x25f4 <_Z12processFrameR7Message+0x32>
    25f2:	8c c0       	rjmp	.+280    	; 0x270c <_Z12processFrameR7Message+0x14a>
    25f4:	c0 f4       	brcc	.+48     	; 0x2626 <_Z12processFrameR7Message+0x64>
    25f6:	40 34       	cpi	r20, 0x40	; 64
    25f8:	51 05       	cpc	r21, r1
    25fa:	25 e0       	ldi	r18, 0x05	; 5
    25fc:	62 07       	cpc	r22, r18
    25fe:	2c e0       	ldi	r18, 0x0C	; 12
    2600:	72 07       	cpc	r23, r18
    2602:	09 f4       	brne	.+2      	; 0x2606 <_Z12processFrameR7Message+0x44>
    2604:	79 c0       	rjmp	.+242    	; 0x26f8 <_Z12processFrameR7Message+0x136>
    2606:	40 3b       	cpi	r20, 0xB0	; 176
    2608:	e0 ea       	ldi	r30, 0xA0	; 160
    260a:	5e 07       	cpc	r21, r30
    260c:	61 05       	cpc	r22, r1
    260e:	e0 e1       	ldi	r30, 0x10	; 16
    2610:	7e 07       	cpc	r23, r30
    2612:	09 f4       	brne	.+2      	; 0x2616 <_Z12processFrameR7Message+0x54>
    2614:	9a c0       	rjmp	.+308    	; 0x274a <_Z12processFrameR7Message+0x188>
    2616:	49 35       	cpi	r20, 0x59	; 89
    2618:	50 4e       	sbci	r21, 0xE0	; 224
    261a:	61 05       	cpc	r22, r1
    261c:	71 05       	cpc	r23, r1
    261e:	09 f0       	breq	.+2      	; 0x2622 <_Z12processFrameR7Message+0x60>
    2620:	a6 c0       	rjmp	.+332    	; 0x276e <_Z12processFrameR7Message+0x1ac>
    2622:	0c 94 3e 03 	jmp	0x67c	; 0x67c <_Z10processKeyR7Message>
    2626:	40 34       	cpi	r20, 0x40	; 64
    2628:	20 e6       	ldi	r18, 0x60	; 96
    262a:	52 07       	cpc	r21, r18
    262c:	22 e0       	ldi	r18, 0x02	; 2
    262e:	62 07       	cpc	r22, r18
    2630:	20 e1       	ldi	r18, 0x10	; 16
    2632:	72 07       	cpc	r23, r18
    2634:	09 f4       	brne	.+2      	; 0x2638 <_Z12processFrameR7Message+0x76>
    2636:	5a c0       	rjmp	.+180    	; 0x26ec <_Z12processFrameR7Message+0x12a>
    2638:	38 f4       	brcc	.+14     	; 0x2648 <_Z12processFrameR7Message+0x86>
    263a:	40 34       	cpi	r20, 0x40	; 64
    263c:	50 44       	sbci	r21, 0x40	; 64
    263e:	62 40       	sbci	r22, 0x02	; 2
    2640:	70 41       	sbci	r23, 0x10	; 16
    2642:	09 f4       	brne	.+2      	; 0x2646 <_Z12processFrameR7Message+0x84>
    2644:	50 c0       	rjmp	.+160    	; 0x26e6 <_Z12processFrameR7Message+0x124>
    2646:	08 95       	ret
    2648:	40 34       	cpi	r20, 0x40	; 64
    264a:	20 e6       	ldi	r18, 0x60	; 96
    264c:	52 07       	cpc	r21, r18
    264e:	23 e0       	ldi	r18, 0x03	; 3
    2650:	62 07       	cpc	r22, r18
    2652:	20 e1       	ldi	r18, 0x10	; 16
    2654:	72 07       	cpc	r23, r18
    2656:	09 f4       	brne	.+2      	; 0x265a <_Z12processFrameR7Message+0x98>
    2658:	61 c0       	rjmp	.+194    	; 0x271c <_Z12processFrameR7Message+0x15a>
    265a:	40 34       	cpi	r20, 0x40	; 64
    265c:	50 48       	sbci	r21, 0x80	; 128
    265e:	63 40       	sbci	r22, 0x03	; 3
    2660:	70 41       	sbci	r23, 0x10	; 16
    2662:	09 f4       	brne	.+2      	; 0x2666 <_Z12processFrameR7Message+0xa4>
    2664:	65 c0       	rjmp	.+202    	; 0x2730 <_Z12processFrameR7Message+0x16e>
    2666:	08 95       	ret
    2668:	47 39       	cpi	r20, 0x97	; 151
    266a:	f0 e6       	ldi	r31, 0x60	; 96
    266c:	5f 07       	cpc	r21, r31
    266e:	fa e0       	ldi	r31, 0x0A	; 10
    2670:	6f 07       	cpc	r22, r31
    2672:	f0 e1       	ldi	r31, 0x10	; 16
    2674:	7f 07       	cpc	r23, r31
    2676:	09 f4       	brne	.+2      	; 0x267a <_Z12processFrameR7Message+0xb8>
    2678:	4f c0       	rjmp	.+158    	; 0x2718 <_Z12processFrameR7Message+0x156>
    267a:	c0 f4       	brcc	.+48     	; 0x26ac <_Z12processFrameR7Message+0xea>
    267c:	40 34       	cpi	r20, 0x40	; 64
    267e:	e0 ec       	ldi	r30, 0xC0	; 192
    2680:	5e 07       	cpc	r21, r30
    2682:	e4 e0       	ldi	r30, 0x04	; 4
    2684:	6e 07       	cpc	r22, r30
    2686:	e0 e1       	ldi	r30, 0x10	; 16
    2688:	7e 07       	cpc	r23, r30
    268a:	c1 f1       	breq	.+112    	; 0x26fc <_Z12processFrameR7Message+0x13a>
    268c:	40 34       	cpi	r20, 0x40	; 64
    268e:	f0 ee       	ldi	r31, 0xE0	; 224
    2690:	5f 07       	cpc	r21, r31
    2692:	f5 e0       	ldi	r31, 0x05	; 5
    2694:	6f 07       	cpc	r22, r31
    2696:	f0 e1       	ldi	r31, 0x10	; 16
    2698:	7f 07       	cpc	r23, r31
    269a:	91 f1       	breq	.+100    	; 0x2700 <_Z12processFrameR7Message+0x13e>
    269c:	40 34       	cpi	r20, 0x40	; 64
    269e:	50 4a       	sbci	r21, 0xA0	; 160
    26a0:	64 40       	sbci	r22, 0x04	; 4
    26a2:	70 41       	sbci	r23, 0x10	; 16
    26a4:	09 f0       	breq	.+2      	; 0x26a8 <_Z12processFrameR7Message+0xe6>
    26a6:	63 c0       	rjmp	.+198    	; 0x276e <_Z12processFrameR7Message+0x1ac>
    26a8:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <_Z19processTransmissionR7Message>
    26ac:	47 39       	cpi	r20, 0x97	; 151
    26ae:	e0 ec       	ldi	r30, 0xC0	; 192
    26b0:	5e 07       	cpc	r21, r30
    26b2:	ea e0       	ldi	r30, 0x0A	; 10
    26b4:	6e 07       	cpc	r22, r30
    26b6:	e0 e1       	ldi	r30, 0x10	; 16
    26b8:	7e 07       	cpc	r23, r30
    26ba:	61 f1       	breq	.+88     	; 0x2714 <_Z12processFrameR7Message+0x152>
    26bc:	30 f4       	brcc	.+12     	; 0x26ca <_Z12processFrameR7Message+0x108>
    26be:	47 39       	cpi	r20, 0x97	; 151
    26c0:	50 4a       	sbci	r21, 0xA0	; 160
    26c2:	6a 40       	sbci	r22, 0x0A	; 10
    26c4:	70 41       	sbci	r23, 0x10	; 16
    26c6:	21 f1       	breq	.+72     	; 0x2710 <_Z12processFrameR7Message+0x14e>
    26c8:	08 95       	ret
    26ca:	49 39       	cpi	r20, 0x99	; 153
    26cc:	e0 e8       	ldi	r30, 0x80	; 128
    26ce:	5e 07       	cpc	r21, r30
    26d0:	ec e0       	ldi	r30, 0x0C	; 12
    26d2:	6e 07       	cpc	r22, r30
    26d4:	e0 e1       	ldi	r30, 0x10	; 16
    26d6:	7e 07       	cpc	r23, r30
    26d8:	a9 f0       	breq	.+42     	; 0x2704 <_Z12processFrameR7Message+0x142>
    26da:	49 38       	cpi	r20, 0x89	; 137
    26dc:	50 4e       	sbci	r21, 0xE0	; 224
    26de:	61 43       	sbci	r22, 0x31	; 49
    26e0:	70 41       	sbci	r23, 0x10	; 16
    26e2:	91 f0       	breq	.+36     	; 0x2708 <_Z12processFrameR7Message+0x146>
    26e4:	08 95       	ret
    26e6:	6f e3       	ldi	r22, 0x3F	; 63
    26e8:	71 e0       	ldi	r23, 0x01	; 1
    26ea:	02 c0       	rjmp	.+4      	; 0x26f0 <_Z12processFrameR7Message+0x12e>
    26ec:	67 e3       	ldi	r22, 0x37	; 55
    26ee:	71 e0       	ldi	r23, 0x01	; 1
    26f0:	0c 94 9e 12 	jmp	0x253c	; 0x253c <_Z10processVINR7MessagePKh>
    26f4:	0c 94 00 07 	jmp	0xe00	; 0xe00 <_Z15processLightingR7Message>
    26f8:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <_Z12processSpeedR7Message>
    26fc:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <_Z11processFuelR7Message>
    2700:	0c 94 22 05 	jmp	0xa44	; 0xa44 <_Z22processBrakesAndCruiseR7Message>
    2704:	0c 94 08 05 	jmp	0xa10	; 0xa10 <_Z11processHVACR7Message>
    2708:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <_Z12processRadioR7Message>
    270c:	0c 94 04 04 	jmp	0x808	; 0x808 <_Z13processDimmerR7Message>
    2710:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <_Z10processGPSR7Message>
    2714:	0c 94 11 04 	jmp	0x822	; 0x822 <_Z17processGeographicR7Message>
    2718:	0c 94 4a 03 	jmp	0x694	; 0x694 <_Z11processTimeR7Message>
    271c:	fc 01       	movw	r30, r24
    271e:	90 85       	ldd	r25, Z+8	; 0x08
    2720:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <doorStatus>
    2724:	99 23       	and	r25, r25
    2726:	11 f0       	breq	.+4      	; 0x272c <_Z12processFrameR7Message+0x16a>
    2728:	80 68       	ori	r24, 0x80	; 128
    272a:	0c c0       	rjmp	.+24     	; 0x2744 <_Z12processFrameR7Message+0x182>
    272c:	87 7f       	andi	r24, 0xF7	; 247
    272e:	0a c0       	rjmp	.+20     	; 0x2744 <_Z12processFrameR7Message+0x182>
    2730:	fc 01       	movw	r30, r24
    2732:	90 85       	ldd	r25, Z+8	; 0x08
    2734:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <doorStatus>
    2738:	99 23       	and	r25, r25
    273a:	11 f0       	breq	.+4      	; 0x2740 <_Z12processFrameR7Message+0x17e>
    273c:	81 60       	ori	r24, 0x01	; 1
    273e:	02 c0       	rjmp	.+4      	; 0x2744 <_Z12processFrameR7Message+0x182>
    2740:	8e 7f       	andi	r24, 0xFE	; 254
    2742:	80 95       	com	r24
    2744:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <doorStatus>
    2748:	08 95       	ret
    274a:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    274e:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    2752:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    2756:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    275a:	80 64       	ori	r24, 0x40	; 64
    275c:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    2760:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    2764:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    2768:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    276c:	08 95       	ret
    276e:	08 95       	ret

00002770 <_Z7onSleepv>:
    2770:	ea e5       	ldi	r30, 0x5A	; 90
    2772:	f2 e0       	ldi	r31, 0x02	; 2
    2774:	11 82       	std	Z+1, r1	; 0x01
    2776:	12 82       	std	Z+2, r1	; 0x02
    2778:	13 82       	std	Z+3, r1	; 0x03
    277a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    277e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    2782:	8f 7d       	andi	r24, 0xDF	; 223
    2784:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2788:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    278c:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <triggers>
    2790:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <triggers+0x1>
    2794:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <triggers+0x2>
    2798:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <triggers+0x3>
    279c:	08 95       	ret

0000279e <_ZN6Sleepy4tickEv>:
    279e:	0f 93       	push	r16
    27a0:	1f 93       	push	r17
    27a2:	cf 93       	push	r28
    27a4:	df 93       	push	r29
    27a6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    27aa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    27ae:	31 ff       	sbrs	r19, 1
    27b0:	19 c0       	rjmp	.+50     	; 0x27e4 <_ZN6Sleepy4tickEv+0x46>
    27b2:	ec 01       	movw	r28, r24
    27b4:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    27b8:	08 81       	ld	r16, Y
    27ba:	19 81       	ldd	r17, Y+1	; 0x01
    27bc:	2a 81       	ldd	r18, Y+2	; 0x02
    27be:	3b 81       	ldd	r19, Y+3	; 0x03
    27c0:	00 5f       	subi	r16, 0xF0	; 240
    27c2:	18 4d       	sbci	r17, 0xD8	; 216
    27c4:	2f 4f       	sbci	r18, 0xFF	; 255
    27c6:	3f 4f       	sbci	r19, 0xFF	; 255
    27c8:	06 17       	cp	r16, r22
    27ca:	17 07       	cpc	r17, r23
    27cc:	28 07       	cpc	r18, r24
    27ce:	39 07       	cpc	r19, r25
    27d0:	48 f4       	brcc	.+18     	; 0x27e4 <_ZN6Sleepy4tickEv+0x46>
    27d2:	0e 94 b8 13 	call	0x2770	; 0x2770 <_Z7onSleepv>
    27d6:	ce 01       	movw	r24, r28
    27d8:	df 91       	pop	r29
    27da:	cf 91       	pop	r28
    27dc:	1f 91       	pop	r17
    27de:	0f 91       	pop	r16
    27e0:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <_ZN6Sleepy8SleepAVREv>
    27e4:	df 91       	pop	r29
    27e6:	cf 91       	pop	r28
    27e8:	1f 91       	pop	r17
    27ea:	0f 91       	pop	r16
    27ec:	08 95       	ret

000027ee <_Z19steeringWheelButtonRKhRKj>:
    27ee:	ef 92       	push	r14
    27f0:	ff 92       	push	r15
    27f2:	0f 93       	push	r16
    27f4:	1f 93       	push	r17
    27f6:	cf 93       	push	r28
    27f8:	df 93       	push	r29
    27fa:	cd b7       	in	r28, 0x3d	; 61
    27fc:	de b7       	in	r29, 0x3e	; 62
    27fe:	60 97       	sbiw	r28, 0x10	; 16
    2800:	0f b6       	in	r0, 0x3f	; 63
    2802:	f8 94       	cli
    2804:	de bf       	out	0x3e, r29	; 62
    2806:	0f be       	out	0x3f, r0	; 63
    2808:	cd bf       	out	0x3d, r28	; 61
    280a:	7c 01       	movw	r14, r24
    280c:	8b 01       	movw	r16, r22
    280e:	ce 01       	movw	r24, r28
    2810:	01 96       	adiw	r24, 0x01	; 1
    2812:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    2816:	80 e4       	ldi	r24, 0x40	; 64
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	ad e0       	ldi	r26, 0x0D	; 13
    281c:	b0 e1       	ldi	r27, 0x10	; 16
    281e:	89 83       	std	Y+1, r24	; 0x01
    2820:	9a 83       	std	Y+2, r25	; 0x02
    2822:	ab 83       	std	Y+3, r26	; 0x03
    2824:	bc 83       	std	Y+4, r27	; 0x04
    2826:	82 e0       	ldi	r24, 0x02	; 2
    2828:	8d 83       	std	Y+5, r24	; 0x05
    282a:	88 e0       	ldi	r24, 0x08	; 8
    282c:	8e 83       	std	Y+6, r24	; 0x06
    282e:	84 e0       	ldi	r24, 0x04	; 4
    2830:	88 87       	std	Y+8, r24	; 0x08
    2832:	f7 01       	movw	r30, r14
    2834:	80 81       	ld	r24, Z
    2836:	89 87       	std	Y+9, r24	; 0x09
    2838:	be 01       	movw	r22, r28
    283a:	6f 5f       	subi	r22, 0xFF	; 255
    283c:	7f 4f       	sbci	r23, 0xFF	; 255
    283e:	8a e5       	ldi	r24, 0x5A	; 90
    2840:	92 e0       	ldi	r25, 0x02	; 2
    2842:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    2846:	88 23       	and	r24, r24
    2848:	31 f1       	breq	.+76     	; 0x2896 <_Z19steeringWheelButtonRKhRKj+0xa8>
    284a:	f7 01       	movw	r30, r14
    284c:	20 81       	ld	r18, Z
    284e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2852:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    2856:	22 23       	and	r18, r18
    2858:	c9 f0       	breq	.+50     	; 0x288c <_Z19steeringWheelButtonRKhRKj+0x9e>
    285a:	94 60       	ori	r25, 0x04	; 4
    285c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2860:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2864:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    2868:	f8 01       	movw	r30, r16
    286a:	20 81       	ld	r18, Z
    286c:	31 81       	ldd	r19, Z+1	; 0x01
    286e:	dc 01       	movw	r26, r24
    2870:	cb 01       	movw	r24, r22
    2872:	82 0f       	add	r24, r18
    2874:	93 1f       	adc	r25, r19
    2876:	a1 1d       	adc	r26, r1
    2878:	b1 1d       	adc	r27, r1
    287a:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <radioButtonTerminateAt>
    287e:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <radioButtonTerminateAt+0x1>
    2882:	a0 93 72 03 	sts	0x0372, r26	; 0x800372 <radioButtonTerminateAt+0x2>
    2886:	b0 93 73 03 	sts	0x0373, r27	; 0x800373 <radioButtonTerminateAt+0x3>
    288a:	05 c0       	rjmp	.+10     	; 0x2896 <_Z19steeringWheelButtonRKhRKj+0xa8>
    288c:	9b 7f       	andi	r25, 0xFB	; 251
    288e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    2892:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2896:	60 96       	adiw	r28, 0x10	; 16
    2898:	0f b6       	in	r0, 0x3f	; 63
    289a:	f8 94       	cli
    289c:	de bf       	out	0x3e, r29	; 62
    289e:	0f be       	out	0x3f, r0	; 63
    28a0:	cd bf       	out	0x3d, r28	; 61
    28a2:	df 91       	pop	r29
    28a4:	cf 91       	pop	r28
    28a6:	1f 91       	pop	r17
    28a8:	0f 91       	pop	r16
    28aa:	ff 90       	pop	r15
    28ac:	ef 90       	pop	r14
    28ae:	08 95       	ret

000028b0 <_Z10globalTickv>:
    28b0:	0f 93       	push	r16
    28b2:	1f 93       	push	r17
    28b4:	cf 93       	push	r28
    28b6:	df 93       	push	r29
    28b8:	00 d0       	rcall	.+0      	; 0x28ba <_Z10globalTickv+0xa>
    28ba:	1f 92       	push	r1
    28bc:	cd b7       	in	r28, 0x3d	; 61
    28be:	de b7       	in	r29, 0x3e	; 62
    28c0:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    28c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    28c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    28cc:	32 ff       	sbrs	r19, 2
    28ce:	17 c0       	rjmp	.+46     	; 0x28fe <_Z10globalTickv+0x4e>
    28d0:	00 91 70 03 	lds	r16, 0x0370	; 0x800370 <radioButtonTerminateAt>
    28d4:	10 91 71 03 	lds	r17, 0x0371	; 0x800371 <radioButtonTerminateAt+0x1>
    28d8:	20 91 72 03 	lds	r18, 0x0372	; 0x800372 <radioButtonTerminateAt+0x2>
    28dc:	30 91 73 03 	lds	r19, 0x0373	; 0x800373 <radioButtonTerminateAt+0x3>
    28e0:	06 17       	cp	r16, r22
    28e2:	17 07       	cpc	r17, r23
    28e4:	28 07       	cpc	r18, r24
    28e6:	39 07       	cpc	r19, r25
    28e8:	50 f4       	brcc	.+20     	; 0x28fe <_Z10globalTickv+0x4e>
    28ea:	1a 82       	std	Y+2, r1	; 0x02
    28ec:	19 82       	std	Y+1, r1	; 0x01
    28ee:	1b 82       	std	Y+3, r1	; 0x03
    28f0:	be 01       	movw	r22, r28
    28f2:	6f 5f       	subi	r22, 0xFF	; 255
    28f4:	7f 4f       	sbci	r23, 0xFF	; 255
    28f6:	ce 01       	movw	r24, r28
    28f8:	03 96       	adiw	r24, 0x03	; 3
    28fa:	0e 94 f7 13 	call	0x27ee	; 0x27ee <_Z19steeringWheelButtonRKhRKj>
    28fe:	0f 90       	pop	r0
    2900:	0f 90       	pop	r0
    2902:	0f 90       	pop	r0
    2904:	df 91       	pop	r29
    2906:	cf 91       	pop	r28
    2908:	1f 91       	pop	r17
    290a:	0f 91       	pop	r16
    290c:	08 95       	ret

0000290e <_Z13buttonHandlerh>:
    290e:	cf 93       	push	r28
    2910:	df 93       	push	r29
    2912:	00 d0       	rcall	.+0      	; 0x2914 <_Z13buttonHandlerh+0x6>
    2914:	1f 92       	push	r1
    2916:	cd b7       	in	r28, 0x3d	; 61
    2918:	de b7       	in	r29, 0x3e	; 62
    291a:	85 ff       	sbrs	r24, 5
    291c:	12 c0       	rjmp	.+36     	; 0x2942 <_Z13buttonHandlerh+0x34>
    291e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    2922:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    2926:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    292a:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    292e:	80 64       	ori	r24, 0x40	; 64
    2930:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    2934:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    2938:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    293c:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    2940:	5d c0       	rjmp	.+186    	; 0x29fc <_Z13buttonHandlerh+0xee>
    2942:	98 2f       	mov	r25, r24
    2944:	90 71       	andi	r25, 0x10	; 16
    2946:	28 2f       	mov	r18, r24
    2948:	28 70       	andi	r18, 0x08	; 8
    294a:	83 ff       	sbrs	r24, 3
    294c:	27 c0       	rjmp	.+78     	; 0x299c <_Z13buttonHandlerh+0x8e>
    294e:	91 11       	cpse	r25, r1
    2950:	25 c0       	rjmp	.+74     	; 0x299c <_Z13buttonHandlerh+0x8e>
    2952:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <display>
    2956:	29 2f       	mov	r18, r25
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	21 31       	cpi	r18, 0x11	; 17
    295c:	31 05       	cpc	r19, r1
    295e:	14 f4       	brge	.+4      	; 0x2964 <_Z13buttonHandlerh+0x56>
    2960:	9f 5f       	subi	r25, 0xFF	; 255
    2962:	01 c0       	rjmp	.+2      	; 0x2966 <_Z13buttonHandlerh+0x58>
    2964:	91 e0       	ldi	r25, 0x01	; 1
    2966:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <display>
    296a:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <triggers>
    296e:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <triggers+0x1>
    2972:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <triggers+0x2>
    2976:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <triggers+0x3>
    297a:	62 60       	ori	r22, 0x02	; 2
    297c:	40 93 56 02 	sts	0x0256, r20	; 0x800256 <triggers>
    2980:	50 93 57 02 	sts	0x0257, r21	; 0x800257 <triggers+0x1>
    2984:	60 93 58 02 	sts	0x0258, r22	; 0x800258 <triggers+0x2>
    2988:	70 93 59 02 	sts	0x0259, r23	; 0x800259 <triggers+0x3>
    298c:	86 ff       	sbrs	r24, 6
    298e:	36 c0       	rjmp	.+108    	; 0x29fc <_Z13buttonHandlerh+0xee>
    2990:	88 eb       	ldi	r24, 0xB8	; 184
    2992:	9b e0       	ldi	r25, 0x0B	; 11
    2994:	9a 83       	std	Y+2, r25	; 0x02
    2996:	89 83       	std	Y+1, r24	; 0x01
    2998:	82 e0       	ldi	r24, 0x02	; 2
    299a:	28 c0       	rjmp	.+80     	; 0x29ec <_Z13buttonHandlerh+0xde>
    299c:	99 23       	and	r25, r25
    299e:	71 f1       	breq	.+92     	; 0x29fc <_Z13buttonHandlerh+0xee>
    29a0:	21 11       	cpse	r18, r1
    29a2:	2c c0       	rjmp	.+88     	; 0x29fc <_Z13buttonHandlerh+0xee>
    29a4:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <display+0x1>
    29a8:	29 2f       	mov	r18, r25
    29aa:	30 e0       	ldi	r19, 0x00	; 0
    29ac:	21 31       	cpi	r18, 0x11	; 17
    29ae:	31 05       	cpc	r19, r1
    29b0:	14 f4       	brge	.+4      	; 0x29b6 <_Z13buttonHandlerh+0xa8>
    29b2:	9f 5f       	subi	r25, 0xFF	; 255
    29b4:	01 c0       	rjmp	.+2      	; 0x29b8 <_Z13buttonHandlerh+0xaa>
    29b6:	91 e0       	ldi	r25, 0x01	; 1
    29b8:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <display+0x1>
    29bc:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <triggers>
    29c0:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <triggers+0x1>
    29c4:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <triggers+0x2>
    29c8:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <triggers+0x3>
    29cc:	62 60       	ori	r22, 0x02	; 2
    29ce:	40 93 56 02 	sts	0x0256, r20	; 0x800256 <triggers>
    29d2:	50 93 57 02 	sts	0x0257, r21	; 0x800257 <triggers+0x1>
    29d6:	60 93 58 02 	sts	0x0258, r22	; 0x800258 <triggers+0x2>
    29da:	70 93 59 02 	sts	0x0259, r23	; 0x800259 <triggers+0x3>
    29de:	86 ff       	sbrs	r24, 6
    29e0:	0d c0       	rjmp	.+26     	; 0x29fc <_Z13buttonHandlerh+0xee>
    29e2:	88 eb       	ldi	r24, 0xB8	; 184
    29e4:	9b e0       	ldi	r25, 0x0B	; 11
    29e6:	9a 83       	std	Y+2, r25	; 0x02
    29e8:	89 83       	std	Y+1, r24	; 0x01
    29ea:	83 e0       	ldi	r24, 0x03	; 3
    29ec:	8b 83       	std	Y+3, r24	; 0x03
    29ee:	be 01       	movw	r22, r28
    29f0:	6f 5f       	subi	r22, 0xFF	; 255
    29f2:	7f 4f       	sbci	r23, 0xFF	; 255
    29f4:	ce 01       	movw	r24, r28
    29f6:	03 96       	adiw	r24, 0x03	; 3
    29f8:	0e 94 f7 13 	call	0x27ee	; 0x27ee <_Z19steeringWheelButtonRKhRKj>
    29fc:	0f 90       	pop	r0
    29fe:	0f 90       	pop	r0
    2a00:	0f 90       	pop	r0
    2a02:	df 91       	pop	r29
    2a04:	cf 91       	pop	r28
    2a06:	08 95       	ret

00002a08 <_ZN7Buttons4tickEv>:
    2a08:	8f 92       	push	r8
    2a0a:	9f 92       	push	r9
    2a0c:	af 92       	push	r10
    2a0e:	bf 92       	push	r11
    2a10:	cf 92       	push	r12
    2a12:	df 92       	push	r13
    2a14:	ef 92       	push	r14
    2a16:	ff 92       	push	r15
    2a18:	0f 93       	push	r16
    2a1a:	1f 93       	push	r17
    2a1c:	cf 93       	push	r28
    2a1e:	df 93       	push	r29
    2a20:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2a24:	22 fd       	sbrc	r18, 2
    2a26:	03 c0       	rjmp	.+6      	; 0x2a2e <_ZN7Buttons4tickEv+0x26>
    2a28:	fc 01       	movw	r30, r24
    2a2a:	10 82       	st	Z, r1
    2a2c:	cc c0       	rjmp	.+408    	; 0x2bc6 <_ZN7Buttons4tickEv+0x1be>
    2a2e:	ec 01       	movw	r28, r24
    2a30:	83 e1       	ldi	r24, 0x13	; 19
    2a32:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <digitalRead>
    2a36:	18 2f       	mov	r17, r24
    2a38:	87 e1       	ldi	r24, 0x17	; 23
    2a3a:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <digitalRead>
    2a3e:	08 2f       	mov	r16, r24
    2a40:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    2a44:	63 30       	cpi	r22, 0x03	; 3
    2a46:	71 05       	cpc	r23, r1
    2a48:	81 05       	cpc	r24, r1
    2a4a:	91 05       	cpc	r25, r1
    2a4c:	28 f4       	brcc	.+10     	; 0x2a58 <_ZN7Buttons4tickEv+0x50>
    2a4e:	18 82       	st	Y, r1
    2a50:	11 30       	cpi	r17, 0x01	; 1
    2a52:	89 f4       	brne	.+34     	; 0x2a76 <_ZN7Buttons4tickEv+0x6e>
    2a54:	20 e0       	ldi	r18, 0x00	; 0
    2a56:	05 c0       	rjmp	.+10     	; 0x2a62 <_ZN7Buttons4tickEv+0x5a>
    2a58:	11 30       	cpi	r17, 0x01	; 1
    2a5a:	69 f4       	brne	.+26     	; 0x2a76 <_ZN7Buttons4tickEv+0x6e>
    2a5c:	28 81       	ld	r18, Y
    2a5e:	20 fd       	sbrc	r18, 0
    2a60:	0a c0       	rjmp	.+20     	; 0x2a76 <_ZN7Buttons4tickEv+0x6e>
    2a62:	21 60       	ori	r18, 0x01	; 1
    2a64:	28 83       	st	Y, r18
    2a66:	60 93 60 03 	sts	0x0360, r22	; 0x800360 <a1_start>
    2a6a:	70 93 61 03 	sts	0x0361, r23	; 0x800361 <a1_start+0x1>
    2a6e:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <a1_start+0x2>
    2a72:	90 93 63 03 	sts	0x0363, r25	; 0x800363 <a1_start+0x3>
    2a76:	01 30       	cpi	r16, 0x01	; 1
    2a78:	a1 f4       	brne	.+40     	; 0x2aa2 <_ZN7Buttons4tickEv+0x9a>
    2a7a:	28 81       	ld	r18, Y
    2a7c:	21 fd       	sbrc	r18, 1
    2a7e:	0a c0       	rjmp	.+20     	; 0x2a94 <_ZN7Buttons4tickEv+0x8c>
    2a80:	22 60       	ori	r18, 0x02	; 2
    2a82:	28 83       	st	Y, r18
    2a84:	60 93 5c 03 	sts	0x035C, r22	; 0x80035c <a5_start>
    2a88:	70 93 5d 03 	sts	0x035D, r23	; 0x80035d <a5_start+0x1>
    2a8c:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <a5_start+0x2>
    2a90:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <a5_start+0x3>
    2a94:	11 30       	cpi	r17, 0x01	; 1
    2a96:	39 f4       	brne	.+14     	; 0x2aa6 <_ZN7Buttons4tickEv+0x9e>
    2a98:	88 81       	ld	r24, Y
    2a9a:	82 fd       	sbrc	r24, 2
    2a9c:	79 c0       	rjmp	.+242    	; 0x2b90 <_ZN7Buttons4tickEv+0x188>
    2a9e:	84 60       	ori	r24, 0x04	; 4
    2aa0:	76 c0       	rjmp	.+236    	; 0x2b8e <_ZN7Buttons4tickEv+0x186>
    2aa2:	11 30       	cpi	r17, 0x01	; 1
    2aa4:	d1 f1       	breq	.+116    	; 0x2b1a <_ZN7Buttons4tickEv+0x112>
    2aa6:	11 11       	cpse	r17, r1
    2aa8:	38 c0       	rjmp	.+112    	; 0x2b1a <_ZN7Buttons4tickEv+0x112>
    2aaa:	38 81       	ld	r19, Y
    2aac:	30 ff       	sbrs	r19, 0
    2aae:	35 c0       	rjmp	.+106    	; 0x2b1a <_ZN7Buttons4tickEv+0x112>
    2ab0:	23 2f       	mov	r18, r19
    2ab2:	2e 7f       	andi	r18, 0xFE	; 254
    2ab4:	28 83       	st	Y, r18
    2ab6:	c0 90 60 03 	lds	r12, 0x0360	; 0x800360 <a1_start>
    2aba:	d0 90 61 03 	lds	r13, 0x0361	; 0x800361 <a1_start+0x1>
    2abe:	e0 90 62 03 	lds	r14, 0x0362	; 0x800362 <a1_start+0x2>
    2ac2:	f0 90 63 03 	lds	r15, 0x0363	; 0x800363 <a1_start+0x3>
    2ac6:	4b 01       	movw	r8, r22
    2ac8:	5c 01       	movw	r10, r24
    2aca:	8c 18       	sub	r8, r12
    2acc:	9d 08       	sbc	r9, r13
    2ace:	ae 08       	sbc	r10, r14
    2ad0:	bf 08       	sbc	r11, r15
    2ad2:	75 01       	movw	r14, r10
    2ad4:	64 01       	movw	r12, r8
    2ad6:	80 92 58 03 	sts	0x0358, r8	; 0x800358 <a1_dur>
    2ada:	90 92 59 03 	sts	0x0359, r9	; 0x800359 <a1_dur+0x1>
    2ade:	a0 92 5a 03 	sts	0x035A, r10	; 0x80035a <a1_dur+0x2>
    2ae2:	b0 92 5b 03 	sts	0x035B, r11	; 0x80035b <a1_dur+0x3>
    2ae6:	46 e9       	ldi	r20, 0x96	; 150
    2ae8:	84 1a       	sub	r8, r20
    2aea:	91 08       	sbc	r9, r1
    2aec:	a1 08       	sbc	r10, r1
    2aee:	b1 08       	sbc	r11, r1
    2af0:	e3 ef       	ldi	r30, 0xF3	; 243
    2af2:	8e 16       	cp	r8, r30
    2af4:	e2 e1       	ldi	r30, 0x12	; 18
    2af6:	9e 06       	cpc	r9, r30
    2af8:	a1 04       	cpc	r10, r1
    2afa:	b1 04       	cpc	r11, r1
    2afc:	60 f4       	brcc	.+24     	; 0x2b16 <_ZN7Buttons4tickEv+0x10e>
    2afe:	f8 ee       	ldi	r31, 0xE8	; 232
    2b00:	cf 16       	cp	r12, r31
    2b02:	f3 e0       	ldi	r31, 0x03	; 3
    2b04:	df 06       	cpc	r13, r31
    2b06:	e1 04       	cpc	r14, r1
    2b08:	f1 04       	cpc	r15, r1
    2b0a:	10 f4       	brcc	.+4      	; 0x2b10 <_ZN7Buttons4tickEv+0x108>
    2b0c:	28 60       	ori	r18, 0x08	; 8
    2b0e:	01 c0       	rjmp	.+2      	; 0x2b12 <_ZN7Buttons4tickEv+0x10a>
    2b10:	28 64       	ori	r18, 0x48	; 72
    2b12:	28 83       	st	Y, r18
    2b14:	02 c0       	rjmp	.+4      	; 0x2b1a <_ZN7Buttons4tickEv+0x112>
    2b16:	36 7f       	andi	r19, 0xF6	; 246
    2b18:	38 83       	st	Y, r19
    2b1a:	01 11       	cpse	r16, r1
    2b1c:	39 c0       	rjmp	.+114    	; 0x2b90 <_ZN7Buttons4tickEv+0x188>
    2b1e:	38 81       	ld	r19, Y
    2b20:	31 ff       	sbrs	r19, 1
    2b22:	42 c0       	rjmp	.+132    	; 0x2ba8 <_ZN7Buttons4tickEv+0x1a0>
    2b24:	23 2f       	mov	r18, r19
    2b26:	2d 7f       	andi	r18, 0xFD	; 253
    2b28:	28 83       	st	Y, r18
    2b2a:	c0 90 5c 03 	lds	r12, 0x035C	; 0x80035c <a5_start>
    2b2e:	d0 90 5d 03 	lds	r13, 0x035D	; 0x80035d <a5_start+0x1>
    2b32:	e0 90 5e 03 	lds	r14, 0x035E	; 0x80035e <a5_start+0x2>
    2b36:	f0 90 5f 03 	lds	r15, 0x035F	; 0x80035f <a5_start+0x3>
    2b3a:	dc 01       	movw	r26, r24
    2b3c:	cb 01       	movw	r24, r22
    2b3e:	8c 19       	sub	r24, r12
    2b40:	9d 09       	sbc	r25, r13
    2b42:	ae 09       	sbc	r26, r14
    2b44:	bf 09       	sbc	r27, r15
    2b46:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <a5_dur>
    2b4a:	90 93 55 03 	sts	0x0355, r25	; 0x800355 <a5_dur+0x1>
    2b4e:	a0 93 56 03 	sts	0x0356, r26	; 0x800356 <a5_dur+0x2>
    2b52:	b0 93 57 03 	sts	0x0357, r27	; 0x800357 <a5_dur+0x3>
    2b56:	6c 01       	movw	r12, r24
    2b58:	7d 01       	movw	r14, r26
    2b5a:	46 e9       	ldi	r20, 0x96	; 150
    2b5c:	c4 1a       	sub	r12, r20
    2b5e:	d1 08       	sbc	r13, r1
    2b60:	e1 08       	sbc	r14, r1
    2b62:	f1 08       	sbc	r15, r1
    2b64:	e3 ef       	ldi	r30, 0xF3	; 243
    2b66:	ce 16       	cp	r12, r30
    2b68:	e2 e1       	ldi	r30, 0x12	; 18
    2b6a:	de 06       	cpc	r13, r30
    2b6c:	e1 04       	cpc	r14, r1
    2b6e:	f1 04       	cpc	r15, r1
    2b70:	50 f4       	brcc	.+20     	; 0x2b86 <_ZN7Buttons4tickEv+0x17e>
    2b72:	88 3e       	cpi	r24, 0xE8	; 232
    2b74:	93 40       	sbci	r25, 0x03	; 3
    2b76:	a1 05       	cpc	r26, r1
    2b78:	b1 05       	cpc	r27, r1
    2b7a:	10 f4       	brcc	.+4      	; 0x2b80 <_ZN7Buttons4tickEv+0x178>
    2b7c:	20 61       	ori	r18, 0x10	; 16
    2b7e:	01 c0       	rjmp	.+2      	; 0x2b82 <_ZN7Buttons4tickEv+0x17a>
    2b80:	20 65       	ori	r18, 0x50	; 80
    2b82:	28 83       	st	Y, r18
    2b84:	11 c0       	rjmp	.+34     	; 0x2ba8 <_ZN7Buttons4tickEv+0x1a0>
    2b86:	3d 7e       	andi	r19, 0xED	; 237
    2b88:	38 83       	st	Y, r19
    2b8a:	0e c0       	rjmp	.+28     	; 0x2ba8 <_ZN7Buttons4tickEv+0x1a0>
    2b8c:	8b 7d       	andi	r24, 0xDB	; 219
    2b8e:	88 83       	st	Y, r24
    2b90:	88 81       	ld	r24, Y
    2b92:	98 2f       	mov	r25, r24
    2b94:	97 70       	andi	r25, 0x07	; 7
    2b96:	b9 f4       	brne	.+46     	; 0x2bc6 <_ZN7Buttons4tickEv+0x1be>
    2b98:	88 30       	cpi	r24, 0x08	; 8
    2b9a:	a8 f0       	brcs	.+42     	; 0x2bc6 <_ZN7Buttons4tickEv+0x1be>
    2b9c:	0e 94 87 14 	call	0x290e	; 0x290e <_Z13buttonHandlerh>
    2ba0:	88 81       	ld	r24, Y
    2ba2:	87 78       	andi	r24, 0x87	; 135
    2ba4:	88 83       	st	Y, r24
    2ba6:	0f c0       	rjmp	.+30     	; 0x2bc6 <_ZN7Buttons4tickEv+0x1be>
    2ba8:	11 11       	cpse	r17, r1
    2baa:	f2 cf       	rjmp	.-28     	; 0x2b90 <_ZN7Buttons4tickEv+0x188>
    2bac:	88 81       	ld	r24, Y
    2bae:	82 ff       	sbrs	r24, 2
    2bb0:	ef cf       	rjmp	.-34     	; 0x2b90 <_ZN7Buttons4tickEv+0x188>
    2bb2:	98 2f       	mov	r25, r24
    2bb4:	9b 7f       	andi	r25, 0xFB	; 251
    2bb6:	98 83       	st	Y, r25
    2bb8:	28 2f       	mov	r18, r24
    2bba:	28 71       	andi	r18, 0x18	; 24
    2bbc:	28 31       	cpi	r18, 0x18	; 24
    2bbe:	31 f7       	brne	.-52     	; 0x2b8c <_ZN7Buttons4tickEv+0x184>
    2bc0:	90 62       	ori	r25, 0x20	; 32
    2bc2:	98 83       	st	Y, r25
    2bc4:	e5 cf       	rjmp	.-54     	; 0x2b90 <_ZN7Buttons4tickEv+0x188>
    2bc6:	df 91       	pop	r29
    2bc8:	cf 91       	pop	r28
    2bca:	1f 91       	pop	r17
    2bcc:	0f 91       	pop	r16
    2bce:	ff 90       	pop	r15
    2bd0:	ef 90       	pop	r14
    2bd2:	df 90       	pop	r13
    2bd4:	cf 90       	pop	r12
    2bd6:	bf 90       	pop	r11
    2bd8:	af 90       	pop	r10
    2bda:	9f 90       	pop	r9
    2bdc:	8f 90       	pop	r8
    2bde:	08 95       	ret

00002be0 <_Z12setPressureshhhh>:
    2be0:	8f 92       	push	r8
    2be2:	9f 92       	push	r9
    2be4:	af 92       	push	r10
    2be6:	bf 92       	push	r11
    2be8:	cf 92       	push	r12
    2bea:	df 92       	push	r13
    2bec:	ef 92       	push	r14
    2bee:	ff 92       	push	r15
    2bf0:	cf 93       	push	r28
    2bf2:	df 93       	push	r29
    2bf4:	cd b7       	in	r28, 0x3d	; 61
    2bf6:	de b7       	in	r29, 0x3e	; 62
    2bf8:	60 97       	sbiw	r28, 0x10	; 16
    2bfa:	0f b6       	in	r0, 0x3f	; 63
    2bfc:	f8 94       	cli
    2bfe:	de bf       	out	0x3e, r29	; 62
    2c00:	0f be       	out	0x3f, r0	; 63
    2c02:	cd bf       	out	0x3d, r28	; 61
    2c04:	c8 2e       	mov	r12, r24
    2c06:	e6 2e       	mov	r14, r22
    2c08:	d4 2e       	mov	r13, r20
    2c0a:	f2 2e       	mov	r15, r18
    2c0c:	ce 01       	movw	r24, r28
    2c0e:	01 96       	adiw	r24, 0x01	; 1
    2c10:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    2c14:	80 eb       	ldi	r24, 0xB0	; 176
    2c16:	90 ea       	ldi	r25, 0xA0	; 160
    2c18:	a0 e0       	ldi	r26, 0x00	; 0
    2c1a:	b0 e1       	ldi	r27, 0x10	; 16
    2c1c:	89 83       	std	Y+1, r24	; 0x01
    2c1e:	9a 83       	std	Y+2, r25	; 0x02
    2c20:	ab 83       	std	Y+3, r26	; 0x03
    2c22:	bc 83       	std	Y+4, r27	; 0x04
    2c24:	82 e0       	ldi	r24, 0x02	; 2
    2c26:	8d 83       	std	Y+5, r24	; 0x05
    2c28:	88 e0       	ldi	r24, 0x08	; 8
    2c2a:	8e 83       	std	Y+6, r24	; 0x06
    2c2c:	88 87       	std	Y+8, r24	; 0x08
    2c2e:	84 e2       	ldi	r24, 0x24	; 36
    2c30:	89 87       	std	Y+9, r24	; 0x09
    2c32:	8a 87       	std	Y+10, r24	; 0x0a
    2c34:	6c 2d       	mov	r22, r12
    2c36:	70 e0       	ldi	r23, 0x00	; 0
    2c38:	80 e0       	ldi	r24, 0x00	; 0
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    2c40:	2d e3       	ldi	r18, 0x3D	; 61
    2c42:	3e e9       	ldi	r19, 0x9E	; 158
    2c44:	42 e1       	ldi	r20, 0x12	; 18
    2c46:	5f e3       	ldi	r21, 0x3F	; 63
    2c48:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    2c4c:	4b 01       	movw	r8, r22
    2c4e:	5c 01       	movw	r10, r24
    2c50:	20 e0       	ldi	r18, 0x00	; 0
    2c52:	30 e0       	ldi	r19, 0x00	; 0
    2c54:	a9 01       	movw	r20, r18
    2c56:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    2c5a:	20 e0       	ldi	r18, 0x00	; 0
    2c5c:	30 e0       	ldi	r19, 0x00	; 0
    2c5e:	40 e0       	ldi	r20, 0x00	; 0
    2c60:	5f e3       	ldi	r21, 0x3F	; 63
    2c62:	87 fd       	sbrc	r24, 7
    2c64:	05 c0       	rjmp	.+10     	; 0x2c70 <_Z12setPressureshhhh+0x90>
    2c66:	c5 01       	movw	r24, r10
    2c68:	b4 01       	movw	r22, r8
    2c6a:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    2c6e:	04 c0       	rjmp	.+8      	; 0x2c78 <_Z12setPressureshhhh+0x98>
    2c70:	c5 01       	movw	r24, r10
    2c72:	b4 01       	movw	r22, r8
    2c74:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    2c78:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixsfsi>
    2c7c:	6b 87       	std	Y+11, r22	; 0x0b
    2c7e:	6d 2d       	mov	r22, r13
    2c80:	70 e0       	ldi	r23, 0x00	; 0
    2c82:	80 e0       	ldi	r24, 0x00	; 0
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    2c8a:	2d e3       	ldi	r18, 0x3D	; 61
    2c8c:	3e e9       	ldi	r19, 0x9E	; 158
    2c8e:	42 e1       	ldi	r20, 0x12	; 18
    2c90:	5f e3       	ldi	r21, 0x3F	; 63
    2c92:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    2c96:	4b 01       	movw	r8, r22
    2c98:	5c 01       	movw	r10, r24
    2c9a:	20 e0       	ldi	r18, 0x00	; 0
    2c9c:	30 e0       	ldi	r19, 0x00	; 0
    2c9e:	a9 01       	movw	r20, r18
    2ca0:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    2ca4:	20 e0       	ldi	r18, 0x00	; 0
    2ca6:	30 e0       	ldi	r19, 0x00	; 0
    2ca8:	40 e0       	ldi	r20, 0x00	; 0
    2caa:	5f e3       	ldi	r21, 0x3F	; 63
    2cac:	87 fd       	sbrc	r24, 7
    2cae:	05 c0       	rjmp	.+10     	; 0x2cba <_Z12setPressureshhhh+0xda>
    2cb0:	c5 01       	movw	r24, r10
    2cb2:	b4 01       	movw	r22, r8
    2cb4:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    2cb8:	04 c0       	rjmp	.+8      	; 0x2cc2 <_Z12setPressureshhhh+0xe2>
    2cba:	c5 01       	movw	r24, r10
    2cbc:	b4 01       	movw	r22, r8
    2cbe:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    2cc2:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixsfsi>
    2cc6:	6c 87       	std	Y+12, r22	; 0x0c
    2cc8:	6e 2d       	mov	r22, r14
    2cca:	70 e0       	ldi	r23, 0x00	; 0
    2ccc:	80 e0       	ldi	r24, 0x00	; 0
    2cce:	90 e0       	ldi	r25, 0x00	; 0
    2cd0:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    2cd4:	2d e3       	ldi	r18, 0x3D	; 61
    2cd6:	3e e9       	ldi	r19, 0x9E	; 158
    2cd8:	42 e1       	ldi	r20, 0x12	; 18
    2cda:	5f e3       	ldi	r21, 0x3F	; 63
    2cdc:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    2ce0:	4b 01       	movw	r8, r22
    2ce2:	5c 01       	movw	r10, r24
    2ce4:	20 e0       	ldi	r18, 0x00	; 0
    2ce6:	30 e0       	ldi	r19, 0x00	; 0
    2ce8:	a9 01       	movw	r20, r18
    2cea:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    2cee:	20 e0       	ldi	r18, 0x00	; 0
    2cf0:	30 e0       	ldi	r19, 0x00	; 0
    2cf2:	40 e0       	ldi	r20, 0x00	; 0
    2cf4:	5f e3       	ldi	r21, 0x3F	; 63
    2cf6:	87 fd       	sbrc	r24, 7
    2cf8:	05 c0       	rjmp	.+10     	; 0x2d04 <_Z12setPressureshhhh+0x124>
    2cfa:	c5 01       	movw	r24, r10
    2cfc:	b4 01       	movw	r22, r8
    2cfe:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    2d02:	04 c0       	rjmp	.+8      	; 0x2d0c <_Z12setPressureshhhh+0x12c>
    2d04:	c5 01       	movw	r24, r10
    2d06:	b4 01       	movw	r22, r8
    2d08:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    2d0c:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixsfsi>
    2d10:	6d 87       	std	Y+13, r22	; 0x0d
    2d12:	6f 2d       	mov	r22, r15
    2d14:	70 e0       	ldi	r23, 0x00	; 0
    2d16:	80 e0       	ldi	r24, 0x00	; 0
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    2d1e:	2d e3       	ldi	r18, 0x3D	; 61
    2d20:	3e e9       	ldi	r19, 0x9E	; 158
    2d22:	42 e1       	ldi	r20, 0x12	; 18
    2d24:	5f e3       	ldi	r21, 0x3F	; 63
    2d26:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    2d2a:	6b 01       	movw	r12, r22
    2d2c:	7c 01       	movw	r14, r24
    2d2e:	20 e0       	ldi	r18, 0x00	; 0
    2d30:	30 e0       	ldi	r19, 0x00	; 0
    2d32:	a9 01       	movw	r20, r18
    2d34:	0e 94 f5 1c 	call	0x39ea	; 0x39ea <__gesf2>
    2d38:	20 e0       	ldi	r18, 0x00	; 0
    2d3a:	30 e0       	ldi	r19, 0x00	; 0
    2d3c:	40 e0       	ldi	r20, 0x00	; 0
    2d3e:	5f e3       	ldi	r21, 0x3F	; 63
    2d40:	87 fd       	sbrc	r24, 7
    2d42:	05 c0       	rjmp	.+10     	; 0x2d4e <_Z12setPressureshhhh+0x16e>
    2d44:	c7 01       	movw	r24, r14
    2d46:	b6 01       	movw	r22, r12
    2d48:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    2d4c:	04 c0       	rjmp	.+8      	; 0x2d56 <_Z12setPressureshhhh+0x176>
    2d4e:	c7 01       	movw	r24, r14
    2d50:	b6 01       	movw	r22, r12
    2d52:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    2d56:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixsfsi>
    2d5a:	6e 87       	std	Y+14, r22	; 0x0e
    2d5c:	8f ef       	ldi	r24, 0xFF	; 255
    2d5e:	88 8b       	std	Y+16, r24	; 0x10
    2d60:	be 01       	movw	r22, r28
    2d62:	6f 5f       	subi	r22, 0xFF	; 255
    2d64:	7f 4f       	sbci	r23, 0xFF	; 255
    2d66:	8a e5       	ldi	r24, 0x5A	; 90
    2d68:	92 e0       	ldi	r25, 0x02	; 2
    2d6a:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    2d6e:	60 96       	adiw	r28, 0x10	; 16
    2d70:	0f b6       	in	r0, 0x3f	; 63
    2d72:	f8 94       	cli
    2d74:	de bf       	out	0x3e, r29	; 62
    2d76:	0f be       	out	0x3f, r0	; 63
    2d78:	cd bf       	out	0x3d, r28	; 61
    2d7a:	df 91       	pop	r29
    2d7c:	cf 91       	pop	r28
    2d7e:	ff 90       	pop	r15
    2d80:	ef 90       	pop	r14
    2d82:	df 90       	pop	r13
    2d84:	cf 90       	pop	r12
    2d86:	bf 90       	pop	r11
    2d88:	af 90       	pop	r10
    2d8a:	9f 90       	pop	r9
    2d8c:	8f 90       	pop	r8
    2d8e:	08 95       	ret

00002d90 <_ZN3OBD4tpmsEv>:
    2d90:	0f 93       	push	r16
    2d92:	1f 93       	push	r17
    2d94:	cf 93       	push	r28
    2d96:	df 93       	push	r29
    2d98:	cd b7       	in	r28, 0x3d	; 61
    2d9a:	de b7       	in	r29, 0x3e	; 62
    2d9c:	60 97       	sbiw	r28, 0x10	; 16
    2d9e:	0f b6       	in	r0, 0x3f	; 63
    2da0:	f8 94       	cli
    2da2:	de bf       	out	0x3e, r29	; 62
    2da4:	0f be       	out	0x3f, r0	; 63
    2da6:	cd bf       	out	0x3d, r28	; 61
    2da8:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    2dac:	00 91 68 03 	lds	r16, 0x0368	; 0x800368 <tpmsUpdateAt>
    2db0:	10 91 69 03 	lds	r17, 0x0369	; 0x800369 <tpmsUpdateAt+0x1>
    2db4:	20 91 6a 03 	lds	r18, 0x036A	; 0x80036a <tpmsUpdateAt+0x2>
    2db8:	30 91 6b 03 	lds	r19, 0x036B	; 0x80036b <tpmsUpdateAt+0x3>
    2dbc:	01 15       	cp	r16, r1
    2dbe:	11 05       	cpc	r17, r1
    2dc0:	21 05       	cpc	r18, r1
    2dc2:	31 05       	cpc	r19, r1
    2dc4:	71 f4       	brne	.+28     	; 0x2de2 <_ZN3OBD4tpmsEv+0x52>
    2dc6:	dc 01       	movw	r26, r24
    2dc8:	cb 01       	movw	r24, r22
    2dca:	98 5f       	subi	r25, 0xF8	; 248
    2dcc:	af 4f       	sbci	r26, 0xFF	; 255
    2dce:	bf 4f       	sbci	r27, 0xFF	; 255
    2dd0:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <tpmsUpdateAt>
    2dd4:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <tpmsUpdateAt+0x1>
    2dd8:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <tpmsUpdateAt+0x2>
    2ddc:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <tpmsUpdateAt+0x3>
    2de0:	40 c0       	rjmp	.+128    	; 0x2e62 <_ZN3OBD4tpmsEv+0xd2>
    2de2:	06 17       	cp	r16, r22
    2de4:	17 07       	cpc	r17, r23
    2de6:	28 07       	cpc	r18, r24
    2de8:	39 07       	cpc	r19, r25
    2dea:	d8 f5       	brcc	.+118    	; 0x2e62 <_ZN3OBD4tpmsEv+0xd2>
    2dec:	ce 01       	movw	r24, r28
    2dee:	01 96       	adiw	r24, 0x01	; 1
    2df0:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    2df4:	88 e0       	ldi	r24, 0x08	; 8
    2df6:	8e 83       	std	Y+6, r24	; 0x06
    2df8:	82 e0       	ldi	r24, 0x02	; 2
    2dfa:	8d 83       	std	Y+5, r24	; 0x05
    2dfc:	40 eb       	ldi	r20, 0xB0	; 176
    2dfe:	50 e4       	ldi	r21, 0x40	; 64
    2e00:	61 e0       	ldi	r22, 0x01	; 1
    2e02:	70 e1       	ldi	r23, 0x10	; 16
    2e04:	49 83       	std	Y+1, r20	; 0x01
    2e06:	5a 83       	std	Y+2, r21	; 0x02
    2e08:	6b 83       	std	Y+3, r22	; 0x03
    2e0a:	7c 83       	std	Y+4, r23	; 0x04
    2e0c:	9c e7       	ldi	r25, 0x7C	; 124
    2e0e:	99 87       	std	Y+9, r25	; 0x09
    2e10:	88 87       	std	Y+8, r24	; 0x08
    2e12:	be 01       	movw	r22, r28
    2e14:	6f 5f       	subi	r22, 0xFF	; 255
    2e16:	7f 4f       	sbci	r23, 0xFF	; 255
    2e18:	8a e5       	ldi	r24, 0x5A	; 90
    2e1a:	92 e0       	ldi	r25, 0x02	; 2
    2e1c:	0e 94 95 02 	call	0x52a	; 0x52a <_ZN12MessageQueue4pushERK7Message>
    2e20:	88 23       	and	r24, r24
    2e22:	f9 f0       	breq	.+62     	; 0x2e62 <_ZN3OBD4tpmsEv+0xd2>
    2e24:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <tpmsUpdateAt>
    2e28:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <tpmsUpdateAt+0x1>
    2e2c:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <tpmsUpdateAt+0x2>
    2e30:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <tpmsUpdateAt+0x3>
    2e34:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    2e38:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <triggers+0x1>
    2e3c:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <triggers+0x2>
    2e40:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <triggers+0x3>
    2e44:	8f 7b       	andi	r24, 0xBF	; 191
    2e46:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <triggers>
    2e4a:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <triggers+0x1>
    2e4e:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <triggers+0x2>
    2e52:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <triggers+0x3>
    2e56:	2e e2       	ldi	r18, 0x2E	; 46
    2e58:	4e e2       	ldi	r20, 0x2E	; 46
    2e5a:	6e e2       	ldi	r22, 0x2E	; 46
    2e5c:	8e e2       	ldi	r24, 0x2E	; 46
    2e5e:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <_Z12setPressureshhhh>
    2e62:	60 96       	adiw	r28, 0x10	; 16
    2e64:	0f b6       	in	r0, 0x3f	; 63
    2e66:	f8 94       	cli
    2e68:	de bf       	out	0x3e, r29	; 62
    2e6a:	0f be       	out	0x3f, r0	; 63
    2e6c:	cd bf       	out	0x3d, r28	; 61
    2e6e:	df 91       	pop	r29
    2e70:	cf 91       	pop	r28
    2e72:	1f 91       	pop	r17
    2e74:	0f 91       	pop	r16
    2e76:	08 95       	ret

00002e78 <_ZN3OBD4tickEv>:
    2e78:	cf 92       	push	r12
    2e7a:	df 92       	push	r13
    2e7c:	ef 92       	push	r14
    2e7e:	ff 92       	push	r15
    2e80:	0f 93       	push	r16
    2e82:	1f 93       	push	r17
    2e84:	cf 93       	push	r28
    2e86:	df 93       	push	r29
    2e88:	00 d0       	rcall	.+0      	; 0x2e8a <_ZN3OBD4tickEv+0x12>
    2e8a:	00 d0       	rcall	.+0      	; 0x2e8c <_ZN3OBD4tickEv+0x14>
    2e8c:	cd b7       	in	r28, 0x3d	; 61
    2e8e:	de b7       	in	r29, 0x3e	; 62
    2e90:	8c 01       	movw	r16, r24
    2e92:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
    2e96:	92 ff       	sbrs	r25, 2
    2e98:	43 c0       	rjmp	.+134    	; 0x2f20 <_ZN3OBD4tickEv+0xa8>
    2e9a:	40 91 1f 01 	lds	r20, 0x011F	; 0x80011f <intFunc+0xa>
    2e9e:	50 91 20 01 	lds	r21, 0x0120	; 0x800120 <intFunc+0xb>
    2ea2:	60 91 21 01 	lds	r22, 0x0121	; 0x800121 <intFunc+0xc>
    2ea6:	70 91 22 01 	lds	r23, 0x0122	; 0x800122 <intFunc+0xd>
    2eaa:	49 83       	std	Y+1, r20	; 0x01
    2eac:	5a 83       	std	Y+2, r21	; 0x02
    2eae:	6b 83       	std	Y+3, r22	; 0x03
    2eb0:	7c 83       	std	Y+4, r23	; 0x04
    2eb2:	95 ff       	sbrs	r25, 5
    2eb4:	2b c0       	rjmp	.+86     	; 0x2f0c <_ZN3OBD4tickEv+0x94>
    2eb6:	f8 01       	movw	r30, r16
    2eb8:	81 81       	ldd	r24, Z+1	; 0x01
    2eba:	92 81       	ldd	r25, Z+2	; 0x02
    2ebc:	c0 90 6c 03 	lds	r12, 0x036C	; 0x80036c <lastRequest>
    2ec0:	d0 90 6d 03 	lds	r13, 0x036D	; 0x80036d <lastRequest+0x1>
    2ec4:	e0 90 6e 03 	lds	r14, 0x036E	; 0x80036e <lastRequest+0x2>
    2ec8:	f0 90 6f 03 	lds	r15, 0x036F	; 0x80036f <lastRequest+0x3>
    2ecc:	c8 0e       	add	r12, r24
    2ece:	d9 1e       	adc	r13, r25
    2ed0:	e1 1c       	adc	r14, r1
    2ed2:	f1 1c       	adc	r15, r1
    2ed4:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    2ed8:	c6 16       	cp	r12, r22
    2eda:	d7 06       	cpc	r13, r23
    2edc:	e8 06       	cpc	r14, r24
    2ede:	f9 06       	cpc	r15, r25
    2ee0:	a8 f4       	brcc	.+42     	; 0x2f0c <_ZN3OBD4tickEv+0x94>
    2ee2:	f8 01       	movw	r30, r16
    2ee4:	80 81       	ld	r24, Z
    2ee6:	61 e0       	ldi	r22, 0x01	; 1
    2ee8:	70 e0       	ldi	r23, 0x00	; 0
    2eea:	6c 0f       	add	r22, r28
    2eec:	7d 1f       	adc	r23, r29
    2eee:	68 0f       	add	r22, r24
    2ef0:	71 1d       	adc	r23, r1
    2ef2:	c8 01       	movw	r24, r16
    2ef4:	0e 94 83 08 	call	0x1106	; 0x1106 <_ZN3OBD7requestERKh>
    2ef8:	f8 01       	movw	r30, r16
    2efa:	80 81       	ld	r24, Z
    2efc:	28 2f       	mov	r18, r24
    2efe:	30 e0       	ldi	r19, 0x00	; 0
    2f00:	24 30       	cpi	r18, 0x04	; 4
    2f02:	31 05       	cpc	r19, r1
    2f04:	5c f4       	brge	.+22     	; 0x2f1c <_ZN3OBD4tickEv+0xa4>
    2f06:	8f 5f       	subi	r24, 0xFF	; 255
    2f08:	f8 01       	movw	r30, r16
    2f0a:	80 83       	st	Z, r24
    2f0c:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <triggers>
    2f10:	86 ff       	sbrs	r24, 6
    2f12:	06 c0       	rjmp	.+12     	; 0x2f20 <_ZN3OBD4tickEv+0xa8>
    2f14:	c8 01       	movw	r24, r16
    2f16:	0e 94 c8 16 	call	0x2d90	; 0x2d90 <_ZN3OBD4tpmsEv>
    2f1a:	02 c0       	rjmp	.+4      	; 0x2f20 <_ZN3OBD4tickEv+0xa8>
    2f1c:	80 e0       	ldi	r24, 0x00	; 0
    2f1e:	f4 cf       	rjmp	.-24     	; 0x2f08 <_ZN3OBD4tickEv+0x90>
    2f20:	0f 90       	pop	r0
    2f22:	0f 90       	pop	r0
    2f24:	0f 90       	pop	r0
    2f26:	0f 90       	pop	r0
    2f28:	df 91       	pop	r29
    2f2a:	cf 91       	pop	r28
    2f2c:	1f 91       	pop	r17
    2f2e:	0f 91       	pop	r16
    2f30:	ff 90       	pop	r15
    2f32:	ef 90       	pop	r14
    2f34:	df 90       	pop	r13
    2f36:	cf 90       	pop	r12
    2f38:	08 95       	ret

00002f3a <setup>:
    2f3a:	ef 92       	push	r14
    2f3c:	ff 92       	push	r15
    2f3e:	0f 93       	push	r16
    2f40:	1f 93       	push	r17
    2f42:	62 e0       	ldi	r22, 0x02	; 2
    2f44:	70 e0       	ldi	r23, 0x00	; 0
    2f46:	80 e0       	ldi	r24, 0x00	; 0
    2f48:	90 e0       	ldi	r25, 0x00	; 0
    2f4a:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    2f4e:	40 e0       	ldi	r20, 0x00	; 0
    2f50:	52 ec       	ldi	r21, 0xC2	; 194
    2f52:	61 e0       	ldi	r22, 0x01	; 1
    2f54:	70 e0       	ldi	r23, 0x00	; 0
    2f56:	80 e8       	ldi	r24, 0x80	; 128
    2f58:	93 e0       	ldi	r25, 0x03	; 3
    2f5a:	0e 94 9d 1e 	call	0x3d3a	; 0x3d3a <_ZN7Serial_5beginEm>
    2f5e:	26 e0       	ldi	r18, 0x06	; 6
    2f60:	40 e0       	ldi	r20, 0x00	; 0
    2f62:	51 ee       	ldi	r21, 0xE1	; 225
    2f64:	60 e0       	ldi	r22, 0x00	; 0
    2f66:	70 e0       	ldi	r23, 0x00	; 0
    2f68:	81 ed       	ldi	r24, 0xD1	; 209
    2f6a:	93 e0       	ldi	r25, 0x03	; 3
    2f6c:	0e 94 7e 1f 	call	0x3efc	; 0x3efc <_ZN14HardwareSerial5beginEmh>
    2f70:	6a 9a       	sbi	0x0d, 2	; 13
    2f72:	72 9a       	sbi	0x0e, 2	; 14
    2f74:	61 e0       	ldi	r22, 0x01	; 1
    2f76:	8d e0       	ldi	r24, 0x0D	; 13
    2f78:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2f7c:	60 e0       	ldi	r22, 0x00	; 0
    2f7e:	8d e0       	ldi	r24, 0x0D	; 13
    2f80:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2f84:	61 e0       	ldi	r22, 0x01	; 1
    2f86:	88 e0       	ldi	r24, 0x08	; 8
    2f88:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2f8c:	60 e0       	ldi	r22, 0x00	; 0
    2f8e:	88 e0       	ldi	r24, 0x08	; 8
    2f90:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2f94:	60 e0       	ldi	r22, 0x00	; 0
    2f96:	83 e0       	ldi	r24, 0x03	; 3
    2f98:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2f9c:	60 e0       	ldi	r22, 0x00	; 0
    2f9e:	82 e0       	ldi	r24, 0x02	; 2
    2fa0:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fa4:	60 e0       	ldi	r22, 0x00	; 0
    2fa6:	87 e0       	ldi	r24, 0x07	; 7
    2fa8:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fac:	61 e0       	ldi	r22, 0x01	; 1
    2fae:	84 e0       	ldi	r24, 0x04	; 4
    2fb0:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fb4:	61 e0       	ldi	r22, 0x01	; 1
    2fb6:	8c e0       	ldi	r24, 0x0C	; 12
    2fb8:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fbc:	61 e0       	ldi	r22, 0x01	; 1
    2fbe:	8b e0       	ldi	r24, 0x0B	; 11
    2fc0:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fc4:	61 e0       	ldi	r22, 0x01	; 1
    2fc6:	89 e0       	ldi	r24, 0x09	; 9
    2fc8:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fcc:	61 e0       	ldi	r22, 0x01	; 1
    2fce:	8a e0       	ldi	r24, 0x0A	; 10
    2fd0:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fd4:	61 e0       	ldi	r22, 0x01	; 1
    2fd6:	85 e0       	ldi	r24, 0x05	; 5
    2fd8:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    2fdc:	60 e0       	ldi	r22, 0x00	; 0
    2fde:	84 e0       	ldi	r24, 0x04	; 4
    2fe0:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2fe4:	60 e0       	ldi	r22, 0x00	; 0
    2fe6:	8c e0       	ldi	r24, 0x0C	; 12
    2fe8:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2fec:	60 e0       	ldi	r22, 0x00	; 0
    2fee:	8b e0       	ldi	r24, 0x0B	; 11
    2ff0:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    2ff4:	88 e4       	ldi	r24, 0x48	; 72
    2ff6:	93 e0       	ldi	r25, 0x03	; 3
    2ff8:	0e 94 0e 28 	call	0x501c	; 0x501c <_ZN6CANBus5beginEv>
    2ffc:	61 e0       	ldi	r22, 0x01	; 1
    2ffe:	70 e0       	ldi	r23, 0x00	; 0
    3000:	88 e4       	ldi	r24, 0x48	; 72
    3002:	93 e0       	ldi	r25, 0x03	; 3
    3004:	0e 94 b4 29 	call	0x5368	; 0x5368 <_ZN6CANBus9setClkPreEi>
    3008:	64 ef       	ldi	r22, 0xF4	; 244
    300a:	71 e0       	ldi	r23, 0x01	; 1
    300c:	88 e4       	ldi	r24, 0x48	; 72
    300e:	93 e0       	ldi	r25, 0x03	; 3
    3010:	0e 94 49 28 	call	0x5092	; 0x5092 <_ZN6CANBus10baudConfigEj>
    3014:	61 e0       	ldi	r22, 0x01	; 1
    3016:	88 e4       	ldi	r24, 0x48	; 72
    3018:	93 e0       	ldi	r25, 0x03	; 3
    301a:	0e 94 94 29 	call	0x5328	; 0x5328 <_ZN6CANBus8setRxIntEb>
    301e:	24 e0       	ldi	r18, 0x04	; 4
    3020:	44 e0       	ldi	r20, 0x04	; 4
    3022:	60 e6       	ldi	r22, 0x60	; 96
    3024:	88 e4       	ldi	r24, 0x48	; 72
    3026:	93 e0       	ldi	r25, 0x03	; 3
    3028:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    302c:	20 e2       	ldi	r18, 0x20	; 32
    302e:	40 e2       	ldi	r20, 0x20	; 32
    3030:	69 e2       	ldi	r22, 0x29	; 41
    3032:	88 e4       	ldi	r24, 0x48	; 72
    3034:	93 e0       	ldi	r25, 0x03	; 3
    3036:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    303a:	18 ee       	ldi	r17, 0xE8	; 232
    303c:	e1 2e       	mov	r14, r17
    303e:	17 e0       	ldi	r17, 0x07	; 7
    3040:	f1 2e       	mov	r15, r17
    3042:	00 e0       	ldi	r16, 0x00	; 0
    3044:	10 e0       	ldi	r17, 0x00	; 0
    3046:	24 e1       	ldi	r18, 0x14	; 20
    3048:	35 e0       	ldi	r19, 0x05	; 5
    304a:	40 e0       	ldi	r20, 0x00	; 0
    304c:	50 e0       	ldi	r21, 0x00	; 0
    304e:	60 e0       	ldi	r22, 0x00	; 0
    3050:	88 e4       	ldi	r24, 0x48	; 72
    3052:	93 e0       	ldi	r25, 0x03	; 3
    3054:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN6CANBus9setFilterEhmm>
    3058:	61 e0       	ldi	r22, 0x01	; 1
    305a:	88 e4       	ldi	r24, 0x48	; 72
    305c:	93 e0       	ldi	r25, 0x03	; 3
    305e:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    3062:	84 e4       	ldi	r24, 0x44	; 68
    3064:	93 e0       	ldi	r25, 0x03	; 3
    3066:	0e 94 0e 28 	call	0x501c	; 0x501c <_ZN6CANBus5beginEv>
    306a:	61 e0       	ldi	r22, 0x01	; 1
    306c:	70 e0       	ldi	r23, 0x00	; 0
    306e:	84 e4       	ldi	r24, 0x44	; 68
    3070:	93 e0       	ldi	r25, 0x03	; 3
    3072:	0e 94 b4 29 	call	0x5368	; 0x5368 <_ZN6CANBus9setClkPreEi>
    3076:	61 e2       	ldi	r22, 0x21	; 33
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	84 e4       	ldi	r24, 0x44	; 68
    307c:	93 e0       	ldi	r25, 0x03	; 3
    307e:	0e 94 49 28 	call	0x5092	; 0x5092 <_ZN6CANBus10baudConfigEj>
    3082:	61 e0       	ldi	r22, 0x01	; 1
    3084:	84 e4       	ldi	r24, 0x44	; 68
    3086:	93 e0       	ldi	r25, 0x03	; 3
    3088:	0e 94 94 29 	call	0x5328	; 0x5328 <_ZN6CANBus8setRxIntEb>
    308c:	24 e0       	ldi	r18, 0x04	; 4
    308e:	44 e0       	ldi	r20, 0x04	; 4
    3090:	60 e6       	ldi	r22, 0x60	; 96
    3092:	84 e4       	ldi	r24, 0x44	; 68
    3094:	93 e0       	ldi	r25, 0x03	; 3
    3096:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    309a:	61 e0       	ldi	r22, 0x01	; 1
    309c:	84 e4       	ldi	r24, 0x44	; 68
    309e:	93 e0       	ldi	r25, 0x03	; 3
    30a0:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    30a4:	80 e4       	ldi	r24, 0x40	; 64
    30a6:	93 e0       	ldi	r25, 0x03	; 3
    30a8:	0e 94 0e 28 	call	0x501c	; 0x501c <_ZN6CANBus5beginEv>
    30ac:	61 e0       	ldi	r22, 0x01	; 1
    30ae:	70 e0       	ldi	r23, 0x00	; 0
    30b0:	80 e4       	ldi	r24, 0x40	; 64
    30b2:	93 e0       	ldi	r25, 0x03	; 3
    30b4:	0e 94 b4 29 	call	0x5368	; 0x5368 <_ZN6CANBus9setClkPreEi>
    30b8:	61 e0       	ldi	r22, 0x01	; 1
    30ba:	80 e4       	ldi	r24, 0x40	; 64
    30bc:	93 e0       	ldi	r25, 0x03	; 3
    30be:	0e 94 94 29 	call	0x5328	; 0x5328 <_ZN6CANBus8setRxIntEb>
    30c2:	64 e6       	ldi	r22, 0x64	; 100
    30c4:	70 e0       	ldi	r23, 0x00	; 0
    30c6:	80 e0       	ldi	r24, 0x00	; 0
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    30ce:	62 e0       	ldi	r22, 0x02	; 2
    30d0:	80 e4       	ldi	r24, 0x40	; 64
    30d2:	93 e0       	ldi	r25, 0x03	; 3
    30d4:	1f 91       	pop	r17
    30d6:	0f 91       	pop	r16
    30d8:	ff 90       	pop	r15
    30da:	ef 90       	pop	r14
    30dc:	0c 94 e5 29 	jmp	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>

000030e0 <_Z12timeOverflowv>:
    30e0:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    30e4:	6f 3c       	cpi	r22, 0xCF	; 207
    30e6:	7a 48       	sbci	r23, 0x8A	; 138
    30e8:	8f 4f       	sbci	r24, 0xFF	; 255
    30ea:	9f 4f       	sbci	r25, 0xFF	; 255
    30ec:	08 f4       	brcc	.+2      	; 0x30f0 <_Z12timeOverflowv+0x10>
    30ee:	6e c0       	rjmp	.+220    	; 0x31cc <_Z12timeOverflowv+0xec>
    30f0:	10 92 7c 03 	sts	0x037C, r1	; 0x80037c <lastDequeue>
    30f4:	10 92 7d 03 	sts	0x037D, r1	; 0x80037d <lastDequeue+0x1>
    30f8:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <lastDequeue+0x2>
    30fc:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <lastDequeue+0x3>
    3100:	10 92 78 03 	sts	0x0378, r1	; 0x800378 <lastTempUpdate>
    3104:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <lastTempUpdate+0x1>
    3108:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <lastTempUpdate+0x2>
    310c:	10 92 7b 03 	sts	0x037B, r1	; 0x80037b <lastTempUpdate+0x3>
    3110:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <updateDisplayAt>
    3114:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <updateDisplayAt+0x1>
    3118:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <updateDisplayAt+0x2>
    311c:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <updateDisplayAt+0x3>
    3120:	10 92 70 03 	sts	0x0370, r1	; 0x800370 <radioButtonTerminateAt>
    3124:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <radioButtonTerminateAt+0x1>
    3128:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <radioButtonTerminateAt+0x2>
    312c:	10 92 73 03 	sts	0x0373, r1	; 0x800373 <radioButtonTerminateAt+0x3>
    3130:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <lastRequest>
    3134:	10 92 6d 03 	sts	0x036D, r1	; 0x80036d <lastRequest+0x1>
    3138:	10 92 6e 03 	sts	0x036E, r1	; 0x80036e <lastRequest+0x2>
    313c:	10 92 6f 03 	sts	0x036F, r1	; 0x80036f <lastRequest+0x3>
    3140:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <tpmsUpdateAt>
    3144:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <tpmsUpdateAt+0x1>
    3148:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <tpmsUpdateAt+0x2>
    314c:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <tpmsUpdateAt+0x3>
    3150:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <lastWakeup>
    3154:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <lastWakeup+0x1>
    3158:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <lastWakeup+0x2>
    315c:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <lastWakeup+0x3>
    3160:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <a1_start>
    3164:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <a1_start+0x1>
    3168:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <a1_start+0x2>
    316c:	10 92 63 03 	sts	0x0363, r1	; 0x800363 <a1_start+0x3>
    3170:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <a5_start>
    3174:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <a5_start+0x1>
    3178:	10 92 5e 03 	sts	0x035E, r1	; 0x80035e <a5_start+0x2>
    317c:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <a5_start+0x3>
    3180:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <a1_dur>
    3184:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <a1_dur+0x1>
    3188:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <a1_dur+0x2>
    318c:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <a1_dur+0x3>
    3190:	10 92 54 03 	sts	0x0354, r1	; 0x800354 <a5_dur>
    3194:	10 92 55 03 	sts	0x0355, r1	; 0x800355 <a5_dur+0x1>
    3198:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <a5_dur+0x2>
    319c:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <a5_dur+0x3>
    31a0:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <t2lastTesterPresent>
    31a4:	10 92 51 03 	sts	0x0351, r1	; 0x800351 <t2lastTesterPresent+0x1>
    31a8:	10 92 52 03 	sts	0x0352, r1	; 0x800352 <t2lastTesterPresent+0x2>
    31ac:	10 92 53 03 	sts	0x0353, r1	; 0x800353 <t2lastTesterPresent+0x3>
    31b0:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <t2ReturnToNormalAt>
    31b4:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <t2ReturnToNormalAt+0x1>
    31b8:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <t2ReturnToNormalAt+0x2>
    31bc:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <t2ReturnToNormalAt+0x3>
    31c0:	0e 94 6e 26 	call	0x4cdc	; 0x4cdc <millis>
    31c4:	67 2b       	or	r22, r23
    31c6:	68 2b       	or	r22, r24
    31c8:	69 2b       	or	r22, r25
    31ca:	d1 f7       	brne	.-12     	; 0x31c0 <_Z12timeOverflowv+0xe0>
    31cc:	08 95       	ret

000031ce <_GLOBAL__sub_I_lastDequeue>:
    31ce:	0f 93       	push	r16
    31d0:	1f 93       	push	r17
    31d2:	cf 93       	push	r28
    31d4:	df 93       	push	r29
    31d6:	21 e0       	ldi	r18, 0x01	; 1
    31d8:	44 e0       	ldi	r20, 0x04	; 4
    31da:	69 e0       	ldi	r22, 0x09	; 9
    31dc:	88 e4       	ldi	r24, 0x48	; 72
    31de:	93 e0       	ldi	r25, 0x03	; 3
    31e0:	0e 94 09 28 	call	0x5012	; 0x5012 <_ZN6CANBusC1Ehhh>
    31e4:	22 e0       	ldi	r18, 0x02	; 2
    31e6:	4c e0       	ldi	r20, 0x0C	; 12
    31e8:	6a e0       	ldi	r22, 0x0A	; 10
    31ea:	84 e4       	ldi	r24, 0x44	; 68
    31ec:	93 e0       	ldi	r25, 0x03	; 3
    31ee:	0e 94 09 28 	call	0x5012	; 0x5012 <_ZN6CANBusC1Ehhh>
    31f2:	23 e0       	ldi	r18, 0x03	; 3
    31f4:	4b e0       	ldi	r20, 0x0B	; 11
    31f6:	65 e0       	ldi	r22, 0x05	; 5
    31f8:	80 e4       	ldi	r24, 0x40	; 64
    31fa:	93 e0       	ldi	r25, 0x03	; 3
    31fc:	0e 94 09 28 	call	0x5012	; 0x5012 <_ZN6CANBusC1Ehhh>
    3200:	c0 ee       	ldi	r28, 0xE0	; 224
    3202:	d2 e0       	ldi	r29, 0x02	; 2
    3204:	00 e4       	ldi	r16, 0x40	; 64
    3206:	13 e0       	ldi	r17, 0x03	; 3
    3208:	ce 01       	movw	r24, r28
    320a:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    320e:	60 96       	adiw	r28, 0x10	; 16
    3210:	0c 17       	cp	r16, r28
    3212:	1d 07       	cpc	r17, r29
    3214:	c9 f7       	brne	.-14     	; 0x3208 <_GLOBAL__sub_I_lastDequeue+0x3a>
    3216:	c0 e6       	ldi	r28, 0x60	; 96
    3218:	d2 e0       	ldi	r29, 0x02	; 2
    321a:	ce 01       	movw	r24, r28
    321c:	0e 94 27 2e 	call	0x5c4e	; 0x5c4e <_ZN7MessageC1Ev>
    3220:	60 96       	adiw	r28, 0x10	; 16
    3222:	82 e0       	ldi	r24, 0x02	; 2
    3224:	c0 3e       	cpi	r28, 0xE0	; 224
    3226:	d8 07       	cpc	r29, r24
    3228:	c1 f7       	brne	.-16     	; 0x321a <_GLOBAL__sub_I_lastDequeue+0x4c>
    322a:	88 e0       	ldi	r24, 0x08	; 8
    322c:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <writeQueue>
    3230:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <writeQueue+0x1>
    3234:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <writeQueue+0x2>
    3238:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <writeQueue+0x3>
    323c:	80 e6       	ldi	r24, 0x60	; 96
    323e:	92 e0       	ldi	r25, 0x02	; 2
    3240:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <writeQueue+0x5>
    3244:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <writeQueue+0x4>
    3248:	88 e7       	ldi	r24, 0x78	; 120
    324a:	91 e0       	ldi	r25, 0x01	; 1
    324c:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN7DisplayC1Ev>
    3250:	85 e7       	ldi	r24, 0x75	; 117
    3252:	91 e0       	ldi	r25, 0x01	; 1
    3254:	0e 94 0a 07 	call	0xe14	; 0xe14 <_ZN3OBDC1Ev>
    3258:	84 e7       	ldi	r24, 0x74	; 116
    325a:	91 e0       	ldi	r25, 0x01	; 1
    325c:	0e 94 c5 08 	call	0x118a	; 0x118a <_ZN7ButtonsC1Ev>
    3260:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <sleepy>
    3264:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <sleepy+0x1>
    3268:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <sleepy+0x2>
    326c:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <sleepy+0x3>
    3270:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <rs232+0x1>
    3274:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <rs232>
    3278:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <rs232+0x2>
    327c:	df 91       	pop	r29
    327e:	cf 91       	pop	r28
    3280:	1f 91       	pop	r17
    3282:	0f 91       	pop	r16
    3284:	08 95       	ret

00003286 <_ZN5RS23214processUSBDataEPKhh>:
  }
  */
}

/* Array bounds checked in tick() */
void RS232::processUSBData(const byte *buffer, const byte length){
    3286:	fc 01       	movw	r30, r24
  if(buffer == (const byte*)NULL) { return; }
    3288:	61 15       	cp	r22, r1
    328a:	71 05       	cpc	r23, r1
    328c:	51 f1       	breq	.+84     	; 0x32e2 <_ZN5RS23214processUSBDataEPKhh+0x5c>

  byte temp = 0;

  switch(buffer[0]){
    328e:	db 01       	movw	r26, r22
    3290:	9c 91       	ld	r25, X
    3292:	93 30       	cpi	r25, 0x03	; 3
    3294:	89 f0       	breq	.+34     	; 0x32b8 <_ZN5RS23214processUSBDataEPKhh+0x32>
    3296:	28 f4       	brcc	.+10     	; 0x32a2 <_ZN5RS23214processUSBDataEPKhh+0x1c>
    3298:	91 30       	cpi	r25, 0x01	; 1
    329a:	41 f0       	breq	.+16     	; 0x32ac <_ZN5RS23214processUSBDataEPKhh+0x26>
    329c:	92 30       	cpi	r25, 0x02	; 2
    329e:	49 f0       	breq	.+18     	; 0x32b2 <_ZN5RS23214processUSBDataEPKhh+0x2c>
    32a0:	08 95       	ret
    32a2:	90 3b       	cpi	r25, 0xB0	; 176
    32a4:	61 f0       	breq	.+24     	; 0x32be <_ZN5RS23214processUSBDataEPKhh+0x38>
    32a6:	91 3b       	cpi	r25, 0xB1	; 177
    32a8:	89 f0       	breq	.+34     	; 0x32cc <_ZN5RS23214processUSBDataEPKhh+0x46>
    32aa:	08 95       	ret
    case COMMAND_BUSLOG:
      executeLogCommand(buffer, length);
    32ac:	cf 01       	movw	r24, r30
    32ae:	0c 94 55 0a 	jmp	0x14aa	; 0x14aa <_ZN5RS23217executeLogCommandEPKhh>
    break;
    case COMMAND_INJECT:
      executeInjectCommand(buffer, length);
    32b2:	cf 01       	movw	r24, r30
    32b4:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <_ZN5RS23220executeInjectCommandEPKhh>
    break;
    case COMMAND_FILTER:
      executeFilterCommand(buffer, length);
    32b8:	cf 01       	movw	r24, r30
    32ba:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <_ZN5RS23220executeFilterCommandEPKhh>
    break;
    case COMMAND_BT_PASSTHRU:
      serialStatus |= SP_BT_PASSTHRU;
    32be:	82 81       	ldd	r24, Z+2	; 0x02
    32c0:	80 61       	ori	r24, 0x10	; 16
    32c2:	82 83       	std	Z+2, r24	; 0x02
      digitalWrite(BOOT_LED, HIGH);
    32c4:	61 e0       	ldi	r22, 0x01	; 1
    32c6:	8d e0       	ldi	r24, 0x0D	; 13
    32c8:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>
    break;
    case COMMAND_BT_WRITE:
		if(length > 1){
    32cc:	42 30       	cpi	r20, 0x02	; 2
    32ce:	48 f0       	brcs	.+18     	; 0x32e2 <_ZN5RS23214processUSBDataEPKhh+0x5c>
			Serial1.write(buffer + 1, length - 1);
    32d0:	50 e0       	ldi	r21, 0x00	; 0
    32d2:	41 50       	subi	r20, 0x01	; 1
    32d4:	51 09       	sbc	r21, r1
    32d6:	6f 5f       	subi	r22, 0xFF	; 255
    32d8:	7f 4f       	sbci	r23, 0xFF	; 255
    32da:	81 ed       	ldi	r24, 0xD1	; 209
    32dc:	93 e0       	ldi	r25, 0x03	; 3
    32de:	0c 94 86 20 	jmp	0x410c	; 0x410c <_ZN5Print5writeEPKhj>
    32e2:	08 95       	ret

000032e4 <_ZN5RS2324tickEv>:
  }
  return index;
}


void RS232::tick(){
    32e4:	0f 93       	push	r16
    32e6:	1f 93       	push	r17
    32e8:	cf 93       	push	r28
    32ea:	df 93       	push	r29
    32ec:	cd b7       	in	r28, 0x3d	; 61
    32ee:	de b7       	in	r29, 0x3e	; 62
    32f0:	68 97       	sbiw	r28, 0x18	; 24
    32f2:	0f b6       	in	r0, 0x3f	; 63
    32f4:	f8 94       	cli
    32f6:	de bf       	out	0x3e, r29	; 62
    32f8:	0f be       	out	0x3f, r0	; 63
    32fa:	cd bf       	out	0x3d, r28	; 61
    32fc:	8c 01       	movw	r16, r24
  byte buffer[RS232_RECEIVE_SIZE];
  byte rxLength = 0;

  //passthru if check
  if( (serialStatus & SP_BT_PASSTHRU) ){
    32fe:	fc 01       	movw	r30, r24
    3300:	82 81       	ldd	r24, Z+2	; 0x02
    3302:	84 ff       	sbrs	r24, 4
    3304:	21 c0       	rjmp	.+66     	; 0x3348 <_ZN5RS2324tickEv+0x64>

    //RX (Serial1): 000209030000 completed flash
    
    while(Serial.available()){  Serial1.write(Serial.read());  }
    3306:	80 e8       	ldi	r24, 0x80	; 128
    3308:	93 e0       	ldi	r25, 0x03	; 3
    330a:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <_ZN7Serial_9availableEv>
    330e:	89 2b       	or	r24, r25
    3310:	51 f0       	breq	.+20     	; 0x3326 <_ZN5RS2324tickEv+0x42>
    3312:	80 e8       	ldi	r24, 0x80	; 128
    3314:	93 e0       	ldi	r25, 0x03	; 3
    3316:	0e 94 ed 1d 	call	0x3bda	; 0x3bda <_ZN7Serial_4readEv>
    virtual void flush(void);
    virtual size_t write(uint8_t);
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    331a:	68 2f       	mov	r22, r24
    331c:	81 ed       	ldi	r24, 0xD1	; 209
    331e:	93 e0       	ldi	r25, 0x03	; 3
    3320:	0e 94 15 1f 	call	0x3e2a	; 0x3e2a <_ZN14HardwareSerial5writeEh>
    3324:	f0 cf       	rjmp	.-32     	; 0x3306 <_ZN5RS2324tickEv+0x22>
    while(Serial1.available()){ Serial.write(Serial1.read());  }
    3326:	81 ed       	ldi	r24, 0xD1	; 209
    3328:	93 e0       	ldi	r25, 0x03	; 3
    332a:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <_ZN14HardwareSerial9availableEv>
    332e:	89 2b       	or	r24, r25
    3330:	09 f4       	brne	.+2      	; 0x3334 <_ZN5RS2324tickEv+0x50>
    3332:	40 c0       	rjmp	.+128    	; 0x33b4 <_ZN5RS2324tickEv+0xd0>
    3334:	81 ed       	ldi	r24, 0xD1	; 209
    3336:	93 e0       	ldi	r25, 0x03	; 3
    3338:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <_ZN14HardwareSerial4readEv>
    333c:	68 2f       	mov	r22, r24
    333e:	80 e8       	ldi	r24, 0x80	; 128
    3340:	93 e0       	ldi	r25, 0x03	; 3
    3342:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
    3346:	ef cf       	rjmp	.-34     	; 0x3326 <_ZN5RS2324tickEv+0x42>
    
  }else{

    if(Serial.available()){
    3348:	80 e8       	ldi	r24, 0x80	; 128
    334a:	93 e0       	ldi	r25, 0x03	; 3
    334c:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <_ZN7Serial_9availableEv>
    3350:	89 2b       	or	r24, r25
    3352:	91 f0       	breq	.+36     	; 0x3378 <_ZN5RS2324tickEv+0x94>
      serialPort = &Serial;
    3354:	80 e8       	ldi	r24, 0x80	; 128
    3356:	93 e0       	ldi	r25, 0x03	; 3
    3358:	f8 01       	movw	r30, r16
    335a:	91 83       	std	Z+1, r25	; 0x01
    335c:	80 83       	st	Z, r24
      rxLength = receiveData(buffer);
    335e:	be 01       	movw	r22, r28
    3360:	6f 5f       	subi	r22, 0xFF	; 255
    3362:	7f 4f       	sbci	r23, 0xFF	; 255
    3364:	c8 01       	movw	r24, r16
    3366:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN5RS23211receiveDataEPh>
      processUSBData(buffer, rxLength);
    336a:	48 2f       	mov	r20, r24
    336c:	be 01       	movw	r22, r28
    336e:	6f 5f       	subi	r22, 0xFF	; 255
    3370:	7f 4f       	sbci	r23, 0xFF	; 255
    3372:	c8 01       	movw	r24, r16
    3374:	0e 94 43 19 	call	0x3286	; 0x3286 <_ZN5RS23214processUSBDataEPKhh>
    }
  
    if(Serial1.available()){
    3378:	81 ed       	ldi	r24, 0xD1	; 209
    337a:	93 e0       	ldi	r25, 0x03	; 3
    337c:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <_ZN14HardwareSerial9availableEv>
    3380:	89 2b       	or	r24, r25
    3382:	c1 f0       	breq	.+48     	; 0x33b4 <_ZN5RS2324tickEv+0xd0>
      delay(8);
    3384:	68 e0       	ldi	r22, 0x08	; 8
    3386:	70 e0       	ldi	r23, 0x00	; 0
    3388:	80 e0       	ldi	r24, 0x00	; 0
    338a:	90 e0       	ldi	r25, 0x00	; 0
    338c:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
      serialPort = &Serial1;
    3390:	81 ed       	ldi	r24, 0xD1	; 209
    3392:	93 e0       	ldi	r25, 0x03	; 3
    3394:	f8 01       	movw	r30, r16
    3396:	91 83       	std	Z+1, r25	; 0x01
    3398:	80 83       	st	Z, r24
      rxLength = receiveData(buffer);
    339a:	be 01       	movw	r22, r28
    339c:	6f 5f       	subi	r22, 0xFF	; 255
    339e:	7f 4f       	sbci	r23, 0xFF	; 255
    33a0:	c8 01       	movw	r24, r16
    33a2:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN5RS23211receiveDataEPh>
      processBTData(buffer, rxLength);
    33a6:	48 2f       	mov	r20, r24
    33a8:	be 01       	movw	r22, r28
    33aa:	6f 5f       	subi	r22, 0xFF	; 255
    33ac:	7f 4f       	sbci	r23, 0xFF	; 255
    33ae:	c8 01       	movw	r24, r16
    33b0:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <_ZN5RS23213processBTDataEPKhh>
		processMessage(msg);
		last = 0;
	}
  }
  */
}
    33b4:	68 96       	adiw	r28, 0x18	; 24
    33b6:	0f b6       	in	r0, 0x3f	; 63
    33b8:	f8 94       	cli
    33ba:	de bf       	out	0x3e, r29	; 62
    33bc:	0f be       	out	0x3f, r0	; 63
    33be:	cd bf       	out	0x3d, r28	; 61
    33c0:	df 91       	pop	r29
    33c2:	cf 91       	pop	r28
    33c4:	1f 91       	pop	r17
    33c6:	0f 91       	pop	r16
    33c8:	08 95       	ret

000033ca <_ZN5RS23214processMessageERK7Message>:
		CANBus1.setMode(NORMAL);
    break;
  }
}

void RS232::processMessage(const Message &msg){
    33ca:	cf 93       	push	r28
    33cc:	df 93       	push	r29

  if( msg.busId > 3 ) { return; }
    33ce:	fb 01       	movw	r30, r22
    33d0:	24 81       	ldd	r18, Z+4	; 0x04
    33d2:	24 30       	cpi	r18, 0x04	; 4
    33d4:	08 f0       	brcs	.+2      	; 0x33d8 <_ZN5RS23214processMessageERK7Message+0xe>
    33d6:	7e c0       	rjmp	.+252    	; 0x34d4 <_ZN5RS23214processMessageERK7Message+0x10a>
  if( !(serialStatus & (1 << msg.busId) )) { return; }
    33d8:	fc 01       	movw	r30, r24
    33da:	82 81       	ldd	r24, Z+2	; 0x02
    33dc:	90 e0       	ldi	r25, 0x00	; 0
    33de:	02 c0       	rjmp	.+4      	; 0x33e4 <_ZN5RS23214processMessageERK7Message+0x1a>
    33e0:	95 95       	asr	r25
    33e2:	87 95       	ror	r24
    33e4:	2a 95       	dec	r18
    33e6:	e2 f7       	brpl	.-8      	; 0x33e0 <_ZN5RS23214processMessageERK7Message+0x16>
    33e8:	80 ff       	sbrs	r24, 0
    33ea:	74 c0       	rjmp	.+232    	; 0x34d4 <_ZN5RS23214processMessageERK7Message+0x10a>
    33ec:	eb 01       	movw	r28, r22

  //Protocol header 0-2
  Serial.write(0x02); //ASCII start_of_text
    33ee:	62 e0       	ldi	r22, 0x02	; 2
    33f0:	80 e8       	ldi	r24, 0x80	; 128
    33f2:	93 e0       	ldi	r25, 0x03	; 3
    33f4:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.busId);
    33f8:	6c 81       	ldd	r22, Y+4	; 0x04
    33fa:	80 e8       	ldi	r24, 0x80	; 128
    33fc:	93 e0       	ldi	r25, 0x03	; 3
    33fe:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.ide);
    3402:	6d 81       	ldd	r22, Y+5	; 0x05
    3404:	80 e8       	ldi	r24, 0x80	; 128
    3406:	93 e0       	ldi	r25, 0x03	; 3
    3408:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>

  //PID 3-6
  Serial.write( (msg.frame_id >> 24) );
    340c:	88 81       	ld	r24, Y
    340e:	99 81       	ldd	r25, Y+1	; 0x01
    3410:	aa 81       	ldd	r26, Y+2	; 0x02
    3412:	bb 81       	ldd	r27, Y+3	; 0x03
    3414:	6b 2f       	mov	r22, r27
    3416:	77 27       	eor	r23, r23
    3418:	88 27       	eor	r24, r24
    341a:	99 27       	eor	r25, r25
    341c:	80 e8       	ldi	r24, 0x80	; 128
    341e:	93 e0       	ldi	r25, 0x03	; 3
    3420:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write( (msg.frame_id >> 16) );
    3424:	88 81       	ld	r24, Y
    3426:	99 81       	ldd	r25, Y+1	; 0x01
    3428:	aa 81       	ldd	r26, Y+2	; 0x02
    342a:	bb 81       	ldd	r27, Y+3	; 0x03
    342c:	bd 01       	movw	r22, r26
    342e:	88 27       	eor	r24, r24
    3430:	99 27       	eor	r25, r25
    3432:	80 e8       	ldi	r24, 0x80	; 128
    3434:	93 e0       	ldi	r25, 0x03	; 3
    3436:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write( (msg.frame_id >> 8) );
    343a:	88 81       	ld	r24, Y
    343c:	99 81       	ldd	r25, Y+1	; 0x01
    343e:	aa 81       	ldd	r26, Y+2	; 0x02
    3440:	bb 81       	ldd	r27, Y+3	; 0x03
    3442:	69 2f       	mov	r22, r25
    3444:	7a 2f       	mov	r23, r26
    3446:	8b 2f       	mov	r24, r27
    3448:	99 27       	eor	r25, r25
    344a:	80 e8       	ldi	r24, 0x80	; 128
    344c:	93 e0       	ldi	r25, 0x03	; 3
    344e:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write( (msg.frame_id) );
    3452:	68 81       	ld	r22, Y
    3454:	80 e8       	ldi	r24, 0x80	; 128
    3456:	93 e0       	ldi	r25, 0x03	; 3
    3458:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>

  //Data 7-14
  Serial.write(msg.frame_data[0]);
    345c:	68 85       	ldd	r22, Y+8	; 0x08
    345e:	80 e8       	ldi	r24, 0x80	; 128
    3460:	93 e0       	ldi	r25, 0x03	; 3
    3462:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[1]);
    3466:	69 85       	ldd	r22, Y+9	; 0x09
    3468:	80 e8       	ldi	r24, 0x80	; 128
    346a:	93 e0       	ldi	r25, 0x03	; 3
    346c:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[2]);
    3470:	6a 85       	ldd	r22, Y+10	; 0x0a
    3472:	80 e8       	ldi	r24, 0x80	; 128
    3474:	93 e0       	ldi	r25, 0x03	; 3
    3476:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[3]);
    347a:	6b 85       	ldd	r22, Y+11	; 0x0b
    347c:	80 e8       	ldi	r24, 0x80	; 128
    347e:	93 e0       	ldi	r25, 0x03	; 3
    3480:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[4]);
    3484:	6c 85       	ldd	r22, Y+12	; 0x0c
    3486:	80 e8       	ldi	r24, 0x80	; 128
    3488:	93 e0       	ldi	r25, 0x03	; 3
    348a:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[5]);
    348e:	6d 85       	ldd	r22, Y+13	; 0x0d
    3490:	80 e8       	ldi	r24, 0x80	; 128
    3492:	93 e0       	ldi	r25, 0x03	; 3
    3494:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[6]);
    3498:	6e 85       	ldd	r22, Y+14	; 0x0e
    349a:	80 e8       	ldi	r24, 0x80	; 128
    349c:	93 e0       	ldi	r25, 0x03	; 3
    349e:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.frame_data[7]);
    34a2:	6f 85       	ldd	r22, Y+15	; 0x0f
    34a4:	80 e8       	ldi	r24, 0x80	; 128
    34a6:	93 e0       	ldi	r25, 0x03	; 3
    34a8:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>

  //Protocol footer 15-19
  Serial.write(msg.length);
    34ac:	6f 81       	ldd	r22, Y+7	; 0x07
    34ae:	80 e8       	ldi	r24, 0x80	; 128
    34b0:	93 e0       	ldi	r25, 0x03	; 3
    34b2:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
  Serial.write(msg.busStatus);
    34b6:	6e 81       	ldd	r22, Y+6	; 0x06
    34b8:	80 e8       	ldi	r24, 0x80	; 128
    34ba:	93 e0       	ldi	r25, 0x03	; 3
    34bc:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <_ZN7Serial_5writeEh>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    34c0:	43 e0       	ldi	r20, 0x03	; 3
    34c2:	50 e0       	ldi	r21, 0x00	; 0
    34c4:	63 e2       	ldi	r22, 0x23	; 35
    34c6:	71 e0       	ldi	r23, 0x01	; 1
    34c8:	80 e8       	ldi	r24, 0x80	; 128
    34ca:	93 e0       	ldi	r25, 0x03	; 3
  Serial.write(RS232_FRAME_TERMINATE, 3);
}
    34cc:	df 91       	pop	r29
    34ce:	cf 91       	pop	r28
    34d0:	0c 94 fa 1d 	jmp	0x3bf4	; 0x3bf4 <_ZN7Serial_5writeEPKhj>
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	08 95       	ret

000034da <loop>:
void timeOverflow(void);
void debugPrintMessage(const Message &msg);

byte rxStatus = 0;

void loop() {
    34da:	cf 92       	push	r12
    34dc:	df 92       	push	r13
    34de:	ef 92       	push	r14
    34e0:	ff 92       	push	r15
    34e2:	0f 93       	push	r16
    34e4:	1f 93       	push	r17
    34e6:	cf 93       	push	r28
    34e8:	df 93       	push	r29
    34ea:	cd b7       	in	r28, 0x3d	; 61
    34ec:	de b7       	in	r29, 0x3e	; 62
    34ee:	60 97       	sbiw	r28, 0x10	; 16
    34f0:	0f b6       	in	r0, 0x3f	; 63
    34f2:	f8 94       	cli
    34f4:	de bf       	out	0x3e, r29	; 62
    34f6:	0f be       	out	0x3f, r0	; 63
    34f8:	cd bf       	out	0x3d, r28	; 61

	timeOverflow();
    34fa:	0e 94 70 18 	call	0x30e0	; 0x30e0 <_Z12timeOverflowv>

	if(digitalRead(CAN1INT_D) == 0){
    34fe:	83 e0       	ldi	r24, 0x03	; 3
    3500:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <digitalRead>
    3504:	89 2b       	or	r24, r25
    3506:	59 f4       	brne	.+22     	; 0x351e <loop+0x44>
		CANBus1.readFrame(_readQueue[0]);
    3508:	60 ee       	ldi	r22, 0xE0	; 224
    350a:	72 e0       	ldi	r23, 0x02	; 2
    350c:	88 e4       	ldi	r24, 0x48	; 72
    350e:	93 e0       	ldi	r25, 0x03	; 3
    3510:	0e 94 0c 2d 	call	0x5a18	; 0x5a18 <_ZN6CANBus9readFrameER7Message>
		rxStatus |= 0x01;
    3514:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <rxStatus>
    3518:	81 60       	ori	r24, 0x01	; 1
    351a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <rxStatus>
	}

	if( digitalRead(CAN2INT_D) == 0 ){
    351e:	82 e0       	ldi	r24, 0x02	; 2
    3520:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <digitalRead>
    3524:	89 2b       	or	r24, r25
    3526:	59 f4       	brne	.+22     	; 0x353e <loop+0x64>
		CANBus2.readFrame(_readQueue[1]);
    3528:	60 ef       	ldi	r22, 0xF0	; 240
    352a:	72 e0       	ldi	r23, 0x02	; 2
    352c:	84 e4       	ldi	r24, 0x44	; 68
    352e:	93 e0       	ldi	r25, 0x03	; 3
    3530:	0e 94 0c 2d 	call	0x5a18	; 0x5a18 <_ZN6CANBus9readFrameER7Message>
		rxStatus |= 0x02;
    3534:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <rxStatus>
    3538:	82 60       	ori	r24, 0x02	; 2
    353a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <rxStatus>
		CANBus3.readFrame(_readQueue[2]);
		rxStatus |= 0x04;
	}
	#endif

	globalTick();
    353e:	0e 94 58 14 	call	0x28b0	; 0x28b0 <_Z10globalTickv>
	display.tick();
    3542:	88 e7       	ldi	r24, 0x78	; 120
    3544:	91 e0       	ldi	r25, 0x01	; 1
    3546:	0e 94 26 12 	call	0x244c	; 0x244c <_ZN7Display4tickEv>
	sleepy.tick();
    354a:	80 e7       	ldi	r24, 0x70	; 112
    354c:	91 e0       	ldi	r25, 0x01	; 1
    354e:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN6Sleepy4tickEv>
	buttons.tick();
    3552:	84 e7       	ldi	r24, 0x74	; 116
    3554:	91 e0       	ldi	r25, 0x01	; 1
    3556:	0e 94 04 15 	call	0x2a08	; 0x2a08 <_ZN7Buttons4tickEv>
	obd.tick();
    355a:	85 e7       	ldi	r24, 0x75	; 117
    355c:	91 e0       	ldi	r25, 0x01	; 1
    355e:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <_ZN3OBD4tickEv>
	//techII.tick();
	rs232.tick();
    3562:	8c e6       	ldi	r24, 0x6C	; 108
    3564:	91 e0       	ldi	r25, 0x01	; 1
    3566:	0e 94 72 19 	call	0x32e4	; 0x32e4 <_ZN5RS2324tickEv>
    356a:	00 ee       	ldi	r16, 0xE0	; 224
    356c:	12 e0       	ldi	r17, 0x02	; 2
    356e:	e1 2c       	mov	r14, r1
    3570:	f1 2c       	mov	r15, r1
	  if(rxStatus & (1 << i)){
		  processFrame(_readQueue[i]);
		  obd.process(_readQueue[i]);
		  sleepy.process(_readQueue[i]);
		  rs232.processMessage(_readQueue[i]);
		  rxStatus &= ~(1 << i);
    3572:	cc 24       	eor	r12, r12
    3574:	c3 94       	inc	r12
    3576:	d1 2c       	mov	r13, r1
	obd.tick();
	//techII.tick();
	rs232.tick();

  for(byte i = 0; i < 3; i++){
	  if(rxStatus & (1 << i)){
    3578:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <rxStatus>
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	0e 2c       	mov	r0, r14
    3580:	02 c0       	rjmp	.+4      	; 0x3586 <loop+0xac>
    3582:	95 95       	asr	r25
    3584:	87 95       	ror	r24
    3586:	0a 94       	dec	r0
    3588:	e2 f7       	brpl	.-8      	; 0x3582 <loop+0xa8>
    358a:	80 ff       	sbrs	r24, 0
    358c:	1e c0       	rjmp	.+60     	; 0x35ca <loop+0xf0>
		  processFrame(_readQueue[i]);
    358e:	c8 01       	movw	r24, r16
    3590:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <_Z12processFrameR7Message>
		  obd.process(_readQueue[i]);
    3594:	b8 01       	movw	r22, r16
    3596:	85 e7       	ldi	r24, 0x75	; 117
    3598:	91 e0       	ldi	r25, 0x01	; 1
    359a:	0e 94 71 07 	call	0xee2	; 0xee2 <_ZN3OBD7processERK7Message>
		  sleepy.process(_readQueue[i]);
    359e:	b8 01       	movw	r22, r16
    35a0:	80 e7       	ldi	r24, 0x70	; 112
    35a2:	91 e0       	ldi	r25, 0x01	; 1
    35a4:	0e 94 df 08 	call	0x11be	; 0x11be <_ZN6Sleepy7processERK7Message>
		  rs232.processMessage(_readQueue[i]);
    35a8:	b8 01       	movw	r22, r16
    35aa:	8c e6       	ldi	r24, 0x6C	; 108
    35ac:	91 e0       	ldi	r25, 0x01	; 1
    35ae:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN5RS23214processMessageERK7Message>
		  rxStatus &= ~(1 << i);
    35b2:	c6 01       	movw	r24, r12
    35b4:	0e 2c       	mov	r0, r14
    35b6:	01 c0       	rjmp	.+2      	; 0x35ba <loop+0xe0>
    35b8:	88 0f       	add	r24, r24
    35ba:	0a 94       	dec	r0
    35bc:	ea f7       	brpl	.-6      	; 0x35b8 <loop+0xde>
    35be:	80 95       	com	r24
    35c0:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <rxStatus>
    35c4:	89 23       	and	r24, r25
    35c6:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <rxStatus>
    35ca:	8f ef       	ldi	r24, 0xFF	; 255
    35cc:	e8 1a       	sub	r14, r24
    35ce:	f8 0a       	sbc	r15, r24
    35d0:	00 5f       	subi	r16, 0xF0	; 240
    35d2:	1f 4f       	sbci	r17, 0xFF	; 255
	buttons.tick();
	obd.tick();
	//techII.tick();
	rs232.tick();

  for(byte i = 0; i < 3; i++){
    35d4:	83 e0       	ldi	r24, 0x03	; 3
    35d6:	e8 16       	cp	r14, r24
    35d8:	f1 04       	cpc	r15, r1
    35da:	71 f6       	brne	.-100    	; 0x3578 <loop+0x9e>
    35dc:	11 e0       	ldi	r17, 0x01	; 1
	  }
  }


  boolean success = true;
  while( !writeQueue.isEmpty() && success){
    35de:	80 91 5b 02 	lds	r24, 0x025B	; 0x80025b <writeQueue+0x1>
    35e2:	88 23       	and	r24, r24
    35e4:	39 f1       	breq	.+78     	; 0x3634 <loop+0x15a>
    35e6:	11 23       	and	r17, r17
    35e8:	29 f1       	breq	.+74     	; 0x3634 <loop+0x15a>
	  Message msg = writeQueue.peek();
    35ea:	6a e5       	ldi	r22, 0x5A	; 90
    35ec:	72 e0       	ldi	r23, 0x02	; 2
    35ee:	ce 01       	movw	r24, r28
    35f0:	01 96       	adiw	r24, 0x01	; 1
    35f2:	0e 94 09 03 	call	0x612	; 0x612 <_ZN12MessageQueue4peekEv>
	  if( (status & STATUS_ENABLE_WRITE) ){
    35f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    35fa:	80 ff       	sbrs	r24, 0
    35fc:	14 c0       	rjmp	.+40     	; 0x3626 <loop+0x14c>
		  switch(msg.busId){
    35fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3600:	81 30       	cpi	r24, 0x01	; 1
    3602:	41 f0       	breq	.+16     	; 0x3614 <loop+0x13a>
    3604:	82 30       	cpi	r24, 0x02	; 2
    3606:	79 f4       	brne	.+30     	; 0x3626 <loop+0x14c>
			  case 1:
			  success = CANBus1.writeFrame(msg);
			  break;
			  case 2:
			  success = CANBus2.writeFrame(msg);
    3608:	be 01       	movw	r22, r28
    360a:	6f 5f       	subi	r22, 0xFF	; 255
    360c:	7f 4f       	sbci	r23, 0xFF	; 255
    360e:	84 e4       	ldi	r24, 0x44	; 68
    3610:	93 e0       	ldi	r25, 0x03	; 3
    3612:	05 c0       	rjmp	.+10     	; 0x361e <loop+0x144>
  while( !writeQueue.isEmpty() && success){
	  Message msg = writeQueue.peek();
	  if( (status & STATUS_ENABLE_WRITE) ){
		  switch(msg.busId){
			  case 1:
			  success = CANBus1.writeFrame(msg);
    3614:	be 01       	movw	r22, r28
    3616:	6f 5f       	subi	r22, 0xFF	; 255
    3618:	7f 4f       	sbci	r23, 0xFF	; 255
    361a:	88 e4       	ldi	r24, 0x48	; 72
    361c:	93 e0       	ldi	r25, 0x03	; 3
			  break;
			  case 2:
			  success = CANBus2.writeFrame(msg);
    361e:	0e 94 4a 2d 	call	0x5a94	; 0x5a94 <_ZN6CANBus10writeFrameER7Message>
			  default:
			  success = true;
			  break;
		  }
	  }
	  if(success){
    3622:	88 23       	and	r24, r24
    3624:	29 f0       	breq	.+10     	; 0x3630 <loop+0x156>
		  //debugPrintMessage(msg);
		  writeQueue.peekClear();
    3626:	8a e5       	ldi	r24, 0x5A	; 90
    3628:	92 e0       	ldi	r25, 0x02	; 2
    362a:	0e 94 30 03 	call	0x660	; 0x660 <_ZN12MessageQueue9peekClearEv>
    362e:	81 2f       	mov	r24, r17
	  }
  }


  boolean success = true;
  while( !writeQueue.isEmpty() && success){
    3630:	18 2f       	mov	r17, r24
    3632:	d5 cf       	rjmp	.-86     	; 0x35de <loop+0x104>
		  //debugPrintMessage(msg);
		  writeQueue.peekClear();
	  }
  }//end loop
	
}
    3634:	60 96       	adiw	r28, 0x10	; 16
    3636:	0f b6       	in	r0, 0x3f	; 63
    3638:	f8 94       	cli
    363a:	de bf       	out	0x3e, r29	; 62
    363c:	0f be       	out	0x3f, r0	; 63
    363e:	cd bf       	out	0x3d, r28	; 61
    3640:	df 91       	pop	r29
    3642:	cf 91       	pop	r28
    3644:	1f 91       	pop	r17
    3646:	0f 91       	pop	r16
    3648:	ff 90       	pop	r15
    364a:	ef 90       	pop	r14
    364c:	df 90       	pop	r13
    364e:	cf 90       	pop	r12
    3650:	08 95       	ret

00003652 <__subsf3>:
    3652:	50 58       	subi	r21, 0x80	; 128

00003654 <__addsf3>:
    3654:	bb 27       	eor	r27, r27
    3656:	aa 27       	eor	r26, r26
    3658:	0e 94 41 1b 	call	0x3682	; 0x3682 <__addsf3x>
    365c:	0c 94 bb 1c 	jmp	0x3976	; 0x3976 <__fp_round>
    3660:	0e 94 ad 1c 	call	0x395a	; 0x395a <__fp_pscA>
    3664:	38 f0       	brcs	.+14     	; 0x3674 <__addsf3+0x20>
    3666:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__fp_pscB>
    366a:	20 f0       	brcs	.+8      	; 0x3674 <__addsf3+0x20>
    366c:	39 f4       	brne	.+14     	; 0x367c <__addsf3+0x28>
    366e:	9f 3f       	cpi	r25, 0xFF	; 255
    3670:	19 f4       	brne	.+6      	; 0x3678 <__addsf3+0x24>
    3672:	26 f4       	brtc	.+8      	; 0x367c <__addsf3+0x28>
    3674:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__fp_nan>
    3678:	0e f4       	brtc	.+2      	; 0x367c <__addsf3+0x28>
    367a:	e0 95       	com	r30
    367c:	e7 fb       	bst	r30, 7
    367e:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <__fp_inf>

00003682 <__addsf3x>:
    3682:	e9 2f       	mov	r30, r25
    3684:	0e 94 cc 1c 	call	0x3998	; 0x3998 <__fp_split3>
    3688:	58 f3       	brcs	.-42     	; 0x3660 <__addsf3+0xc>
    368a:	ba 17       	cp	r27, r26
    368c:	62 07       	cpc	r22, r18
    368e:	73 07       	cpc	r23, r19
    3690:	84 07       	cpc	r24, r20
    3692:	95 07       	cpc	r25, r21
    3694:	20 f0       	brcs	.+8      	; 0x369e <__addsf3x+0x1c>
    3696:	79 f4       	brne	.+30     	; 0x36b6 <__addsf3x+0x34>
    3698:	a6 f5       	brtc	.+104    	; 0x3702 <__addsf3x+0x80>
    369a:	0c 94 ee 1c 	jmp	0x39dc	; 0x39dc <__fp_zero>
    369e:	0e f4       	brtc	.+2      	; 0x36a2 <__addsf3x+0x20>
    36a0:	e0 95       	com	r30
    36a2:	0b 2e       	mov	r0, r27
    36a4:	ba 2f       	mov	r27, r26
    36a6:	a0 2d       	mov	r26, r0
    36a8:	0b 01       	movw	r0, r22
    36aa:	b9 01       	movw	r22, r18
    36ac:	90 01       	movw	r18, r0
    36ae:	0c 01       	movw	r0, r24
    36b0:	ca 01       	movw	r24, r20
    36b2:	a0 01       	movw	r20, r0
    36b4:	11 24       	eor	r1, r1
    36b6:	ff 27       	eor	r31, r31
    36b8:	59 1b       	sub	r21, r25
    36ba:	99 f0       	breq	.+38     	; 0x36e2 <__addsf3x+0x60>
    36bc:	59 3f       	cpi	r21, 0xF9	; 249
    36be:	50 f4       	brcc	.+20     	; 0x36d4 <__addsf3x+0x52>
    36c0:	50 3e       	cpi	r21, 0xE0	; 224
    36c2:	68 f1       	brcs	.+90     	; 0x371e <__addsf3x+0x9c>
    36c4:	1a 16       	cp	r1, r26
    36c6:	f0 40       	sbci	r31, 0x00	; 0
    36c8:	a2 2f       	mov	r26, r18
    36ca:	23 2f       	mov	r18, r19
    36cc:	34 2f       	mov	r19, r20
    36ce:	44 27       	eor	r20, r20
    36d0:	58 5f       	subi	r21, 0xF8	; 248
    36d2:	f3 cf       	rjmp	.-26     	; 0x36ba <__addsf3x+0x38>
    36d4:	46 95       	lsr	r20
    36d6:	37 95       	ror	r19
    36d8:	27 95       	ror	r18
    36da:	a7 95       	ror	r26
    36dc:	f0 40       	sbci	r31, 0x00	; 0
    36de:	53 95       	inc	r21
    36e0:	c9 f7       	brne	.-14     	; 0x36d4 <__addsf3x+0x52>
    36e2:	7e f4       	brtc	.+30     	; 0x3702 <__addsf3x+0x80>
    36e4:	1f 16       	cp	r1, r31
    36e6:	ba 0b       	sbc	r27, r26
    36e8:	62 0b       	sbc	r22, r18
    36ea:	73 0b       	sbc	r23, r19
    36ec:	84 0b       	sbc	r24, r20
    36ee:	ba f0       	brmi	.+46     	; 0x371e <__addsf3x+0x9c>
    36f0:	91 50       	subi	r25, 0x01	; 1
    36f2:	a1 f0       	breq	.+40     	; 0x371c <__addsf3x+0x9a>
    36f4:	ff 0f       	add	r31, r31
    36f6:	bb 1f       	adc	r27, r27
    36f8:	66 1f       	adc	r22, r22
    36fa:	77 1f       	adc	r23, r23
    36fc:	88 1f       	adc	r24, r24
    36fe:	c2 f7       	brpl	.-16     	; 0x36f0 <__addsf3x+0x6e>
    3700:	0e c0       	rjmp	.+28     	; 0x371e <__addsf3x+0x9c>
    3702:	ba 0f       	add	r27, r26
    3704:	62 1f       	adc	r22, r18
    3706:	73 1f       	adc	r23, r19
    3708:	84 1f       	adc	r24, r20
    370a:	48 f4       	brcc	.+18     	; 0x371e <__addsf3x+0x9c>
    370c:	87 95       	ror	r24
    370e:	77 95       	ror	r23
    3710:	67 95       	ror	r22
    3712:	b7 95       	ror	r27
    3714:	f7 95       	ror	r31
    3716:	9e 3f       	cpi	r25, 0xFE	; 254
    3718:	08 f0       	brcs	.+2      	; 0x371c <__addsf3x+0x9a>
    371a:	b0 cf       	rjmp	.-160    	; 0x367c <__addsf3+0x28>
    371c:	93 95       	inc	r25
    371e:	88 0f       	add	r24, r24
    3720:	08 f0       	brcs	.+2      	; 0x3724 <__addsf3x+0xa2>
    3722:	99 27       	eor	r25, r25
    3724:	ee 0f       	add	r30, r30
    3726:	97 95       	ror	r25
    3728:	87 95       	ror	r24
    372a:	08 95       	ret

0000372c <__cmpsf2>:
    372c:	0e 94 80 1c 	call	0x3900	; 0x3900 <__fp_cmp>
    3730:	08 f4       	brcc	.+2      	; 0x3734 <__cmpsf2+0x8>
    3732:	81 e0       	ldi	r24, 0x01	; 1
    3734:	08 95       	ret

00003736 <__divsf3>:
    3736:	0e 94 af 1b 	call	0x375e	; 0x375e <__divsf3x>
    373a:	0c 94 bb 1c 	jmp	0x3976	; 0x3976 <__fp_round>
    373e:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__fp_pscB>
    3742:	58 f0       	brcs	.+22     	; 0x375a <__divsf3+0x24>
    3744:	0e 94 ad 1c 	call	0x395a	; 0x395a <__fp_pscA>
    3748:	40 f0       	brcs	.+16     	; 0x375a <__divsf3+0x24>
    374a:	29 f4       	brne	.+10     	; 0x3756 <__divsf3+0x20>
    374c:	5f 3f       	cpi	r21, 0xFF	; 255
    374e:	29 f0       	breq	.+10     	; 0x375a <__divsf3+0x24>
    3750:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <__fp_inf>
    3754:	51 11       	cpse	r21, r1
    3756:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>
    375a:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__fp_nan>

0000375e <__divsf3x>:
    375e:	0e 94 cc 1c 	call	0x3998	; 0x3998 <__fp_split3>
    3762:	68 f3       	brcs	.-38     	; 0x373e <__divsf3+0x8>

00003764 <__divsf3_pse>:
    3764:	99 23       	and	r25, r25
    3766:	b1 f3       	breq	.-20     	; 0x3754 <__divsf3+0x1e>
    3768:	55 23       	and	r21, r21
    376a:	91 f3       	breq	.-28     	; 0x3750 <__divsf3+0x1a>
    376c:	95 1b       	sub	r25, r21
    376e:	55 0b       	sbc	r21, r21
    3770:	bb 27       	eor	r27, r27
    3772:	aa 27       	eor	r26, r26
    3774:	62 17       	cp	r22, r18
    3776:	73 07       	cpc	r23, r19
    3778:	84 07       	cpc	r24, r20
    377a:	38 f0       	brcs	.+14     	; 0x378a <__divsf3_pse+0x26>
    377c:	9f 5f       	subi	r25, 0xFF	; 255
    377e:	5f 4f       	sbci	r21, 0xFF	; 255
    3780:	22 0f       	add	r18, r18
    3782:	33 1f       	adc	r19, r19
    3784:	44 1f       	adc	r20, r20
    3786:	aa 1f       	adc	r26, r26
    3788:	a9 f3       	breq	.-22     	; 0x3774 <__divsf3_pse+0x10>
    378a:	35 d0       	rcall	.+106    	; 0x37f6 <__divsf3_pse+0x92>
    378c:	0e 2e       	mov	r0, r30
    378e:	3a f0       	brmi	.+14     	; 0x379e <__divsf3_pse+0x3a>
    3790:	e0 e8       	ldi	r30, 0x80	; 128
    3792:	32 d0       	rcall	.+100    	; 0x37f8 <__divsf3_pse+0x94>
    3794:	91 50       	subi	r25, 0x01	; 1
    3796:	50 40       	sbci	r21, 0x00	; 0
    3798:	e6 95       	lsr	r30
    379a:	00 1c       	adc	r0, r0
    379c:	ca f7       	brpl	.-14     	; 0x3790 <__divsf3_pse+0x2c>
    379e:	2b d0       	rcall	.+86     	; 0x37f6 <__divsf3_pse+0x92>
    37a0:	fe 2f       	mov	r31, r30
    37a2:	29 d0       	rcall	.+82     	; 0x37f6 <__divsf3_pse+0x92>
    37a4:	66 0f       	add	r22, r22
    37a6:	77 1f       	adc	r23, r23
    37a8:	88 1f       	adc	r24, r24
    37aa:	bb 1f       	adc	r27, r27
    37ac:	26 17       	cp	r18, r22
    37ae:	37 07       	cpc	r19, r23
    37b0:	48 07       	cpc	r20, r24
    37b2:	ab 07       	cpc	r26, r27
    37b4:	b0 e8       	ldi	r27, 0x80	; 128
    37b6:	09 f0       	breq	.+2      	; 0x37ba <__divsf3_pse+0x56>
    37b8:	bb 0b       	sbc	r27, r27
    37ba:	80 2d       	mov	r24, r0
    37bc:	bf 01       	movw	r22, r30
    37be:	ff 27       	eor	r31, r31
    37c0:	93 58       	subi	r25, 0x83	; 131
    37c2:	5f 4f       	sbci	r21, 0xFF	; 255
    37c4:	3a f0       	brmi	.+14     	; 0x37d4 <__divsf3_pse+0x70>
    37c6:	9e 3f       	cpi	r25, 0xFE	; 254
    37c8:	51 05       	cpc	r21, r1
    37ca:	78 f0       	brcs	.+30     	; 0x37ea <__divsf3_pse+0x86>
    37cc:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <__fp_inf>
    37d0:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>
    37d4:	5f 3f       	cpi	r21, 0xFF	; 255
    37d6:	e4 f3       	brlt	.-8      	; 0x37d0 <__divsf3_pse+0x6c>
    37d8:	98 3e       	cpi	r25, 0xE8	; 232
    37da:	d4 f3       	brlt	.-12     	; 0x37d0 <__divsf3_pse+0x6c>
    37dc:	86 95       	lsr	r24
    37de:	77 95       	ror	r23
    37e0:	67 95       	ror	r22
    37e2:	b7 95       	ror	r27
    37e4:	f7 95       	ror	r31
    37e6:	9f 5f       	subi	r25, 0xFF	; 255
    37e8:	c9 f7       	brne	.-14     	; 0x37dc <__divsf3_pse+0x78>
    37ea:	88 0f       	add	r24, r24
    37ec:	91 1d       	adc	r25, r1
    37ee:	96 95       	lsr	r25
    37f0:	87 95       	ror	r24
    37f2:	97 f9       	bld	r25, 7
    37f4:	08 95       	ret
    37f6:	e1 e0       	ldi	r30, 0x01	; 1
    37f8:	66 0f       	add	r22, r22
    37fa:	77 1f       	adc	r23, r23
    37fc:	88 1f       	adc	r24, r24
    37fe:	bb 1f       	adc	r27, r27
    3800:	62 17       	cp	r22, r18
    3802:	73 07       	cpc	r23, r19
    3804:	84 07       	cpc	r24, r20
    3806:	ba 07       	cpc	r27, r26
    3808:	20 f0       	brcs	.+8      	; 0x3812 <__divsf3_pse+0xae>
    380a:	62 1b       	sub	r22, r18
    380c:	73 0b       	sbc	r23, r19
    380e:	84 0b       	sbc	r24, r20
    3810:	ba 0b       	sbc	r27, r26
    3812:	ee 1f       	adc	r30, r30
    3814:	88 f7       	brcc	.-30     	; 0x37f8 <__divsf3_pse+0x94>
    3816:	e0 95       	com	r30
    3818:	08 95       	ret

0000381a <__fixsfsi>:
    381a:	0e 94 14 1c 	call	0x3828	; 0x3828 <__fixunssfsi>
    381e:	68 94       	set
    3820:	b1 11       	cpse	r27, r1
    3822:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>
    3826:	08 95       	ret

00003828 <__fixunssfsi>:
    3828:	0e 94 d4 1c 	call	0x39a8	; 0x39a8 <__fp_splitA>
    382c:	88 f0       	brcs	.+34     	; 0x3850 <__fixunssfsi+0x28>
    382e:	9f 57       	subi	r25, 0x7F	; 127
    3830:	98 f0       	brcs	.+38     	; 0x3858 <__fixunssfsi+0x30>
    3832:	b9 2f       	mov	r27, r25
    3834:	99 27       	eor	r25, r25
    3836:	b7 51       	subi	r27, 0x17	; 23
    3838:	b0 f0       	brcs	.+44     	; 0x3866 <__fixunssfsi+0x3e>
    383a:	e1 f0       	breq	.+56     	; 0x3874 <__fixunssfsi+0x4c>
    383c:	66 0f       	add	r22, r22
    383e:	77 1f       	adc	r23, r23
    3840:	88 1f       	adc	r24, r24
    3842:	99 1f       	adc	r25, r25
    3844:	1a f0       	brmi	.+6      	; 0x384c <__fixunssfsi+0x24>
    3846:	ba 95       	dec	r27
    3848:	c9 f7       	brne	.-14     	; 0x383c <__fixunssfsi+0x14>
    384a:	14 c0       	rjmp	.+40     	; 0x3874 <__fixunssfsi+0x4c>
    384c:	b1 30       	cpi	r27, 0x01	; 1
    384e:	91 f0       	breq	.+36     	; 0x3874 <__fixunssfsi+0x4c>
    3850:	0e 94 ee 1c 	call	0x39dc	; 0x39dc <__fp_zero>
    3854:	b1 e0       	ldi	r27, 0x01	; 1
    3856:	08 95       	ret
    3858:	0c 94 ee 1c 	jmp	0x39dc	; 0x39dc <__fp_zero>
    385c:	67 2f       	mov	r22, r23
    385e:	78 2f       	mov	r23, r24
    3860:	88 27       	eor	r24, r24
    3862:	b8 5f       	subi	r27, 0xF8	; 248
    3864:	39 f0       	breq	.+14     	; 0x3874 <__fixunssfsi+0x4c>
    3866:	b9 3f       	cpi	r27, 0xF9	; 249
    3868:	cc f3       	brlt	.-14     	; 0x385c <__fixunssfsi+0x34>
    386a:	86 95       	lsr	r24
    386c:	77 95       	ror	r23
    386e:	67 95       	ror	r22
    3870:	b3 95       	inc	r27
    3872:	d9 f7       	brne	.-10     	; 0x386a <__fixunssfsi+0x42>
    3874:	3e f4       	brtc	.+14     	; 0x3884 <__fixunssfsi+0x5c>
    3876:	90 95       	com	r25
    3878:	80 95       	com	r24
    387a:	70 95       	com	r23
    387c:	61 95       	neg	r22
    387e:	7f 4f       	sbci	r23, 0xFF	; 255
    3880:	8f 4f       	sbci	r24, 0xFF	; 255
    3882:	9f 4f       	sbci	r25, 0xFF	; 255
    3884:	08 95       	ret

00003886 <__floatunsisf>:
    3886:	e8 94       	clt
    3888:	09 c0       	rjmp	.+18     	; 0x389c <__floatsisf+0x12>

0000388a <__floatsisf>:
    388a:	97 fb       	bst	r25, 7
    388c:	3e f4       	brtc	.+14     	; 0x389c <__floatsisf+0x12>
    388e:	90 95       	com	r25
    3890:	80 95       	com	r24
    3892:	70 95       	com	r23
    3894:	61 95       	neg	r22
    3896:	7f 4f       	sbci	r23, 0xFF	; 255
    3898:	8f 4f       	sbci	r24, 0xFF	; 255
    389a:	9f 4f       	sbci	r25, 0xFF	; 255
    389c:	99 23       	and	r25, r25
    389e:	a9 f0       	breq	.+42     	; 0x38ca <__floatsisf+0x40>
    38a0:	f9 2f       	mov	r31, r25
    38a2:	96 e9       	ldi	r25, 0x96	; 150
    38a4:	bb 27       	eor	r27, r27
    38a6:	93 95       	inc	r25
    38a8:	f6 95       	lsr	r31
    38aa:	87 95       	ror	r24
    38ac:	77 95       	ror	r23
    38ae:	67 95       	ror	r22
    38b0:	b7 95       	ror	r27
    38b2:	f1 11       	cpse	r31, r1
    38b4:	f8 cf       	rjmp	.-16     	; 0x38a6 <__floatsisf+0x1c>
    38b6:	fa f4       	brpl	.+62     	; 0x38f6 <__floatsisf+0x6c>
    38b8:	bb 0f       	add	r27, r27
    38ba:	11 f4       	brne	.+4      	; 0x38c0 <__floatsisf+0x36>
    38bc:	60 ff       	sbrs	r22, 0
    38be:	1b c0       	rjmp	.+54     	; 0x38f6 <__floatsisf+0x6c>
    38c0:	6f 5f       	subi	r22, 0xFF	; 255
    38c2:	7f 4f       	sbci	r23, 0xFF	; 255
    38c4:	8f 4f       	sbci	r24, 0xFF	; 255
    38c6:	9f 4f       	sbci	r25, 0xFF	; 255
    38c8:	16 c0       	rjmp	.+44     	; 0x38f6 <__floatsisf+0x6c>
    38ca:	88 23       	and	r24, r24
    38cc:	11 f0       	breq	.+4      	; 0x38d2 <__floatsisf+0x48>
    38ce:	96 e9       	ldi	r25, 0x96	; 150
    38d0:	11 c0       	rjmp	.+34     	; 0x38f4 <__floatsisf+0x6a>
    38d2:	77 23       	and	r23, r23
    38d4:	21 f0       	breq	.+8      	; 0x38de <__floatsisf+0x54>
    38d6:	9e e8       	ldi	r25, 0x8E	; 142
    38d8:	87 2f       	mov	r24, r23
    38da:	76 2f       	mov	r23, r22
    38dc:	05 c0       	rjmp	.+10     	; 0x38e8 <__floatsisf+0x5e>
    38de:	66 23       	and	r22, r22
    38e0:	71 f0       	breq	.+28     	; 0x38fe <__floatsisf+0x74>
    38e2:	96 e8       	ldi	r25, 0x86	; 134
    38e4:	86 2f       	mov	r24, r22
    38e6:	70 e0       	ldi	r23, 0x00	; 0
    38e8:	60 e0       	ldi	r22, 0x00	; 0
    38ea:	2a f0       	brmi	.+10     	; 0x38f6 <__floatsisf+0x6c>
    38ec:	9a 95       	dec	r25
    38ee:	66 0f       	add	r22, r22
    38f0:	77 1f       	adc	r23, r23
    38f2:	88 1f       	adc	r24, r24
    38f4:	da f7       	brpl	.-10     	; 0x38ec <__floatsisf+0x62>
    38f6:	88 0f       	add	r24, r24
    38f8:	96 95       	lsr	r25
    38fa:	87 95       	ror	r24
    38fc:	97 f9       	bld	r25, 7
    38fe:	08 95       	ret

00003900 <__fp_cmp>:
    3900:	99 0f       	add	r25, r25
    3902:	00 08       	sbc	r0, r0
    3904:	55 0f       	add	r21, r21
    3906:	aa 0b       	sbc	r26, r26
    3908:	e0 e8       	ldi	r30, 0x80	; 128
    390a:	fe ef       	ldi	r31, 0xFE	; 254
    390c:	16 16       	cp	r1, r22
    390e:	17 06       	cpc	r1, r23
    3910:	e8 07       	cpc	r30, r24
    3912:	f9 07       	cpc	r31, r25
    3914:	c0 f0       	brcs	.+48     	; 0x3946 <__fp_cmp+0x46>
    3916:	12 16       	cp	r1, r18
    3918:	13 06       	cpc	r1, r19
    391a:	e4 07       	cpc	r30, r20
    391c:	f5 07       	cpc	r31, r21
    391e:	98 f0       	brcs	.+38     	; 0x3946 <__fp_cmp+0x46>
    3920:	62 1b       	sub	r22, r18
    3922:	73 0b       	sbc	r23, r19
    3924:	84 0b       	sbc	r24, r20
    3926:	95 0b       	sbc	r25, r21
    3928:	39 f4       	brne	.+14     	; 0x3938 <__fp_cmp+0x38>
    392a:	0a 26       	eor	r0, r26
    392c:	61 f0       	breq	.+24     	; 0x3946 <__fp_cmp+0x46>
    392e:	23 2b       	or	r18, r19
    3930:	24 2b       	or	r18, r20
    3932:	25 2b       	or	r18, r21
    3934:	21 f4       	brne	.+8      	; 0x393e <__fp_cmp+0x3e>
    3936:	08 95       	ret
    3938:	0a 26       	eor	r0, r26
    393a:	09 f4       	brne	.+2      	; 0x393e <__fp_cmp+0x3e>
    393c:	a1 40       	sbci	r26, 0x01	; 1
    393e:	a6 95       	lsr	r26
    3940:	8f ef       	ldi	r24, 0xFF	; 255
    3942:	81 1d       	adc	r24, r1
    3944:	81 1d       	adc	r24, r1
    3946:	08 95       	ret

00003948 <__fp_inf>:
    3948:	97 f9       	bld	r25, 7
    394a:	9f 67       	ori	r25, 0x7F	; 127
    394c:	80 e8       	ldi	r24, 0x80	; 128
    394e:	70 e0       	ldi	r23, 0x00	; 0
    3950:	60 e0       	ldi	r22, 0x00	; 0
    3952:	08 95       	ret

00003954 <__fp_nan>:
    3954:	9f ef       	ldi	r25, 0xFF	; 255
    3956:	80 ec       	ldi	r24, 0xC0	; 192
    3958:	08 95       	ret

0000395a <__fp_pscA>:
    395a:	00 24       	eor	r0, r0
    395c:	0a 94       	dec	r0
    395e:	16 16       	cp	r1, r22
    3960:	17 06       	cpc	r1, r23
    3962:	18 06       	cpc	r1, r24
    3964:	09 06       	cpc	r0, r25
    3966:	08 95       	ret

00003968 <__fp_pscB>:
    3968:	00 24       	eor	r0, r0
    396a:	0a 94       	dec	r0
    396c:	12 16       	cp	r1, r18
    396e:	13 06       	cpc	r1, r19
    3970:	14 06       	cpc	r1, r20
    3972:	05 06       	cpc	r0, r21
    3974:	08 95       	ret

00003976 <__fp_round>:
    3976:	09 2e       	mov	r0, r25
    3978:	03 94       	inc	r0
    397a:	00 0c       	add	r0, r0
    397c:	11 f4       	brne	.+4      	; 0x3982 <__fp_round+0xc>
    397e:	88 23       	and	r24, r24
    3980:	52 f0       	brmi	.+20     	; 0x3996 <__fp_round+0x20>
    3982:	bb 0f       	add	r27, r27
    3984:	40 f4       	brcc	.+16     	; 0x3996 <__fp_round+0x20>
    3986:	bf 2b       	or	r27, r31
    3988:	11 f4       	brne	.+4      	; 0x398e <__fp_round+0x18>
    398a:	60 ff       	sbrs	r22, 0
    398c:	04 c0       	rjmp	.+8      	; 0x3996 <__fp_round+0x20>
    398e:	6f 5f       	subi	r22, 0xFF	; 255
    3990:	7f 4f       	sbci	r23, 0xFF	; 255
    3992:	8f 4f       	sbci	r24, 0xFF	; 255
    3994:	9f 4f       	sbci	r25, 0xFF	; 255
    3996:	08 95       	ret

00003998 <__fp_split3>:
    3998:	57 fd       	sbrc	r21, 7
    399a:	90 58       	subi	r25, 0x80	; 128
    399c:	44 0f       	add	r20, r20
    399e:	55 1f       	adc	r21, r21
    39a0:	59 f0       	breq	.+22     	; 0x39b8 <__fp_splitA+0x10>
    39a2:	5f 3f       	cpi	r21, 0xFF	; 255
    39a4:	71 f0       	breq	.+28     	; 0x39c2 <__fp_splitA+0x1a>
    39a6:	47 95       	ror	r20

000039a8 <__fp_splitA>:
    39a8:	88 0f       	add	r24, r24
    39aa:	97 fb       	bst	r25, 7
    39ac:	99 1f       	adc	r25, r25
    39ae:	61 f0       	breq	.+24     	; 0x39c8 <__fp_splitA+0x20>
    39b0:	9f 3f       	cpi	r25, 0xFF	; 255
    39b2:	79 f0       	breq	.+30     	; 0x39d2 <__fp_splitA+0x2a>
    39b4:	87 95       	ror	r24
    39b6:	08 95       	ret
    39b8:	12 16       	cp	r1, r18
    39ba:	13 06       	cpc	r1, r19
    39bc:	14 06       	cpc	r1, r20
    39be:	55 1f       	adc	r21, r21
    39c0:	f2 cf       	rjmp	.-28     	; 0x39a6 <__fp_split3+0xe>
    39c2:	46 95       	lsr	r20
    39c4:	f1 df       	rcall	.-30     	; 0x39a8 <__fp_splitA>
    39c6:	08 c0       	rjmp	.+16     	; 0x39d8 <__fp_splitA+0x30>
    39c8:	16 16       	cp	r1, r22
    39ca:	17 06       	cpc	r1, r23
    39cc:	18 06       	cpc	r1, r24
    39ce:	99 1f       	adc	r25, r25
    39d0:	f1 cf       	rjmp	.-30     	; 0x39b4 <__fp_splitA+0xc>
    39d2:	86 95       	lsr	r24
    39d4:	71 05       	cpc	r23, r1
    39d6:	61 05       	cpc	r22, r1
    39d8:	08 94       	sec
    39da:	08 95       	ret

000039dc <__fp_zero>:
    39dc:	e8 94       	clt

000039de <__fp_szero>:
    39de:	bb 27       	eor	r27, r27
    39e0:	66 27       	eor	r22, r22
    39e2:	77 27       	eor	r23, r23
    39e4:	cb 01       	movw	r24, r22
    39e6:	97 f9       	bld	r25, 7
    39e8:	08 95       	ret

000039ea <__gesf2>:
    39ea:	0e 94 80 1c 	call	0x3900	; 0x3900 <__fp_cmp>
    39ee:	08 f4       	brcc	.+2      	; 0x39f2 <__gesf2+0x8>
    39f0:	8f ef       	ldi	r24, 0xFF	; 255
    39f2:	08 95       	ret

000039f4 <__mulsf3>:
    39f4:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <__mulsf3x>
    39f8:	0c 94 bb 1c 	jmp	0x3976	; 0x3976 <__fp_round>
    39fc:	0e 94 ad 1c 	call	0x395a	; 0x395a <__fp_pscA>
    3a00:	38 f0       	brcs	.+14     	; 0x3a10 <__mulsf3+0x1c>
    3a02:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__fp_pscB>
    3a06:	20 f0       	brcs	.+8      	; 0x3a10 <__mulsf3+0x1c>
    3a08:	95 23       	and	r25, r21
    3a0a:	11 f0       	breq	.+4      	; 0x3a10 <__mulsf3+0x1c>
    3a0c:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <__fp_inf>
    3a10:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__fp_nan>
    3a14:	11 24       	eor	r1, r1
    3a16:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>

00003a1a <__mulsf3x>:
    3a1a:	0e 94 cc 1c 	call	0x3998	; 0x3998 <__fp_split3>
    3a1e:	70 f3       	brcs	.-36     	; 0x39fc <__mulsf3+0x8>

00003a20 <__mulsf3_pse>:
    3a20:	95 9f       	mul	r25, r21
    3a22:	c1 f3       	breq	.-16     	; 0x3a14 <__mulsf3+0x20>
    3a24:	95 0f       	add	r25, r21
    3a26:	50 e0       	ldi	r21, 0x00	; 0
    3a28:	55 1f       	adc	r21, r21
    3a2a:	62 9f       	mul	r22, r18
    3a2c:	f0 01       	movw	r30, r0
    3a2e:	72 9f       	mul	r23, r18
    3a30:	bb 27       	eor	r27, r27
    3a32:	f0 0d       	add	r31, r0
    3a34:	b1 1d       	adc	r27, r1
    3a36:	63 9f       	mul	r22, r19
    3a38:	aa 27       	eor	r26, r26
    3a3a:	f0 0d       	add	r31, r0
    3a3c:	b1 1d       	adc	r27, r1
    3a3e:	aa 1f       	adc	r26, r26
    3a40:	64 9f       	mul	r22, r20
    3a42:	66 27       	eor	r22, r22
    3a44:	b0 0d       	add	r27, r0
    3a46:	a1 1d       	adc	r26, r1
    3a48:	66 1f       	adc	r22, r22
    3a4a:	82 9f       	mul	r24, r18
    3a4c:	22 27       	eor	r18, r18
    3a4e:	b0 0d       	add	r27, r0
    3a50:	a1 1d       	adc	r26, r1
    3a52:	62 1f       	adc	r22, r18
    3a54:	73 9f       	mul	r23, r19
    3a56:	b0 0d       	add	r27, r0
    3a58:	a1 1d       	adc	r26, r1
    3a5a:	62 1f       	adc	r22, r18
    3a5c:	83 9f       	mul	r24, r19
    3a5e:	a0 0d       	add	r26, r0
    3a60:	61 1d       	adc	r22, r1
    3a62:	22 1f       	adc	r18, r18
    3a64:	74 9f       	mul	r23, r20
    3a66:	33 27       	eor	r19, r19
    3a68:	a0 0d       	add	r26, r0
    3a6a:	61 1d       	adc	r22, r1
    3a6c:	23 1f       	adc	r18, r19
    3a6e:	84 9f       	mul	r24, r20
    3a70:	60 0d       	add	r22, r0
    3a72:	21 1d       	adc	r18, r1
    3a74:	82 2f       	mov	r24, r18
    3a76:	76 2f       	mov	r23, r22
    3a78:	6a 2f       	mov	r22, r26
    3a7a:	11 24       	eor	r1, r1
    3a7c:	9f 57       	subi	r25, 0x7F	; 127
    3a7e:	50 40       	sbci	r21, 0x00	; 0
    3a80:	9a f0       	brmi	.+38     	; 0x3aa8 <__mulsf3_pse+0x88>
    3a82:	f1 f0       	breq	.+60     	; 0x3ac0 <__mulsf3_pse+0xa0>
    3a84:	88 23       	and	r24, r24
    3a86:	4a f0       	brmi	.+18     	; 0x3a9a <__mulsf3_pse+0x7a>
    3a88:	ee 0f       	add	r30, r30
    3a8a:	ff 1f       	adc	r31, r31
    3a8c:	bb 1f       	adc	r27, r27
    3a8e:	66 1f       	adc	r22, r22
    3a90:	77 1f       	adc	r23, r23
    3a92:	88 1f       	adc	r24, r24
    3a94:	91 50       	subi	r25, 0x01	; 1
    3a96:	50 40       	sbci	r21, 0x00	; 0
    3a98:	a9 f7       	brne	.-22     	; 0x3a84 <__mulsf3_pse+0x64>
    3a9a:	9e 3f       	cpi	r25, 0xFE	; 254
    3a9c:	51 05       	cpc	r21, r1
    3a9e:	80 f0       	brcs	.+32     	; 0x3ac0 <__mulsf3_pse+0xa0>
    3aa0:	0c 94 a4 1c 	jmp	0x3948	; 0x3948 <__fp_inf>
    3aa4:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>
    3aa8:	5f 3f       	cpi	r21, 0xFF	; 255
    3aaa:	e4 f3       	brlt	.-8      	; 0x3aa4 <__mulsf3_pse+0x84>
    3aac:	98 3e       	cpi	r25, 0xE8	; 232
    3aae:	d4 f3       	brlt	.-12     	; 0x3aa4 <__mulsf3_pse+0x84>
    3ab0:	86 95       	lsr	r24
    3ab2:	77 95       	ror	r23
    3ab4:	67 95       	ror	r22
    3ab6:	b7 95       	ror	r27
    3ab8:	f7 95       	ror	r31
    3aba:	e7 95       	ror	r30
    3abc:	9f 5f       	subi	r25, 0xFF	; 255
    3abe:	c1 f7       	brne	.-16     	; 0x3ab0 <__mulsf3_pse+0x90>
    3ac0:	fe 2b       	or	r31, r30
    3ac2:	88 0f       	add	r24, r24
    3ac4:	91 1d       	adc	r25, r1
    3ac6:	96 95       	lsr	r25
    3ac8:	87 95       	ror	r24
    3aca:	97 f9       	bld	r25, 7
    3acc:	08 95       	ret

00003ace <trunc>:
    3ace:	0e 94 9b 1d 	call	0x3b36	; 0x3b36 <__fp_trunc>
    3ad2:	30 f0       	brcs	.+12     	; 0x3ae0 <trunc+0x12>
    3ad4:	9f 37       	cpi	r25, 0x7F	; 127
    3ad6:	10 f4       	brcc	.+4      	; 0x3adc <trunc+0xe>
    3ad8:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__fp_szero>
    3adc:	0c 94 72 1d 	jmp	0x3ae4	; 0x3ae4 <__fp_mintl>
    3ae0:	0c 94 8d 1d 	jmp	0x3b1a	; 0x3b1a <__fp_mpack>

00003ae4 <__fp_mintl>:
    3ae4:	88 23       	and	r24, r24
    3ae6:	71 f4       	brne	.+28     	; 0x3b04 <__fp_mintl+0x20>
    3ae8:	77 23       	and	r23, r23
    3aea:	21 f0       	breq	.+8      	; 0x3af4 <__fp_mintl+0x10>
    3aec:	98 50       	subi	r25, 0x08	; 8
    3aee:	87 2b       	or	r24, r23
    3af0:	76 2f       	mov	r23, r22
    3af2:	07 c0       	rjmp	.+14     	; 0x3b02 <__fp_mintl+0x1e>
    3af4:	66 23       	and	r22, r22
    3af6:	11 f4       	brne	.+4      	; 0x3afc <__fp_mintl+0x18>
    3af8:	99 27       	eor	r25, r25
    3afa:	0d c0       	rjmp	.+26     	; 0x3b16 <__fp_mintl+0x32>
    3afc:	90 51       	subi	r25, 0x10	; 16
    3afe:	86 2b       	or	r24, r22
    3b00:	70 e0       	ldi	r23, 0x00	; 0
    3b02:	60 e0       	ldi	r22, 0x00	; 0
    3b04:	2a f0       	brmi	.+10     	; 0x3b10 <__fp_mintl+0x2c>
    3b06:	9a 95       	dec	r25
    3b08:	66 0f       	add	r22, r22
    3b0a:	77 1f       	adc	r23, r23
    3b0c:	88 1f       	adc	r24, r24
    3b0e:	da f7       	brpl	.-10     	; 0x3b06 <__fp_mintl+0x22>
    3b10:	88 0f       	add	r24, r24
    3b12:	96 95       	lsr	r25
    3b14:	87 95       	ror	r24
    3b16:	97 f9       	bld	r25, 7
    3b18:	08 95       	ret

00003b1a <__fp_mpack>:
    3b1a:	9f 3f       	cpi	r25, 0xFF	; 255
    3b1c:	31 f0       	breq	.+12     	; 0x3b2a <__fp_mpack_finite+0xc>

00003b1e <__fp_mpack_finite>:
    3b1e:	91 50       	subi	r25, 0x01	; 1
    3b20:	20 f4       	brcc	.+8      	; 0x3b2a <__fp_mpack_finite+0xc>
    3b22:	87 95       	ror	r24
    3b24:	77 95       	ror	r23
    3b26:	67 95       	ror	r22
    3b28:	b7 95       	ror	r27
    3b2a:	88 0f       	add	r24, r24
    3b2c:	91 1d       	adc	r25, r1
    3b2e:	96 95       	lsr	r25
    3b30:	87 95       	ror	r24
    3b32:	97 f9       	bld	r25, 7
    3b34:	08 95       	ret

00003b36 <__fp_trunc>:
    3b36:	0e 94 d4 1c 	call	0x39a8	; 0x39a8 <__fp_splitA>
    3b3a:	a0 f0       	brcs	.+40     	; 0x3b64 <__fp_trunc+0x2e>
    3b3c:	be e7       	ldi	r27, 0x7E	; 126
    3b3e:	b9 17       	cp	r27, r25
    3b40:	88 f4       	brcc	.+34     	; 0x3b64 <__fp_trunc+0x2e>
    3b42:	bb 27       	eor	r27, r27
    3b44:	9f 38       	cpi	r25, 0x8F	; 143
    3b46:	60 f4       	brcc	.+24     	; 0x3b60 <__fp_trunc+0x2a>
    3b48:	16 16       	cp	r1, r22
    3b4a:	b1 1d       	adc	r27, r1
    3b4c:	67 2f       	mov	r22, r23
    3b4e:	78 2f       	mov	r23, r24
    3b50:	88 27       	eor	r24, r24
    3b52:	98 5f       	subi	r25, 0xF8	; 248
    3b54:	f7 cf       	rjmp	.-18     	; 0x3b44 <__fp_trunc+0xe>
    3b56:	86 95       	lsr	r24
    3b58:	77 95       	ror	r23
    3b5a:	67 95       	ror	r22
    3b5c:	b1 1d       	adc	r27, r1
    3b5e:	93 95       	inc	r25
    3b60:	96 39       	cpi	r25, 0x96	; 150
    3b62:	c8 f3       	brcs	.-14     	; 0x3b56 <__fp_trunc+0x20>
    3b64:	08 95       	ret

00003b66 <_ZN7Serial_5writeEh>:
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
		ret = breakValue;
		breakValue = -1;
	}
	return ret;
}
    3b66:	cf 93       	push	r28
    3b68:	df 93       	push	r29
    3b6a:	1f 92       	push	r1
    3b6c:	cd b7       	in	r28, 0x3d	; 61
    3b6e:	de b7       	in	r29, 0x3e	; 62
    3b70:	69 83       	std	Y+1, r22	; 0x01
    3b72:	dc 01       	movw	r26, r24
    3b74:	ed 91       	ld	r30, X+
    3b76:	fc 91       	ld	r31, X
    3b78:	02 80       	ldd	r0, Z+2	; 0x02
    3b7a:	f3 81       	ldd	r31, Z+3	; 0x03
    3b7c:	e0 2d       	mov	r30, r0
    3b7e:	41 e0       	ldi	r20, 0x01	; 1
    3b80:	50 e0       	ldi	r21, 0x00	; 0
    3b82:	be 01       	movw	r22, r28
    3b84:	6f 5f       	subi	r22, 0xFF	; 255
    3b86:	7f 4f       	sbci	r23, 0xFF	; 255
    3b88:	09 95       	icall
    3b8a:	0f 90       	pop	r0
    3b8c:	df 91       	pop	r29
    3b8e:	cf 91       	pop	r28
    3b90:	08 95       	ret

00003b92 <_ZN7Serial_4peekEv>:
    3b92:	cf 93       	push	r28
    3b94:	df 93       	push	r29
    3b96:	ec 01       	movw	r28, r24
    3b98:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b9a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3b9c:	97 ff       	sbrs	r25, 7
    3b9e:	05 c0       	rjmp	.+10     	; 0x3baa <_ZN7Serial_4peekEv+0x18>
    3ba0:	82 e0       	ldi	r24, 0x02	; 2
    3ba2:	0e 94 b6 21 	call	0x436c	; 0x436c <_Z8USB_Recvh>
    3ba6:	9d 87       	std	Y+13, r25	; 0x0d
    3ba8:	8c 87       	std	Y+12, r24	; 0x0c
    3baa:	8c 85       	ldd	r24, Y+12	; 0x0c
    3bac:	9d 85       	ldd	r25, Y+13	; 0x0d
    3bae:	df 91       	pop	r29
    3bb0:	cf 91       	pop	r28
    3bb2:	08 95       	ret

00003bb4 <_ZN7Serial_5flushEv>:
    3bb4:	83 e0       	ldi	r24, 0x03	; 3
    3bb6:	0c 94 48 24 	jmp	0x4890	; 0x4890 <_Z9USB_Flushh>

00003bba <_ZN7Serial_9availableEv>:
    3bba:	fc 01       	movw	r30, r24
    3bbc:	84 85       	ldd	r24, Z+12	; 0x0c
    3bbe:	95 85       	ldd	r25, Z+13	; 0x0d
    3bc0:	97 fd       	sbrc	r25, 7
    3bc2:	06 c0       	rjmp	.+12     	; 0x3bd0 <_ZN7Serial_9availableEv+0x16>
    3bc4:	82 e0       	ldi	r24, 0x02	; 2
    3bc6:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_Z13USB_Availableh>
    3bca:	90 e0       	ldi	r25, 0x00	; 0
    3bcc:	01 96       	adiw	r24, 0x01	; 1
    3bce:	08 95       	ret
    3bd0:	82 e0       	ldi	r24, 0x02	; 2
    3bd2:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_Z13USB_Availableh>
    3bd6:	90 e0       	ldi	r25, 0x00	; 0
    3bd8:	08 95       	ret

00003bda <_ZN7Serial_4readEv>:
    3bda:	fc 01       	movw	r30, r24
    3bdc:	84 85       	ldd	r24, Z+12	; 0x0c
    3bde:	95 85       	ldd	r25, Z+13	; 0x0d
    3be0:	97 fd       	sbrc	r25, 7
    3be2:	05 c0       	rjmp	.+10     	; 0x3bee <_ZN7Serial_4readEv+0x14>
    3be4:	2f ef       	ldi	r18, 0xFF	; 255
    3be6:	3f ef       	ldi	r19, 0xFF	; 255
    3be8:	35 87       	std	Z+13, r19	; 0x0d
    3bea:	24 87       	std	Z+12, r18	; 0x0c
    3bec:	08 95       	ret
    3bee:	82 e0       	ldi	r24, 0x02	; 2
    3bf0:	0c 94 b6 21 	jmp	0x436c	; 0x436c <_Z8USB_Recvh>

00003bf4 <_ZN7Serial_5writeEPKhj>:
    3bf4:	cf 93       	push	r28
    3bf6:	df 93       	push	r29
    3bf8:	ec 01       	movw	r28, r24
    3bfa:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <_ZL12_usbLineInfo+0x7>
    3bfe:	88 23       	and	r24, r24
    3c00:	31 f0       	breq	.+12     	; 0x3c0e <_ZN7Serial_5writeEPKhj+0x1a>
    3c02:	83 e0       	ldi	r24, 0x03	; 3
    3c04:	0e 94 e7 21 	call	0x43ce	; 0x43ce <_Z8USB_SendhPKvi>
    3c08:	18 16       	cp	r1, r24
    3c0a:	19 06       	cpc	r1, r25
    3c0c:	34 f0       	brlt	.+12     	; 0x3c1a <_ZN7Serial_5writeEPKhj+0x26>
    3c0e:	81 e0       	ldi	r24, 0x01	; 1
    3c10:	90 e0       	ldi	r25, 0x00	; 0
    3c12:	9b 83       	std	Y+3, r25	; 0x03
    3c14:	8a 83       	std	Y+2, r24	; 0x02
    3c16:	80 e0       	ldi	r24, 0x00	; 0
    3c18:	90 e0       	ldi	r25, 0x00	; 0
    3c1a:	df 91       	pop	r29
    3c1c:	cf 91       	pop	r28
    3c1e:	08 95       	ret

00003c20 <_Z16CDC_GetInterfacePh>:
    3c20:	fc 01       	movw	r30, r24
    3c22:	90 81       	ld	r25, Z
    3c24:	9e 5f       	subi	r25, 0xFE	; 254
    3c26:	90 83       	st	Z, r25
    3c28:	42 e4       	ldi	r20, 0x42	; 66
    3c2a:	50 e0       	ldi	r21, 0x00	; 0
    3c2c:	6f eb       	ldi	r22, 0xBF	; 191
    3c2e:	73 e0       	ldi	r23, 0x03	; 3
    3c30:	80 e8       	ldi	r24, 0x80	; 128
    3c32:	0c 94 87 22 	jmp	0x450e	; 0x450e <_Z15USB_SendControlhPKvi>

00003c36 <_Z9CDC_SetupR8USBSetup>:
    3c36:	fc 01       	movw	r30, r24
    3c38:	81 81       	ldd	r24, Z+1	; 0x01
    3c3a:	90 81       	ld	r25, Z
    3c3c:	91 3a       	cpi	r25, 0xA1	; 161
    3c3e:	59 f4       	brne	.+22     	; 0x3c56 <_Z9CDC_SetupR8USBSetup+0x20>
    3c40:	81 32       	cpi	r24, 0x21	; 33
    3c42:	09 f0       	breq	.+2      	; 0x3c46 <_Z9CDC_SetupR8USBSetup+0x10>
    3c44:	5c c0       	rjmp	.+184    	; 0x3cfe <_Z9CDC_SetupR8USBSetup+0xc8>
    3c46:	47 e0       	ldi	r20, 0x07	; 7
    3c48:	50 e0       	ldi	r21, 0x00	; 0
    3c4a:	66 e0       	ldi	r22, 0x06	; 6
    3c4c:	71 e0       	ldi	r23, 0x01	; 1
    3c4e:	80 e0       	ldi	r24, 0x00	; 0
    3c50:	0e 94 87 22 	call	0x450e	; 0x450e <_Z15USB_SendControlhPKvi>
    3c54:	52 c0       	rjmp	.+164    	; 0x3cfa <_Z9CDC_SetupR8USBSetup+0xc4>
    3c56:	91 32       	cpi	r25, 0x21	; 33
    3c58:	09 f0       	breq	.+2      	; 0x3c5c <_Z9CDC_SetupR8USBSetup+0x26>
    3c5a:	51 c0       	rjmp	.+162    	; 0x3cfe <_Z9CDC_SetupR8USBSetup+0xc8>
    3c5c:	83 32       	cpi	r24, 0x23	; 35
    3c5e:	69 f4       	brne	.+26     	; 0x3c7a <_Z9CDC_SetupR8USBSetup+0x44>
    3c60:	82 81       	ldd	r24, Z+2	; 0x02
    3c62:	93 81       	ldd	r25, Z+3	; 0x03
    3c64:	a0 e0       	ldi	r26, 0x00	; 0
    3c66:	b0 e0       	ldi	r27, 0x00	; 0
    3c68:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL10breakValue>
    3c6c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL10breakValue+0x1>
    3c70:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <_ZL10breakValue+0x2>
    3c74:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <_ZL10breakValue+0x3>
    3c78:	40 c0       	rjmp	.+128    	; 0x3cfa <_Z9CDC_SetupR8USBSetup+0xc4>
    3c7a:	80 32       	cpi	r24, 0x20	; 32
    3c7c:	39 f4       	brne	.+14     	; 0x3c8c <_Z9CDC_SetupR8USBSetup+0x56>
    3c7e:	67 e0       	ldi	r22, 0x07	; 7
    3c80:	70 e0       	ldi	r23, 0x00	; 0
    3c82:	86 e0       	ldi	r24, 0x06	; 6
    3c84:	91 e0       	ldi	r25, 0x01	; 1
    3c86:	0e 94 ae 22 	call	0x455c	; 0x455c <_Z15USB_RecvControlPvi>
    3c8a:	05 c0       	rjmp	.+10     	; 0x3c96 <_Z9CDC_SetupR8USBSetup+0x60>
    3c8c:	82 32       	cpi	r24, 0x22	; 34
    3c8e:	a9 f5       	brne	.+106    	; 0x3cfa <_Z9CDC_SetupR8USBSetup+0xc4>
    3c90:	82 81       	ldd	r24, Z+2	; 0x02
    3c92:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_ZL12_usbLineInfo+0x7>
    3c96:	80 91 d0 03 	lds	r24, 0x03D0	; 0x8003d0 <_updatedLUFAbootloader>
    3c9a:	88 23       	and	r24, r24
    3c9c:	19 f0       	breq	.+6      	; 0x3ca4 <_Z9CDC_SetupR8USBSetup+0x6e>
    3c9e:	ee ef       	ldi	r30, 0xFE	; 254
    3ca0:	fa e0       	ldi	r31, 0x0A	; 10
    3ca2:	02 c0       	rjmp	.+4      	; 0x3ca8 <_Z9CDC_SetupR8USBSetup+0x72>
    3ca4:	e0 e0       	ldi	r30, 0x00	; 0
    3ca6:	f8 e0       	ldi	r31, 0x08	; 8
    3ca8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL12_usbLineInfo>
    3cac:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_ZL12_usbLineInfo+0x1>
    3cb0:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_ZL12_usbLineInfo+0x2>
    3cb4:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_ZL12_usbLineInfo+0x3>
    3cb8:	80 3b       	cpi	r24, 0xB0	; 176
    3cba:	94 40       	sbci	r25, 0x04	; 4
    3cbc:	a1 05       	cpc	r26, r1
    3cbe:	b1 05       	cpc	r27, r1
    3cc0:	01 f5       	brne	.+64     	; 0x3d02 <_Z9CDC_SetupR8USBSetup+0xcc>
    3cc2:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <_ZL12_usbLineInfo+0x7>
    3cc6:	80 fd       	sbrc	r24, 0
    3cc8:	1c c0       	rjmp	.+56     	; 0x3d02 <_Z9CDC_SetupR8USBSetup+0xcc>
    3cca:	ee 3f       	cpi	r30, 0xFE	; 254
    3ccc:	2a e0       	ldi	r18, 0x0A	; 10
    3cce:	f2 07       	cpc	r31, r18
    3cd0:	31 f0       	breq	.+12     	; 0x3cde <_Z9CDC_SetupR8USBSetup+0xa8>
    3cd2:	80 81       	ld	r24, Z
    3cd4:	91 81       	ldd	r25, Z+1	; 0x01
    3cd6:	90 93 ff 0a 	sts	0x0AFF, r25	; 0x800aff <__bss_end+0x670>
    3cda:	80 93 fe 0a 	sts	0x0AFE, r24	; 0x800afe <__bss_end+0x66f>
    3cde:	87 e7       	ldi	r24, 0x77	; 119
    3ce0:	97 e7       	ldi	r25, 0x77	; 119
    3ce2:	91 83       	std	Z+1, r25	; 0x01
    3ce4:	80 83       	st	Z, r24
    3ce6:	9b e0       	ldi	r25, 0x0B	; 11
    3ce8:	88 e1       	ldi	r24, 0x18	; 24
    3cea:	0f b6       	in	r0, 0x3f	; 63
    3cec:	f8 94       	cli
    3cee:	a8 95       	wdr
    3cf0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3cf4:	0f be       	out	0x3f, r0	; 63
    3cf6:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3cfa:	81 e0       	ldi	r24, 0x01	; 1
    3cfc:	08 95       	ret
    3cfe:	80 e0       	ldi	r24, 0x00	; 0
    3d00:	08 95       	ret
    3d02:	0f b6       	in	r0, 0x3f	; 63
    3d04:	f8 94       	cli
    3d06:	a8 95       	wdr
    3d08:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3d0c:	88 61       	ori	r24, 0x18	; 24
    3d0e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3d12:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3d16:	0f be       	out	0x3f, r0	; 63
    3d18:	a8 95       	wdr
    3d1a:	ee 3f       	cpi	r30, 0xFE	; 254
    3d1c:	8a e0       	ldi	r24, 0x0A	; 10
    3d1e:	f8 07       	cpc	r31, r24
    3d20:	39 f0       	breq	.+14     	; 0x3d30 <_Z9CDC_SetupR8USBSetup+0xfa>
    3d22:	80 91 fe 0a 	lds	r24, 0x0AFE	; 0x800afe <__bss_end+0x66f>
    3d26:	90 91 ff 0a 	lds	r25, 0x0AFF	; 0x800aff <__bss_end+0x670>
    3d2a:	91 83       	std	Z+1, r25	; 0x01
    3d2c:	80 83       	st	Z, r24
    3d2e:	e5 cf       	rjmp	.-54     	; 0x3cfa <_Z9CDC_SetupR8USBSetup+0xc4>
    3d30:	10 92 ff 0a 	sts	0x0AFF, r1	; 0x800aff <__bss_end+0x670>
    3d34:	10 92 fe 0a 	sts	0x0AFE, r1	; 0x800afe <__bss_end+0x66f>
    3d38:	e0 cf       	rjmp	.-64     	; 0x3cfa <_Z9CDC_SetupR8USBSetup+0xc4>

00003d3a <_ZN7Serial_5beginEm>:
    3d3a:	2f ef       	ldi	r18, 0xFF	; 255
    3d3c:	3f ef       	ldi	r19, 0xFF	; 255
    3d3e:	fc 01       	movw	r30, r24
    3d40:	35 87       	std	Z+13, r19	; 0x0d
    3d42:	24 87       	std	Z+12, r18	; 0x0c
    3d44:	08 95       	ret

00003d46 <_GLOBAL__sub_I__updatedLUFAbootloader>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    3d46:	e0 e8       	ldi	r30, 0x80	; 128
    3d48:	f3 e0       	ldi	r31, 0x03	; 3
    3d4a:	13 82       	std	Z+3, r1	; 0x03
    3d4c:	12 82       	std	Z+2, r1	; 0x02
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
    3d4e:	88 ee       	ldi	r24, 0xE8	; 232
    3d50:	93 e0       	ldi	r25, 0x03	; 3
    3d52:	a0 e0       	ldi	r26, 0x00	; 0
    3d54:	b0 e0       	ldi	r27, 0x00	; 0
    3d56:	84 83       	std	Z+4, r24	; 0x04
    3d58:	95 83       	std	Z+5, r25	; 0x05
    3d5a:	a6 83       	std	Z+6, r26	; 0x06
    3d5c:	b7 83       	std	Z+7, r27	; 0x07
class Serial_ : public Stream
{
private:
	int peek_buffer;
public:
	Serial_() { peek_buffer = -1; };
    3d5e:	8b e4       	ldi	r24, 0x4B	; 75
    3d60:	91 e0       	ldi	r25, 0x01	; 1
    3d62:	91 83       	std	Z+1, r25	; 0x01
    3d64:	80 83       	st	Z, r24
    3d66:	8f ef       	ldi	r24, 0xFF	; 255
    3d68:	9f ef       	ldi	r25, 0xFF	; 255
    3d6a:	95 87       	std	Z+13, r25	; 0x0d
    3d6c:	84 87       	std	Z+12, r24	; 0x0c
    3d6e:	08 95       	ret

00003d70 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    3d70:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    3d72:	91 8d       	ldd	r25, Z+25	; 0x19
    3d74:	22 8d       	ldd	r18, Z+26	; 0x1a
    3d76:	89 2f       	mov	r24, r25
    3d78:	90 e0       	ldi	r25, 0x00	; 0
    3d7a:	80 5c       	subi	r24, 0xC0	; 192
    3d7c:	9f 4f       	sbci	r25, 0xFF	; 255
    3d7e:	82 1b       	sub	r24, r18
    3d80:	91 09       	sbc	r25, r1
}
    3d82:	8f 73       	andi	r24, 0x3F	; 63
    3d84:	99 27       	eor	r25, r25
    3d86:	08 95       	ret

00003d88 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    3d88:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    3d8a:	91 8d       	ldd	r25, Z+25	; 0x19
    3d8c:	82 8d       	ldd	r24, Z+26	; 0x1a
    3d8e:	98 17       	cp	r25, r24
    3d90:	31 f0       	breq	.+12     	; 0x3d9e <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    3d92:	82 8d       	ldd	r24, Z+26	; 0x1a
    3d94:	e8 0f       	add	r30, r24
    3d96:	f1 1d       	adc	r31, r1
    3d98:	85 8d       	ldd	r24, Z+29	; 0x1d
    3d9a:	90 e0       	ldi	r25, 0x00	; 0
    3d9c:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3d9e:	8f ef       	ldi	r24, 0xFF	; 255
    3da0:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    3da2:	08 95       	ret

00003da4 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    3da4:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    3da6:	91 8d       	ldd	r25, Z+25	; 0x19
    3da8:	82 8d       	ldd	r24, Z+26	; 0x1a
    3daa:	98 17       	cp	r25, r24
    3dac:	61 f0       	breq	.+24     	; 0x3dc6 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    3dae:	82 8d       	ldd	r24, Z+26	; 0x1a
    3db0:	df 01       	movw	r26, r30
    3db2:	a8 0f       	add	r26, r24
    3db4:	b1 1d       	adc	r27, r1
    3db6:	5d 96       	adiw	r26, 0x1d	; 29
    3db8:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    3dba:	92 8d       	ldd	r25, Z+26	; 0x1a
    3dbc:	9f 5f       	subi	r25, 0xFF	; 255
    3dbe:	9f 73       	andi	r25, 0x3F	; 63
    3dc0:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    3dc2:	90 e0       	ldi	r25, 0x00	; 0
    3dc4:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    3dc6:	8f ef       	ldi	r24, 0xFF	; 255
    3dc8:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    3dca:	08 95       	ret

00003dcc <_Z14serialEventRunv>:
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    3dcc:	8b e3       	ldi	r24, 0x3B	; 59
    3dce:	90 e2       	ldi	r25, 0x20	; 32
    3dd0:	89 2b       	or	r24, r25
    3dd2:	49 f0       	breq	.+18     	; 0x3de6 <_Z14serialEventRunv+0x1a>
    3dd4:	80 e0       	ldi	r24, 0x00	; 0
    3dd6:	90 e0       	ldi	r25, 0x00	; 0
    3dd8:	89 2b       	or	r24, r25
    3dda:	29 f0       	breq	.+10     	; 0x3de6 <_Z14serialEventRunv+0x1a>
    3ddc:	0e 94 3b 20 	call	0x4076	; 0x4076 <_Z17Serial1_availablev>
    3de0:	81 11       	cpse	r24, r1
    3de2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3de6:	08 95       	ret

00003de8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3de8:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    3dea:	84 8d       	ldd	r24, Z+28	; 0x1c
    3dec:	df 01       	movw	r26, r30
    3dee:	a8 0f       	add	r26, r24
    3df0:	b1 1d       	adc	r27, r1
    3df2:	a3 5a       	subi	r26, 0xA3	; 163
    3df4:	bf 4f       	sbci	r27, 0xFF	; 255
    3df6:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    3df8:	84 8d       	ldd	r24, Z+28	; 0x1c
    3dfa:	90 e0       	ldi	r25, 0x00	; 0
    3dfc:	01 96       	adiw	r24, 0x01	; 1
    3dfe:	8f 73       	andi	r24, 0x3F	; 63
    3e00:	99 27       	eor	r25, r25
    3e02:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    3e04:	a6 89       	ldd	r26, Z+22	; 0x16
    3e06:	b7 89       	ldd	r27, Z+23	; 0x17
    3e08:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    3e0a:	a0 89       	ldd	r26, Z+16	; 0x10
    3e0c:	b1 89       	ldd	r27, Z+17	; 0x11
    3e0e:	8c 91       	ld	r24, X
    3e10:	80 64       	ori	r24, 0x40	; 64
    3e12:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    3e14:	93 8d       	ldd	r25, Z+27	; 0x1b
    3e16:	84 8d       	ldd	r24, Z+28	; 0x1c
    3e18:	98 13       	cpse	r25, r24
    3e1a:	06 c0       	rjmp	.+12     	; 0x3e28 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    3e1c:	02 88       	ldd	r0, Z+18	; 0x12
    3e1e:	f3 89       	ldd	r31, Z+19	; 0x13
    3e20:	e0 2d       	mov	r30, r0
    3e22:	80 81       	ld	r24, Z
    3e24:	8f 7d       	andi	r24, 0xDF	; 223
    3e26:	80 83       	st	Z, r24
    3e28:	08 95       	ret

00003e2a <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    3e2a:	ef 92       	push	r14
    3e2c:	ff 92       	push	r15
    3e2e:	0f 93       	push	r16
    3e30:	1f 93       	push	r17
    3e32:	cf 93       	push	r28
    3e34:	df 93       	push	r29
    3e36:	ec 01       	movw	r28, r24
  _written = true;
    3e38:	81 e0       	ldi	r24, 0x01	; 1
    3e3a:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    3e3c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e3e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3e40:	98 13       	cpse	r25, r24
    3e42:	05 c0       	rjmp	.+10     	; 0x3e4e <_ZN14HardwareSerial5writeEh+0x24>
    3e44:	e8 89       	ldd	r30, Y+16	; 0x10
    3e46:	f9 89       	ldd	r31, Y+17	; 0x11
    3e48:	80 81       	ld	r24, Z
    3e4a:	85 fd       	sbrc	r24, 5
    3e4c:	24 c0       	rjmp	.+72     	; 0x3e96 <_ZN14HardwareSerial5writeEh+0x6c>
    3e4e:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    3e50:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3e52:	10 e0       	ldi	r17, 0x00	; 0
    3e54:	0f 5f       	subi	r16, 0xFF	; 255
    3e56:	1f 4f       	sbci	r17, 0xFF	; 255
    3e58:	0f 73       	andi	r16, 0x3F	; 63
    3e5a:	11 27       	eor	r17, r17
    3e5c:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    3e5e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3e60:	e8 12       	cpse	r14, r24
    3e62:	0c c0       	rjmp	.+24     	; 0x3e7c <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    3e64:	0f b6       	in	r0, 0x3f	; 63
    3e66:	07 fc       	sbrc	r0, 7
    3e68:	fa cf       	rjmp	.-12     	; 0x3e5e <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    3e6a:	e8 89       	ldd	r30, Y+16	; 0x10
    3e6c:	f9 89       	ldd	r31, Y+17	; 0x11
    3e6e:	80 81       	ld	r24, Z
    3e70:	85 ff       	sbrs	r24, 5
    3e72:	f5 cf       	rjmp	.-22     	; 0x3e5e <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    3e74:	ce 01       	movw	r24, r28
    3e76:	0e 94 f4 1e 	call	0x3de8	; 0x3de8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3e7a:	f1 cf       	rjmp	.-30     	; 0x3e5e <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    3e7c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e7e:	fe 01       	movw	r30, r28
    3e80:	e8 0f       	add	r30, r24
    3e82:	f1 1d       	adc	r31, r1
    3e84:	e3 5a       	subi	r30, 0xA3	; 163
    3e86:	ff 4f       	sbci	r31, 0xFF	; 255
    3e88:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    3e8a:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    3e8c:	ea 89       	ldd	r30, Y+18	; 0x12
    3e8e:	fb 89       	ldd	r31, Y+19	; 0x13
    3e90:	80 81       	ld	r24, Z
    3e92:	80 62       	ori	r24, 0x20	; 32
    3e94:	07 c0       	rjmp	.+14     	; 0x3ea4 <_ZN14HardwareSerial5writeEh+0x7a>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    3e96:	ee 89       	ldd	r30, Y+22	; 0x16
    3e98:	ff 89       	ldd	r31, Y+23	; 0x17
    3e9a:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    3e9c:	e8 89       	ldd	r30, Y+16	; 0x10
    3e9e:	f9 89       	ldd	r31, Y+17	; 0x11
    3ea0:	80 81       	ld	r24, Z
    3ea2:	80 64       	ori	r24, 0x40	; 64
    3ea4:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    3ea6:	81 e0       	ldi	r24, 0x01	; 1
    3ea8:	90 e0       	ldi	r25, 0x00	; 0
    3eaa:	df 91       	pop	r29
    3eac:	cf 91       	pop	r28
    3eae:	1f 91       	pop	r17
    3eb0:	0f 91       	pop	r16
    3eb2:	ff 90       	pop	r15
    3eb4:	ef 90       	pop	r14
    3eb6:	08 95       	ret

00003eb8 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    3eb8:	cf 93       	push	r28
    3eba:	df 93       	push	r29
    3ebc:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    3ebe:	88 8d       	ldd	r24, Y+24	; 0x18
    3ec0:	88 23       	and	r24, r24
    3ec2:	c9 f0       	breq	.+50     	; 0x3ef6 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    3ec4:	ea 89       	ldd	r30, Y+18	; 0x12
    3ec6:	fb 89       	ldd	r31, Y+19	; 0x13
    3ec8:	80 81       	ld	r24, Z
    3eca:	85 fd       	sbrc	r24, 5
    3ecc:	05 c0       	rjmp	.+10     	; 0x3ed8 <_ZN14HardwareSerial5flushEv+0x20>
    3ece:	a8 89       	ldd	r26, Y+16	; 0x10
    3ed0:	b9 89       	ldd	r27, Y+17	; 0x11
    3ed2:	8c 91       	ld	r24, X
    3ed4:	86 fd       	sbrc	r24, 6
    3ed6:	0f c0       	rjmp	.+30     	; 0x3ef6 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3ed8:	0f b6       	in	r0, 0x3f	; 63
    3eda:	07 fc       	sbrc	r0, 7
    3edc:	f5 cf       	rjmp	.-22     	; 0x3ec8 <_ZN14HardwareSerial5flushEv+0x10>
    3ede:	80 81       	ld	r24, Z
    3ee0:	85 ff       	sbrs	r24, 5
    3ee2:	f2 cf       	rjmp	.-28     	; 0x3ec8 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    3ee4:	a8 89       	ldd	r26, Y+16	; 0x10
    3ee6:	b9 89       	ldd	r27, Y+17	; 0x11
    3ee8:	8c 91       	ld	r24, X
    3eea:	85 ff       	sbrs	r24, 5
    3eec:	ed cf       	rjmp	.-38     	; 0x3ec8 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    3eee:	ce 01       	movw	r24, r28
    3ef0:	0e 94 f4 1e 	call	0x3de8	; 0x3de8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3ef4:	e7 cf       	rjmp	.-50     	; 0x3ec4 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    3ef6:	df 91       	pop	r29
    3ef8:	cf 91       	pop	r28
    3efa:	08 95       	ret

00003efc <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    3efc:	cf 92       	push	r12
    3efe:	df 92       	push	r13
    3f00:	ef 92       	push	r14
    3f02:	ff 92       	push	r15
    3f04:	1f 93       	push	r17
    3f06:	cf 93       	push	r28
    3f08:	df 93       	push	r29
    3f0a:	ec 01       	movw	r28, r24
    3f0c:	6a 01       	movw	r12, r20
    3f0e:	7b 01       	movw	r14, r22
    3f10:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    3f12:	e8 89       	ldd	r30, Y+16	; 0x10
    3f14:	f9 89       	ldd	r31, Y+17	; 0x11
    3f16:	82 e0       	ldi	r24, 0x02	; 2
    3f18:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3f1a:	41 15       	cp	r20, r1
    3f1c:	51 4e       	sbci	r21, 0xE1	; 225
    3f1e:	61 05       	cpc	r22, r1
    3f20:	71 05       	cpc	r23, r1
    3f22:	b1 f0       	breq	.+44     	; 0x3f50 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    3f24:	60 e0       	ldi	r22, 0x00	; 0
    3f26:	79 e0       	ldi	r23, 0x09	; 9
    3f28:	8d e3       	ldi	r24, 0x3D	; 61
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	a7 01       	movw	r20, r14
    3f2e:	96 01       	movw	r18, r12
    3f30:	0e 94 70 2f 	call	0x5ee0	; 0x5ee0 <__udivmodsi4>
    3f34:	da 01       	movw	r26, r20
    3f36:	c9 01       	movw	r24, r18
    3f38:	01 97       	sbiw	r24, 0x01	; 1
    3f3a:	a1 09       	sbc	r26, r1
    3f3c:	b1 09       	sbc	r27, r1
    3f3e:	b6 95       	lsr	r27
    3f40:	a7 95       	ror	r26
    3f42:	97 95       	ror	r25
    3f44:	87 95       	ror	r24
    3f46:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3f48:	21 15       	cp	r18, r1
    3f4a:	80 e1       	ldi	r24, 0x10	; 16
    3f4c:	38 07       	cpc	r19, r24
    3f4e:	a8 f0       	brcs	.+42     	; 0x3f7a <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    3f50:	e8 89       	ldd	r30, Y+16	; 0x10
    3f52:	f9 89       	ldd	r31, Y+17	; 0x11
    3f54:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    3f56:	60 e8       	ldi	r22, 0x80	; 128
    3f58:	74 e8       	ldi	r23, 0x84	; 132
    3f5a:	8e e1       	ldi	r24, 0x1E	; 30
    3f5c:	90 e0       	ldi	r25, 0x00	; 0
    3f5e:	a7 01       	movw	r20, r14
    3f60:	96 01       	movw	r18, r12
    3f62:	0e 94 70 2f 	call	0x5ee0	; 0x5ee0 <__udivmodsi4>
    3f66:	da 01       	movw	r26, r20
    3f68:	c9 01       	movw	r24, r18
    3f6a:	01 97       	sbiw	r24, 0x01	; 1
    3f6c:	a1 09       	sbc	r26, r1
    3f6e:	b1 09       	sbc	r27, r1
    3f70:	b6 95       	lsr	r27
    3f72:	a7 95       	ror	r26
    3f74:	97 95       	ror	r25
    3f76:	87 95       	ror	r24
    3f78:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    3f7a:	ec 85       	ldd	r30, Y+12	; 0x0c
    3f7c:	fd 85       	ldd	r31, Y+13	; 0x0d
    3f7e:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    3f80:	ee 85       	ldd	r30, Y+14	; 0x0e
    3f82:	ff 85       	ldd	r31, Y+15	; 0x0f
    3f84:	20 83       	st	Z, r18

  _written = false;
    3f86:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    3f88:	ec 89       	ldd	r30, Y+20	; 0x14
    3f8a:	fd 89       	ldd	r31, Y+21	; 0x15
    3f8c:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    3f8e:	ea 89       	ldd	r30, Y+18	; 0x12
    3f90:	fb 89       	ldd	r31, Y+19	; 0x13
    3f92:	80 81       	ld	r24, Z
    3f94:	80 61       	ori	r24, 0x10	; 16
    3f96:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    3f98:	ea 89       	ldd	r30, Y+18	; 0x12
    3f9a:	fb 89       	ldd	r31, Y+19	; 0x13
    3f9c:	80 81       	ld	r24, Z
    3f9e:	88 60       	ori	r24, 0x08	; 8
    3fa0:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    3fa2:	ea 89       	ldd	r30, Y+18	; 0x12
    3fa4:	fb 89       	ldd	r31, Y+19	; 0x13
    3fa6:	80 81       	ld	r24, Z
    3fa8:	80 68       	ori	r24, 0x80	; 128
    3faa:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    3fac:	ea 89       	ldd	r30, Y+18	; 0x12
    3fae:	fb 89       	ldd	r31, Y+19	; 0x13
    3fb0:	80 81       	ld	r24, Z
    3fb2:	8f 7d       	andi	r24, 0xDF	; 223
    3fb4:	80 83       	st	Z, r24
}
    3fb6:	df 91       	pop	r29
    3fb8:	cf 91       	pop	r28
    3fba:	1f 91       	pop	r17
    3fbc:	ff 90       	pop	r15
    3fbe:	ef 90       	pop	r14
    3fc0:	df 90       	pop	r13
    3fc2:	cf 90       	pop	r12
    3fc4:	08 95       	ret

00003fc6 <__vector_25>:
#elif defined(USART1_RX_vect)
ISR(USART1_RX_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    3fc6:	1f 92       	push	r1
    3fc8:	0f 92       	push	r0
    3fca:	0f b6       	in	r0, 0x3f	; 63
    3fcc:	0f 92       	push	r0
    3fce:	11 24       	eor	r1, r1
    3fd0:	2f 93       	push	r18
    3fd2:	8f 93       	push	r24
    3fd4:	9f 93       	push	r25
    3fd6:	ef 93       	push	r30
    3fd8:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3fda:	e0 91 e1 03 	lds	r30, 0x03E1	; 0x8003e1 <Serial1+0x10>
    3fde:	f0 91 e2 03 	lds	r31, 0x03E2	; 0x8003e2 <Serial1+0x11>
    3fe2:	80 81       	ld	r24, Z
    3fe4:	e0 91 e7 03 	lds	r30, 0x03E7	; 0x8003e7 <Serial1+0x16>
    3fe8:	f0 91 e8 03 	lds	r31, 0x03E8	; 0x8003e8 <Serial1+0x17>
    3fec:	82 fd       	sbrc	r24, 2
    3fee:	12 c0       	rjmp	.+36     	; 0x4014 <__vector_25+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    3ff0:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3ff2:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <Serial1+0x19>
    3ff6:	8f 5f       	subi	r24, 0xFF	; 255
    3ff8:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    3ffa:	20 91 eb 03 	lds	r18, 0x03EB	; 0x8003eb <Serial1+0x1a>
    3ffe:	82 17       	cp	r24, r18
    4000:	51 f0       	breq	.+20     	; 0x4016 <__vector_25+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    4002:	e0 91 ea 03 	lds	r30, 0x03EA	; 0x8003ea <Serial1+0x19>
    4006:	f0 e0       	ldi	r31, 0x00	; 0
    4008:	ef 52       	subi	r30, 0x2F	; 47
    400a:	fc 4f       	sbci	r31, 0xFC	; 252
    400c:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    400e:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <Serial1+0x19>
    4012:	01 c0       	rjmp	.+2      	; 0x4016 <__vector_25+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    4014:	80 81       	ld	r24, Z
  Serial1._rx_complete_irq();
}
    4016:	ff 91       	pop	r31
    4018:	ef 91       	pop	r30
    401a:	9f 91       	pop	r25
    401c:	8f 91       	pop	r24
    401e:	2f 91       	pop	r18
    4020:	0f 90       	pop	r0
    4022:	0f be       	out	0x3f, r0	; 63
    4024:	0f 90       	pop	r0
    4026:	1f 90       	pop	r1
    4028:	18 95       	reti

0000402a <__vector_26>:
#elif defined(USART1_UDRE_vect)
ISR(USART1_UDRE_vect)
#else
#error "Don't know what the Data Register Empty vector is called for Serial1"
#endif
{
    402a:	1f 92       	push	r1
    402c:	0f 92       	push	r0
    402e:	0f b6       	in	r0, 0x3f	; 63
    4030:	0f 92       	push	r0
    4032:	11 24       	eor	r1, r1
    4034:	2f 93       	push	r18
    4036:	3f 93       	push	r19
    4038:	4f 93       	push	r20
    403a:	5f 93       	push	r21
    403c:	6f 93       	push	r22
    403e:	7f 93       	push	r23
    4040:	8f 93       	push	r24
    4042:	9f 93       	push	r25
    4044:	af 93       	push	r26
    4046:	bf 93       	push	r27
    4048:	ef 93       	push	r30
    404a:	ff 93       	push	r31
  Serial1._tx_udr_empty_irq();
    404c:	81 ed       	ldi	r24, 0xD1	; 209
    404e:	93 e0       	ldi	r25, 0x03	; 3
    4050:	0e 94 f4 1e 	call	0x3de8	; 0x3de8 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    4054:	ff 91       	pop	r31
    4056:	ef 91       	pop	r30
    4058:	bf 91       	pop	r27
    405a:	af 91       	pop	r26
    405c:	9f 91       	pop	r25
    405e:	8f 91       	pop	r24
    4060:	7f 91       	pop	r23
    4062:	6f 91       	pop	r22
    4064:	5f 91       	pop	r21
    4066:	4f 91       	pop	r20
    4068:	3f 91       	pop	r19
    406a:	2f 91       	pop	r18
    406c:	0f 90       	pop	r0
    406e:	0f be       	out	0x3f, r0	; 63
    4070:	0f 90       	pop	r0
    4072:	1f 90       	pop	r1
    4074:	18 95       	reti

00004076 <_Z17Serial1_availablev>:
HardwareSerial Serial1(&UBRR1H, &UBRR1L, &UCSR1A, &UCSR1B, &UCSR1C, &UDR1);

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
    4076:	81 ed       	ldi	r24, 0xD1	; 209
    4078:	93 e0       	ldi	r25, 0x03	; 3
    407a:	0e 94 b8 1e 	call	0x3d70	; 0x3d70 <_ZN14HardwareSerial9availableEv>
    407e:	21 e0       	ldi	r18, 0x01	; 1
    4080:	89 2b       	or	r24, r25
    4082:	09 f4       	brne	.+2      	; 0x4086 <_Z17Serial1_availablev+0x10>
    4084:	20 e0       	ldi	r18, 0x00	; 0
}
    4086:	82 2f       	mov	r24, r18
    4088:	08 95       	ret

0000408a <_GLOBAL__sub_I___vector_25>:
    408a:	e1 ed       	ldi	r30, 0xD1	; 209
    408c:	f3 e0       	ldi	r31, 0x03	; 3
    408e:	13 82       	std	Z+3, r1	; 0x03
    4090:	12 82       	std	Z+2, r1	; 0x02
    4092:	88 ee       	ldi	r24, 0xE8	; 232
    4094:	93 e0       	ldi	r25, 0x03	; 3
    4096:	a0 e0       	ldi	r26, 0x00	; 0
    4098:	b0 e0       	ldi	r27, 0x00	; 0
    409a:	84 83       	std	Z+4, r24	; 0x04
    409c:	95 83       	std	Z+5, r25	; 0x05
    409e:	a6 83       	std	Z+6, r26	; 0x06
    40a0:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    40a2:	8b e5       	ldi	r24, 0x5B	; 91
    40a4:	91 e0       	ldi	r25, 0x01	; 1
    40a6:	91 83       	std	Z+1, r25	; 0x01
    40a8:	80 83       	st	Z, r24
    40aa:	8d ec       	ldi	r24, 0xCD	; 205
    40ac:	90 e0       	ldi	r25, 0x00	; 0
    40ae:	95 87       	std	Z+13, r25	; 0x0d
    40b0:	84 87       	std	Z+12, r24	; 0x0c
    40b2:	8c ec       	ldi	r24, 0xCC	; 204
    40b4:	90 e0       	ldi	r25, 0x00	; 0
    40b6:	97 87       	std	Z+15, r25	; 0x0f
    40b8:	86 87       	std	Z+14, r24	; 0x0e
    40ba:	88 ec       	ldi	r24, 0xC8	; 200
    40bc:	90 e0       	ldi	r25, 0x00	; 0
    40be:	91 8b       	std	Z+17, r25	; 0x11
    40c0:	80 8b       	std	Z+16, r24	; 0x10
    40c2:	89 ec       	ldi	r24, 0xC9	; 201
    40c4:	90 e0       	ldi	r25, 0x00	; 0
    40c6:	93 8b       	std	Z+19, r25	; 0x13
    40c8:	82 8b       	std	Z+18, r24	; 0x12
    40ca:	8a ec       	ldi	r24, 0xCA	; 202
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	95 8b       	std	Z+21, r25	; 0x15
    40d0:	84 8b       	std	Z+20, r24	; 0x14
    40d2:	8e ec       	ldi	r24, 0xCE	; 206
    40d4:	90 e0       	ldi	r25, 0x00	; 0
    40d6:	97 8b       	std	Z+23, r25	; 0x17
    40d8:	86 8b       	std	Z+22, r24	; 0x16
    40da:	11 8e       	std	Z+25, r1	; 0x19
    40dc:	12 8e       	std	Z+26, r1	; 0x1a
    40de:	13 8e       	std	Z+27, r1	; 0x1b
    40e0:	14 8e       	std	Z+28, r1	; 0x1c
    40e2:	08 95       	ret

000040e4 <initVariant>:
    40e4:	08 95       	ret

000040e6 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    40e6:	0e 94 db 26 	call	0x4db6	; 0x4db6 <init>

	initVariant();
    40ea:	0e 94 72 20 	call	0x40e4	; 0x40e4 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
    40ee:	8e e6       	ldi	r24, 0x6E	; 110
    40f0:	94 e0       	ldi	r25, 0x04	; 4
    40f2:	0e 94 d3 24 	call	0x49a6	; 0x49a6 <_ZN10USBDevice_6attachEv>
#endif
	
	setup();
    40f6:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    40fa:	c6 ee       	ldi	r28, 0xE6	; 230
    40fc:	de e1       	ldi	r29, 0x1E	; 30
#endif
	
	setup();
    
	for (;;) {
		loop();
    40fe:	0e 94 6d 1a 	call	0x34da	; 0x34da <loop>
		if (serialEventRun) serialEventRun();
    4102:	20 97       	sbiw	r28, 0x00	; 0
    4104:	e1 f3       	breq	.-8      	; 0x40fe <main+0x18>
    4106:	0e 94 e6 1e 	call	0x3dcc	; 0x3dcc <_Z14serialEventRunv>
    410a:	f9 cf       	rjmp	.-14     	; 0x40fe <main+0x18>

0000410c <_ZN5Print5writeEPKhj>:

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
    410c:	cf 92       	push	r12
    410e:	df 92       	push	r13
    4110:	ef 92       	push	r14
    4112:	ff 92       	push	r15
    4114:	0f 93       	push	r16
    4116:	1f 93       	push	r17
    4118:	cf 93       	push	r28
    411a:	df 93       	push	r29
    411c:	6c 01       	movw	r12, r24
    411e:	7a 01       	movw	r14, r20
    4120:	8b 01       	movw	r16, r22
  size_t n = 0;
    4122:	c0 e0       	ldi	r28, 0x00	; 0
    4124:	d0 e0       	ldi	r29, 0x00	; 0
  while (size--) {
    4126:	ce 15       	cp	r28, r14
    4128:	df 05       	cpc	r29, r15
    412a:	81 f0       	breq	.+32     	; 0x414c <_ZN5Print5writeEPKhj+0x40>
    if (write(*buffer++)) n++;
    412c:	d8 01       	movw	r26, r16
    412e:	6d 91       	ld	r22, X+
    4130:	8d 01       	movw	r16, r26
    4132:	d6 01       	movw	r26, r12
    4134:	ed 91       	ld	r30, X+
    4136:	fc 91       	ld	r31, X
    4138:	01 90       	ld	r0, Z+
    413a:	f0 81       	ld	r31, Z
    413c:	e0 2d       	mov	r30, r0
    413e:	c6 01       	movw	r24, r12
    4140:	09 95       	icall
    4142:	89 2b       	or	r24, r25
    4144:	11 f0       	breq	.+4      	; 0x414a <_ZN5Print5writeEPKhj+0x3e>
    4146:	21 96       	adiw	r28, 0x01	; 1

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
  size_t n = 0;
  while (size--) {
    4148:	ee cf       	rjmp	.-36     	; 0x4126 <_ZN5Print5writeEPKhj+0x1a>
    414a:	7e 01       	movw	r14, r28
    if (write(*buffer++)) n++;
    else break;
  }
  return n;
}
    414c:	c7 01       	movw	r24, r14
    414e:	df 91       	pop	r29
    4150:	cf 91       	pop	r28
    4152:	1f 91       	pop	r17
    4154:	0f 91       	pop	r16
    4156:	ff 90       	pop	r15
    4158:	ef 90       	pop	r14
    415a:	df 90       	pop	r13
    415c:	cf 90       	pop	r12
    415e:	08 95       	ret

00004160 <_ZL4RecvPVhh>:
//=======================================================================
//=======================================================================

USBDevice_ USBDevice;

USBDevice_::USBDevice_()
    4160:	61 50       	subi	r22, 0x01	; 1
    4162:	30 f0       	brcs	.+12     	; 0x4170 <_ZL4RecvPVhh+0x10>
    4164:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    4168:	fc 01       	movw	r30, r24
    416a:	20 83       	st	Z, r18
    416c:	01 96       	adiw	r24, 0x01	; 1
    416e:	f8 cf       	rjmp	.-16     	; 0x4160 <_ZL4RecvPVhh>
    4170:	28 98       	cbi	0x05, 0	; 5
    4172:	84 e6       	ldi	r24, 0x64	; 100
    4174:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <RxLEDPulse>
    4178:	08 95       	ret

0000417a <_ZL11SendControlh>:
    417a:	40 91 72 04 	lds	r20, 0x0472	; 0x800472 <_ZL6_cmark>
    417e:	50 91 73 04 	lds	r21, 0x0473	; 0x800473 <_ZL6_cmark+0x1>
    4182:	20 91 70 04 	lds	r18, 0x0470	; 0x800470 <_ZL5_cend>
    4186:	30 91 71 04 	lds	r19, 0x0471	; 0x800471 <_ZL5_cend+0x1>
    418a:	42 17       	cp	r20, r18
    418c:	53 07       	cpc	r21, r19
    418e:	b4 f4       	brge	.+44     	; 0x41bc <_ZL11SendControlh+0x42>
    4190:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    4194:	95 70       	andi	r25, 0x05	; 5
    4196:	e1 f3       	breq	.-8      	; 0x4190 <_ZL11SendControlh+0x16>
    4198:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    419c:	92 fd       	sbrc	r25, 2
    419e:	19 c0       	rjmp	.+50     	; 0x41d2 <_ZL11SendControlh+0x58>
    41a0:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    41a4:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL6_cmark>
    41a8:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <_ZL6_cmark+0x1>
    41ac:	01 96       	adiw	r24, 0x01	; 1
    41ae:	8f 73       	andi	r24, 0x3F	; 63
    41b0:	99 27       	eor	r25, r25
    41b2:	89 2b       	or	r24, r25
    41b4:	19 f4       	brne	.+6      	; 0x41bc <_ZL11SendControlh+0x42>
    41b6:	8e ef       	ldi	r24, 0xFE	; 254
    41b8:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    41bc:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZL6_cmark>
    41c0:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <_ZL6_cmark+0x1>
    41c4:	01 96       	adiw	r24, 0x01	; 1
    41c6:	90 93 73 04 	sts	0x0473, r25	; 0x800473 <_ZL6_cmark+0x1>
    41ca:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <_ZL6_cmark>
    41ce:	81 e0       	ldi	r24, 0x01	; 1
    41d0:	08 95       	ret
    41d2:	80 e0       	ldi	r24, 0x00	; 0
    41d4:	08 95       	ret

000041d6 <_ZL24USB_SendStringDescriptorPKhhh>:
    41d6:	df 92       	push	r13
    41d8:	ef 92       	push	r14
    41da:	ff 92       	push	r15
    41dc:	0f 93       	push	r16
    41de:	1f 93       	push	r17
    41e0:	cf 93       	push	r28
    41e2:	df 93       	push	r29
    41e4:	d8 2e       	mov	r13, r24
    41e6:	f9 2e       	mov	r15, r25
    41e8:	e4 2e       	mov	r14, r20
    41ea:	06 2f       	mov	r16, r22
    41ec:	10 e0       	ldi	r17, 0x00	; 0
    41ee:	c8 01       	movw	r24, r16
    41f0:	01 96       	adiw	r24, 0x01	; 1
    41f2:	88 0f       	add	r24, r24
    41f4:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZL11SendControlh>
    41f8:	83 e0       	ldi	r24, 0x03	; 3
    41fa:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZL11SendControlh>
    41fe:	cd 2d       	mov	r28, r13
    4200:	df 2d       	mov	r29, r15
    4202:	0c 0f       	add	r16, r28
    4204:	1d 1f       	adc	r17, r29
    4206:	c0 17       	cp	r28, r16
    4208:	d1 07       	cpc	r29, r17
    420a:	89 f0       	breq	.+34     	; 0x422e <_ZL24USB_SendStringDescriptorPKhhh+0x58>
    420c:	e7 fe       	sbrs	r14, 7
    420e:	03 c0       	rjmp	.+6      	; 0x4216 <_ZL24USB_SendStringDescriptorPKhhh+0x40>
    4210:	fe 01       	movw	r30, r28
    4212:	84 91       	lpm	r24, Z
    4214:	01 c0       	rjmp	.+2      	; 0x4218 <_ZL24USB_SendStringDescriptorPKhhh+0x42>
    4216:	88 81       	ld	r24, Y
    4218:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZL11SendControlh>
    421c:	f8 2e       	mov	r15, r24
    421e:	80 e0       	ldi	r24, 0x00	; 0
    4220:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZL11SendControlh>
    4224:	8f 21       	and	r24, r15
    4226:	21 96       	adiw	r28, 0x01	; 1
    4228:	81 11       	cpse	r24, r1
    422a:	ed cf       	rjmp	.-38     	; 0x4206 <_ZL24USB_SendStringDescriptorPKhhh+0x30>
    422c:	01 c0       	rjmp	.+2      	; 0x4230 <_ZL24USB_SendStringDescriptorPKhhh+0x5a>
    422e:	81 e0       	ldi	r24, 0x01	; 1
    4230:	df 91       	pop	r29
    4232:	cf 91       	pop	r28
    4234:	1f 91       	pop	r17
    4236:	0f 91       	pop	r16
    4238:	ff 90       	pop	r15
    423a:	ef 90       	pop	r14
    423c:	df 90       	pop	r13
    423e:	08 95       	ret

00004240 <_ZL15USB_ClockEnablev>:
    4240:	80 91 d7 00 	lds	r24, 0x00D7	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
    4244:	81 60       	ori	r24, 0x01	; 1
    4246:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
    424a:	80 ea       	ldi	r24, 0xA0	; 160
    424c:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    4250:	89 b5       	in	r24, 0x29	; 41
    4252:	80 61       	ori	r24, 0x10	; 16
    4254:	89 bd       	out	0x29, r24	; 41
    4256:	89 b5       	in	r24, 0x29	; 41
    4258:	82 60       	ori	r24, 0x02	; 2
    425a:	89 bd       	out	0x29, r24	; 41
    425c:	09 b4       	in	r0, 0x29	; 41
    425e:	00 fe       	sbrs	r0, 0
    4260:	fd cf       	rjmp	.-6      	; 0x425c <_ZL15USB_ClockEnablev+0x1c>
    4262:	61 e0       	ldi	r22, 0x01	; 1
    4264:	70 e0       	ldi	r23, 0x00	; 0
    4266:	80 e0       	ldi	r24, 0x00	; 0
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    426e:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    4272:	8f 7c       	andi	r24, 0xCF	; 207
    4274:	80 61       	ori	r24, 0x10	; 16
    4276:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    427a:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    427e:	80 7f       	andi	r24, 0xF0	; 240
    4280:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    4284:	08 95       	ret

00004286 <_ZL14SendInterfacesv>:
    4286:	cf 93       	push	r28
    4288:	df 93       	push	r29
    428a:	1f 92       	push	r1
    428c:	cd b7       	in	r28, 0x3d	; 61
    428e:	de b7       	in	r29, 0x3e	; 62
    4290:	19 82       	std	Y+1, r1	; 0x01
    4292:	ce 01       	movw	r24, r28
    4294:	01 96       	adiw	r24, 0x01	; 1
    4296:	0e 94 10 1e 	call	0x3c20	; 0x3c20 <_Z16CDC_GetInterfacePh>
    429a:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <_Z12PluggableUSBv>
    429e:	be 01       	movw	r22, r28
    42a0:	6f 5f       	subi	r22, 0xFF	; 255
    42a2:	7f 4f       	sbci	r23, 0xFF	; 255
    42a4:	0e 94 a3 2e 	call	0x5d46	; 0x5d46 <_ZN13PluggableUSB_12getInterfaceEPh>
    42a8:	89 81       	ldd	r24, Y+1	; 0x01
    42aa:	0f 90       	pop	r0
    42ac:	df 91       	pop	r29
    42ae:	cf 91       	pop	r28
    42b0:	08 95       	ret

000042b2 <_ZN6LockEPC1Eh>:
    42b2:	2f b7       	in	r18, 0x3f	; 63
    42b4:	fc 01       	movw	r30, r24
    42b6:	20 83       	st	Z, r18
    42b8:	f8 94       	cli
    42ba:	67 70       	andi	r22, 0x07	; 7
    42bc:	60 93 e9 00 	sts	0x00E9, r22	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    42c0:	08 95       	ret

000042c2 <_Z13USB_Availableh>:
    42c2:	cf 93       	push	r28
    42c4:	df 93       	push	r29
    42c6:	1f 92       	push	r1
    42c8:	cd b7       	in	r28, 0x3d	; 61
    42ca:	de b7       	in	r29, 0x3e	; 62
    42cc:	68 2f       	mov	r22, r24
    42ce:	ce 01       	movw	r24, r28
    42d0:	01 96       	adiw	r24, 0x01	; 1
    42d2:	0e 94 59 21 	call	0x42b2	; 0x42b2 <_ZN6LockEPC1Eh>
    42d6:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    42da:	99 81       	ldd	r25, Y+1	; 0x01
    42dc:	9f bf       	out	0x3f, r25	; 63
    42de:	0f 90       	pop	r0
    42e0:	df 91       	pop	r29
    42e2:	cf 91       	pop	r28
    42e4:	08 95       	ret

000042e6 <_Z8USB_RecvhPvi>:
    42e6:	ef 92       	push	r14
    42e8:	ff 92       	push	r15
    42ea:	0f 93       	push	r16
    42ec:	1f 93       	push	r17
    42ee:	cf 93       	push	r28
    42f0:	df 93       	push	r29
    42f2:	1f 92       	push	r1
    42f4:	cd b7       	in	r28, 0x3d	; 61
    42f6:	de b7       	in	r29, 0x3e	; 62
    42f8:	90 91 76 04 	lds	r25, 0x0476	; 0x800476 <_usbConfiguration>
    42fc:	99 23       	and	r25, r25
    42fe:	11 f0       	breq	.+4      	; 0x4304 <_Z8USB_RecvhPvi+0x1e>
    4300:	57 ff       	sbrs	r21, 7
    4302:	03 c0       	rjmp	.+6      	; 0x430a <_Z8USB_RecvhPvi+0x24>
    4304:	8f ef       	ldi	r24, 0xFF	; 255
    4306:	9f ef       	ldi	r25, 0xFF	; 255
    4308:	29 c0       	rjmp	.+82     	; 0x435c <_Z8USB_RecvhPvi+0x76>
    430a:	8a 01       	movw	r16, r20
    430c:	7b 01       	movw	r14, r22
    430e:	68 2f       	mov	r22, r24
    4310:	ce 01       	movw	r24, r28
    4312:	01 96       	adiw	r24, 0x01	; 1
    4314:	0e 94 59 21 	call	0x42b2	; 0x42b2 <_ZN6LockEPC1Eh>
    4318:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    431c:	30 e0       	ldi	r19, 0x00	; 0
    431e:	02 17       	cp	r16, r18
    4320:	13 07       	cpc	r17, r19
    4322:	0c f4       	brge	.+2      	; 0x4326 <_Z8USB_RecvhPvi+0x40>
    4324:	98 01       	movw	r18, r16
    4326:	82 2f       	mov	r24, r18
    4328:	f7 01       	movw	r30, r14
    432a:	94 e6       	ldi	r25, 0x64	; 100
    432c:	81 50       	subi	r24, 0x01	; 1
    432e:	38 f0       	brcs	.+14     	; 0x433e <_Z8USB_RecvhPvi+0x58>
    4330:	28 98       	cbi	0x05, 0	; 5
    4332:	90 93 77 04 	sts	0x0477, r25	; 0x800477 <RxLEDPulse>
    4336:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    433a:	41 93       	st	Z+, r20
    433c:	f7 cf       	rjmp	.-18     	; 0x432c <_Z8USB_RecvhPvi+0x46>
    433e:	21 15       	cp	r18, r1
    4340:	31 05       	cpc	r19, r1
    4342:	21 f0       	breq	.+8      	; 0x434c <_Z8USB_RecvhPvi+0x66>
    4344:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    4348:	88 23       	and	r24, r24
    434a:	21 f0       	breq	.+8      	; 0x4354 <_Z8USB_RecvhPvi+0x6e>
    434c:	89 81       	ldd	r24, Y+1	; 0x01
    434e:	8f bf       	out	0x3f, r24	; 63
    4350:	c9 01       	movw	r24, r18
    4352:	04 c0       	rjmp	.+8      	; 0x435c <_Z8USB_RecvhPvi+0x76>
    4354:	8b e6       	ldi	r24, 0x6B	; 107
    4356:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    435a:	f8 cf       	rjmp	.-16     	; 0x434c <_Z8USB_RecvhPvi+0x66>
    435c:	0f 90       	pop	r0
    435e:	df 91       	pop	r29
    4360:	cf 91       	pop	r28
    4362:	1f 91       	pop	r17
    4364:	0f 91       	pop	r16
    4366:	ff 90       	pop	r15
    4368:	ef 90       	pop	r14
    436a:	08 95       	ret

0000436c <_Z8USB_Recvh>:
    436c:	cf 93       	push	r28
    436e:	df 93       	push	r29
    4370:	1f 92       	push	r1
    4372:	cd b7       	in	r28, 0x3d	; 61
    4374:	de b7       	in	r29, 0x3e	; 62
    4376:	41 e0       	ldi	r20, 0x01	; 1
    4378:	50 e0       	ldi	r21, 0x00	; 0
    437a:	be 01       	movw	r22, r28
    437c:	6f 5f       	subi	r22, 0xFF	; 255
    437e:	7f 4f       	sbci	r23, 0xFF	; 255
    4380:	0e 94 73 21 	call	0x42e6	; 0x42e6 <_Z8USB_RecvhPvi>
    4384:	01 97       	sbiw	r24, 0x01	; 1
    4386:	19 f4       	brne	.+6      	; 0x438e <_Z8USB_Recvh+0x22>
    4388:	89 81       	ldd	r24, Y+1	; 0x01
    438a:	90 e0       	ldi	r25, 0x00	; 0
    438c:	02 c0       	rjmp	.+4      	; 0x4392 <_Z8USB_Recvh+0x26>
    438e:	8f ef       	ldi	r24, 0xFF	; 255
    4390:	9f ef       	ldi	r25, 0xFF	; 255
    4392:	0f 90       	pop	r0
    4394:	df 91       	pop	r29
    4396:	cf 91       	pop	r28
    4398:	08 95       	ret

0000439a <_Z13USB_SendSpaceh>:
    439a:	cf 93       	push	r28
    439c:	df 93       	push	r29
    439e:	1f 92       	push	r1
    43a0:	cd b7       	in	r28, 0x3d	; 61
    43a2:	de b7       	in	r29, 0x3e	; 62
    43a4:	68 2f       	mov	r22, r24
    43a6:	ce 01       	movw	r24, r28
    43a8:	01 96       	adiw	r24, 0x01	; 1
    43aa:	0e 94 59 21 	call	0x42b2	; 0x42b2 <_ZN6LockEPC1Eh>
    43ae:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    43b2:	89 2f       	mov	r24, r25
    43b4:	80 72       	andi	r24, 0x20	; 32
    43b6:	95 ff       	sbrs	r25, 5
    43b8:	04 c0       	rjmp	.+8      	; 0x43c2 <_Z13USB_SendSpaceh+0x28>
    43ba:	90 91 f2 00 	lds	r25, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    43be:	8f e3       	ldi	r24, 0x3F	; 63
    43c0:	89 1b       	sub	r24, r25
    43c2:	99 81       	ldd	r25, Y+1	; 0x01
    43c4:	9f bf       	out	0x3f, r25	; 63
    43c6:	0f 90       	pop	r0
    43c8:	df 91       	pop	r29
    43ca:	cf 91       	pop	r28
    43cc:	08 95       	ret

000043ce <_Z8USB_SendhPKvi>:
    43ce:	6f 92       	push	r6
    43d0:	7f 92       	push	r7
    43d2:	8f 92       	push	r8
    43d4:	9f 92       	push	r9
    43d6:	af 92       	push	r10
    43d8:	bf 92       	push	r11
    43da:	cf 92       	push	r12
    43dc:	df 92       	push	r13
    43de:	ef 92       	push	r14
    43e0:	ff 92       	push	r15
    43e2:	0f 93       	push	r16
    43e4:	1f 93       	push	r17
    43e6:	cf 93       	push	r28
    43e8:	df 93       	push	r29
    43ea:	1f 92       	push	r1
    43ec:	cd b7       	in	r28, 0x3d	; 61
    43ee:	de b7       	in	r29, 0x3e	; 62
    43f0:	a8 2e       	mov	r10, r24
    43f2:	6b 01       	movw	r12, r22
    43f4:	b4 2e       	mov	r11, r20
    43f6:	05 2f       	mov	r16, r21
    43f8:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_usbConfiguration>
    43fc:	81 11       	cpse	r24, r1
    43fe:	03 c0       	rjmp	.+6      	; 0x4406 <_Z8USB_SendhPKvi+0x38>
    4400:	8f ef       	ldi	r24, 0xFF	; 255
    4402:	9f ef       	ldi	r25, 0xFF	; 255
    4404:	69 c0       	rjmp	.+210    	; 0x44d8 <_Z8USB_SendhPKvi+0x10a>
    4406:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_usbSuspendState>
    440a:	80 ff       	sbrs	r24, 0
    440c:	05 c0       	rjmp	.+10     	; 0x4418 <_Z8USB_SendhPKvi+0x4a>
    440e:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    4412:	82 60       	ori	r24, 0x02	; 2
    4414:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
    4418:	eb 2c       	mov	r14, r11
    441a:	f0 2e       	mov	r15, r16
    441c:	8a ef       	ldi	r24, 0xFA	; 250
    441e:	98 2e       	mov	r9, r24
    4420:	8a 2d       	mov	r24, r10
    4422:	80 72       	andi	r24, 0x20	; 32
    4424:	78 2e       	mov	r7, r24
    4426:	9a e3       	ldi	r25, 0x3A	; 58
    4428:	89 2e       	mov	r8, r25
    442a:	8a 2d       	mov	r24, r10
    442c:	80 74       	andi	r24, 0x40	; 64
    442e:	68 2e       	mov	r6, r24
    4430:	e1 14       	cp	r14, r1
    4432:	f1 04       	cpc	r15, r1
    4434:	09 f4       	brne	.+2      	; 0x4438 <_Z8USB_SendhPKvi+0x6a>
    4436:	46 c0       	rjmp	.+140    	; 0x44c4 <_Z8USB_SendhPKvi+0xf6>
    4438:	8a 2d       	mov	r24, r10
    443a:	0e 94 cd 21 	call	0x439a	; 0x439a <_Z13USB_SendSpaceh>
    443e:	18 2f       	mov	r17, r24
    4440:	81 11       	cpse	r24, r1
    4442:	0a c0       	rjmp	.+20     	; 0x4458 <_Z8USB_SendhPKvi+0x8a>
    4444:	9a 94       	dec	r9
    4446:	99 20       	and	r9, r9
    4448:	d9 f2       	breq	.-74     	; 0x4400 <_Z8USB_SendhPKvi+0x32>
    444a:	61 e0       	ldi	r22, 0x01	; 1
    444c:	70 e0       	ldi	r23, 0x00	; 0
    444e:	80 e0       	ldi	r24, 0x00	; 0
    4450:	90 e0       	ldi	r25, 0x00	; 0
    4452:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    4456:	ec cf       	rjmp	.-40     	; 0x4430 <_Z8USB_SendhPKvi+0x62>
    4458:	90 e0       	ldi	r25, 0x00	; 0
    445a:	e8 16       	cp	r14, r24
    445c:	f9 06       	cpc	r15, r25
    445e:	0c f4       	brge	.+2      	; 0x4462 <_Z8USB_SendhPKvi+0x94>
    4460:	1e 2d       	mov	r17, r14
    4462:	6a 2d       	mov	r22, r10
    4464:	ce 01       	movw	r24, r28
    4466:	01 96       	adiw	r24, 0x01	; 1
    4468:	0e 94 59 21 	call	0x42b2	; 0x42b2 <_ZN6LockEPC1Eh>
    446c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    4470:	85 ff       	sbrs	r24, 5
    4472:	25 c0       	rjmp	.+74     	; 0x44be <_Z8USB_SendhPKvi+0xf0>
    4474:	81 2f       	mov	r24, r17
    4476:	90 e0       	ldi	r25, 0x00	; 0
    4478:	e8 1a       	sub	r14, r24
    447a:	f9 0a       	sbc	r15, r25
    447c:	77 20       	and	r7, r7
    447e:	29 f0       	breq	.+10     	; 0x448a <_Z8USB_SendhPKvi+0xbc>
    4480:	11 50       	subi	r17, 0x01	; 1
    4482:	a0 f0       	brcs	.+40     	; 0x44ac <_Z8USB_SendhPKvi+0xde>
    4484:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    4488:	fb cf       	rjmp	.-10     	; 0x4480 <_Z8USB_SendhPKvi+0xb2>
    448a:	f6 01       	movw	r30, r12
    448c:	a7 fe       	sbrs	r10, 7
    448e:	0a c0       	rjmp	.+20     	; 0x44a4 <_Z8USB_SendhPKvi+0xd6>
    4490:	11 50       	subi	r17, 0x01	; 1
    4492:	50 f0       	brcs	.+20     	; 0x44a8 <_Z8USB_SendhPKvi+0xda>
    4494:	24 91       	lpm	r18, Z
    4496:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    449a:	31 96       	adiw	r30, 0x01	; 1
    449c:	f9 cf       	rjmp	.-14     	; 0x4490 <_Z8USB_SendhPKvi+0xc2>
    449e:	21 91       	ld	r18, Z+
    44a0:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    44a4:	11 50       	subi	r17, 0x01	; 1
    44a6:	d8 f7       	brcc	.-10     	; 0x449e <_Z8USB_SendhPKvi+0xd0>
    44a8:	c8 0e       	add	r12, r24
    44aa:	d9 1e       	adc	r13, r25
    44ac:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    44b0:	85 ff       	sbrs	r24, 5
    44b2:	0f c0       	rjmp	.+30     	; 0x44d2 <_Z8USB_SendhPKvi+0x104>
    44b4:	e1 14       	cp	r14, r1
    44b6:	f1 04       	cpc	r15, r1
    44b8:	11 f4       	brne	.+4      	; 0x44be <_Z8USB_SendhPKvi+0xf0>
    44ba:	61 10       	cpse	r6, r1
    44bc:	0a c0       	rjmp	.+20     	; 0x44d2 <_Z8USB_SendhPKvi+0x104>
    44be:	89 81       	ldd	r24, Y+1	; 0x01
    44c0:	8f bf       	out	0x3f, r24	; 63
    44c2:	b6 cf       	rjmp	.-148    	; 0x4430 <_Z8USB_SendhPKvi+0x62>
    44c4:	5d 98       	cbi	0x0b, 5	; 11
    44c6:	84 e6       	ldi	r24, 0x64	; 100
    44c8:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <TxLEDPulse>
    44cc:	8b 2d       	mov	r24, r11
    44ce:	90 2f       	mov	r25, r16
    44d0:	03 c0       	rjmp	.+6      	; 0x44d8 <_Z8USB_SendhPKvi+0x10a>
    44d2:	80 92 e8 00 	sts	0x00E8, r8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    44d6:	f3 cf       	rjmp	.-26     	; 0x44be <_Z8USB_SendhPKvi+0xf0>
    44d8:	0f 90       	pop	r0
    44da:	df 91       	pop	r29
    44dc:	cf 91       	pop	r28
    44de:	1f 91       	pop	r17
    44e0:	0f 91       	pop	r16
    44e2:	ff 90       	pop	r15
    44e4:	ef 90       	pop	r14
    44e6:	df 90       	pop	r13
    44e8:	cf 90       	pop	r12
    44ea:	bf 90       	pop	r11
    44ec:	af 90       	pop	r10
    44ee:	9f 90       	pop	r9
    44f0:	8f 90       	pop	r8
    44f2:	7f 90       	pop	r7
    44f4:	6f 90       	pop	r6
    44f6:	08 95       	ret

000044f8 <_Z11InitControli>:
    44f8:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    44fc:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <_ZL6_cmark+0x1>
    4500:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <_ZL6_cmark>
    4504:	90 93 71 04 	sts	0x0471, r25	; 0x800471 <_ZL5_cend+0x1>
    4508:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <_ZL5_cend>
    450c:	08 95       	ret

0000450e <_Z15USB_SendControlhPKvi>:
    450e:	df 92       	push	r13
    4510:	ef 92       	push	r14
    4512:	ff 92       	push	r15
    4514:	0f 93       	push	r16
    4516:	1f 93       	push	r17
    4518:	cf 93       	push	r28
    451a:	df 93       	push	r29
    451c:	d8 2e       	mov	r13, r24
    451e:	8a 01       	movw	r16, r20
    4520:	7b 01       	movw	r14, r22
    4522:	e4 0e       	add	r14, r20
    4524:	f5 1e       	adc	r15, r21
    4526:	eb 01       	movw	r28, r22
    4528:	ce 15       	cp	r28, r14
    452a:	df 05       	cpc	r29, r15
    452c:	71 f0       	breq	.+28     	; 0x454a <_Z15USB_SendControlhPKvi+0x3c>
    452e:	d7 fe       	sbrs	r13, 7
    4530:	03 c0       	rjmp	.+6      	; 0x4538 <_Z15USB_SendControlhPKvi+0x2a>
    4532:	fe 01       	movw	r30, r28
    4534:	84 91       	lpm	r24, Z
    4536:	01 c0       	rjmp	.+2      	; 0x453a <_Z15USB_SendControlhPKvi+0x2c>
    4538:	88 81       	ld	r24, Y
    453a:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZL11SendControlh>
    453e:	21 96       	adiw	r28, 0x01	; 1
    4540:	81 11       	cpse	r24, r1
    4542:	f2 cf       	rjmp	.-28     	; 0x4528 <_Z15USB_SendControlhPKvi+0x1a>
    4544:	8f ef       	ldi	r24, 0xFF	; 255
    4546:	9f ef       	ldi	r25, 0xFF	; 255
    4548:	01 c0       	rjmp	.+2      	; 0x454c <_Z15USB_SendControlhPKvi+0x3e>
    454a:	c8 01       	movw	r24, r16
    454c:	df 91       	pop	r29
    454e:	cf 91       	pop	r28
    4550:	1f 91       	pop	r17
    4552:	0f 91       	pop	r16
    4554:	ff 90       	pop	r15
    4556:	ef 90       	pop	r14
    4558:	df 90       	pop	r13
    455a:	08 95       	ret

0000455c <_Z15USB_RecvControlPvi>:
    455c:	af 92       	push	r10
    455e:	bf 92       	push	r11
    4560:	df 92       	push	r13
    4562:	ef 92       	push	r14
    4564:	ff 92       	push	r15
    4566:	0f 93       	push	r16
    4568:	1f 93       	push	r17
    456a:	cf 93       	push	r28
    456c:	df 93       	push	r29
    456e:	5c 01       	movw	r10, r24
    4570:	8b 01       	movw	r16, r22
    4572:	eb 01       	movw	r28, r22
    4574:	9b ef       	ldi	r25, 0xFB	; 251
    4576:	d9 2e       	mov	r13, r25
    4578:	20 97       	sbiw	r28, 0x00	; 0
    457a:	c1 f0       	breq	.+48     	; 0x45ac <_Z15USB_RecvControlPvi+0x50>
    457c:	7e 01       	movw	r14, r28
    457e:	c1 34       	cpi	r28, 0x41	; 65
    4580:	d1 05       	cpc	r29, r1
    4582:	1c f0       	brlt	.+6      	; 0x458a <_Z15USB_RecvControlPvi+0x2e>
    4584:	80 e4       	ldi	r24, 0x40	; 64
    4586:	e8 2e       	mov	r14, r24
    4588:	f1 2c       	mov	r15, r1
    458a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    458e:	82 ff       	sbrs	r24, 2
    4590:	fc cf       	rjmp	.-8      	; 0x458a <_Z15USB_RecvControlPvi+0x2e>
    4592:	c8 01       	movw	r24, r16
    4594:	8c 1b       	sub	r24, r28
    4596:	9d 0b       	sbc	r25, r29
    4598:	6e 2d       	mov	r22, r14
    459a:	8a 0d       	add	r24, r10
    459c:	9b 1d       	adc	r25, r11
    459e:	0e 94 b0 20 	call	0x4160	; 0x4160 <_ZL4RecvPVhh>
    45a2:	d0 92 e8 00 	sts	0x00E8, r13	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    45a6:	ce 19       	sub	r28, r14
    45a8:	df 09       	sbc	r29, r15
    45aa:	e6 cf       	rjmp	.-52     	; 0x4578 <_Z15USB_RecvControlPvi+0x1c>
    45ac:	c8 01       	movw	r24, r16
    45ae:	df 91       	pop	r29
    45b0:	cf 91       	pop	r28
    45b2:	1f 91       	pop	r17
    45b4:	0f 91       	pop	r16
    45b6:	ff 90       	pop	r15
    45b8:	ef 90       	pop	r14
    45ba:	df 90       	pop	r13
    45bc:	bf 90       	pop	r11
    45be:	af 90       	pop	r10
    45c0:	08 95       	ret

000045c2 <__vector_11>:
    45c2:	1f 92       	push	r1
    45c4:	0f 92       	push	r0
    45c6:	0f b6       	in	r0, 0x3f	; 63
    45c8:	0f 92       	push	r0
    45ca:	11 24       	eor	r1, r1
    45cc:	cf 92       	push	r12
    45ce:	df 92       	push	r13
    45d0:	ef 92       	push	r14
    45d2:	ff 92       	push	r15
    45d4:	0f 93       	push	r16
    45d6:	1f 93       	push	r17
    45d8:	2f 93       	push	r18
    45da:	3f 93       	push	r19
    45dc:	4f 93       	push	r20
    45de:	5f 93       	push	r21
    45e0:	6f 93       	push	r22
    45e2:	7f 93       	push	r23
    45e4:	8f 93       	push	r24
    45e6:	9f 93       	push	r25
    45e8:	af 93       	push	r26
    45ea:	bf 93       	push	r27
    45ec:	ef 93       	push	r30
    45ee:	ff 93       	push	r31
    45f0:	cf 93       	push	r28
    45f2:	df 93       	push	r29
    45f4:	cd b7       	in	r28, 0x3d	; 61
    45f6:	de b7       	in	r29, 0x3e	; 62
    45f8:	6c 97       	sbiw	r28, 0x1c	; 28
    45fa:	de bf       	out	0x3e, r29	; 62
    45fc:	cd bf       	out	0x3d, r28	; 61
    45fe:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    4602:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    4606:	83 ff       	sbrs	r24, 3
    4608:	24 c1       	rjmp	.+584    	; 0x4852 <__vector_11+0x290>
    460a:	68 e0       	ldi	r22, 0x08	; 8
    460c:	ce 01       	movw	r24, r28
    460e:	45 96       	adiw	r24, 0x15	; 21
    4610:	0e 94 b0 20 	call	0x4160	; 0x4160 <_ZL4RecvPVhh>
    4614:	82 ef       	ldi	r24, 0xF2	; 242
    4616:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    461a:	8d 89       	ldd	r24, Y+21	; 0x15
    461c:	87 ff       	sbrs	r24, 7
    461e:	05 c0       	rjmp	.+10     	; 0x462a <__vector_11+0x68>
    4620:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    4624:	90 ff       	sbrs	r25, 0
    4626:	fc cf       	rjmp	.-8      	; 0x4620 <__vector_11+0x5e>
    4628:	03 c0       	rjmp	.+6      	; 0x4630 <__vector_11+0x6e>
    462a:	9e ef       	ldi	r25, 0xFE	; 254
    462c:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    4630:	98 2f       	mov	r25, r24
    4632:	90 76       	andi	r25, 0x60	; 96
    4634:	09 f0       	breq	.+2      	; 0x4638 <__vector_11+0x76>
    4636:	e5 c0       	rjmp	.+458    	; 0x4802 <__vector_11+0x240>
    4638:	9e 89       	ldd	r25, Y+22	; 0x16
    463a:	4f 89       	ldd	r20, Y+23	; 0x17
    463c:	58 8d       	ldd	r21, Y+24	; 0x18
    463e:	2f 89       	ldd	r18, Y+23	; 0x17
    4640:	18 8d       	ldd	r17, Y+24	; 0x18
    4642:	91 11       	cpse	r25, r1
    4644:	0c c0       	rjmp	.+24     	; 0x465e <__vector_11+0x9c>
    4646:	80 38       	cpi	r24, 0x80	; 128
    4648:	29 f4       	brne	.+10     	; 0x4654 <__vector_11+0x92>
    464a:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_usbCurrentStatus>
    464e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    4652:	02 c0       	rjmp	.+4      	; 0x4658 <__vector_11+0x96>
    4654:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    4658:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    465c:	f3 c0       	rjmp	.+486    	; 0x4844 <__vector_11+0x282>
    465e:	91 30       	cpi	r25, 0x01	; 1
    4660:	51 f4       	brne	.+20     	; 0x4676 <__vector_11+0xb4>
    4662:	81 11       	cpse	r24, r1
    4664:	ef c0       	rjmp	.+478    	; 0x4844 <__vector_11+0x282>
    4666:	41 30       	cpi	r20, 0x01	; 1
    4668:	51 05       	cpc	r21, r1
    466a:	09 f0       	breq	.+2      	; 0x466e <__vector_11+0xac>
    466c:	eb c0       	rjmp	.+470    	; 0x4844 <__vector_11+0x282>
    466e:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_usbCurrentStatus>
    4672:	8d 7f       	andi	r24, 0xFD	; 253
    4674:	0b c0       	rjmp	.+22     	; 0x468c <__vector_11+0xca>
    4676:	93 30       	cpi	r25, 0x03	; 3
    4678:	61 f4       	brne	.+24     	; 0x4692 <__vector_11+0xd0>
    467a:	81 11       	cpse	r24, r1
    467c:	e3 c0       	rjmp	.+454    	; 0x4844 <__vector_11+0x282>
    467e:	41 30       	cpi	r20, 0x01	; 1
    4680:	51 05       	cpc	r21, r1
    4682:	09 f0       	breq	.+2      	; 0x4686 <__vector_11+0xc4>
    4684:	df c0       	rjmp	.+446    	; 0x4844 <__vector_11+0x282>
    4686:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_usbCurrentStatus>
    468a:	82 60       	ori	r24, 0x02	; 2
    468c:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <_usbCurrentStatus>
    4690:	d9 c0       	rjmp	.+434    	; 0x4844 <__vector_11+0x282>
    4692:	95 30       	cpi	r25, 0x05	; 5
    4694:	49 f4       	brne	.+18     	; 0x46a8 <__vector_11+0xe6>
    4696:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    469a:	80 ff       	sbrs	r24, 0
    469c:	fc cf       	rjmp	.-8      	; 0x4696 <__vector_11+0xd4>
    469e:	82 2f       	mov	r24, r18
    46a0:	80 68       	ori	r24, 0x80	; 128
    46a2:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    46a6:	ce c0       	rjmp	.+412    	; 0x4844 <__vector_11+0x282>
    46a8:	96 30       	cpi	r25, 0x06	; 6
    46aa:	09 f0       	breq	.+2      	; 0x46ae <__vector_11+0xec>
    46ac:	7d c0       	rjmp	.+250    	; 0x47a8 <__vector_11+0x1e6>
    46ae:	eb 8c       	ldd	r14, Y+27	; 0x1b
    46b0:	fc 8c       	ldd	r15, Y+28	; 0x1c
    46b2:	12 30       	cpi	r17, 0x02	; 2
    46b4:	69 f5       	brne	.+90     	; 0x4710 <__vector_11+0x14e>
    46b6:	80 e0       	ldi	r24, 0x00	; 0
    46b8:	90 e0       	ldi	r25, 0x00	; 0
    46ba:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <_Z11InitControli>
    46be:	0e 94 43 21 	call	0x4286	; 0x4286 <_ZL14SendInterfacesv>
    46c2:	99 e0       	ldi	r25, 0x09	; 9
    46c4:	9e 01       	movw	r18, r28
    46c6:	2f 5f       	subi	r18, 0xFF	; 255
    46c8:	3f 4f       	sbci	r19, 0xFF	; 255
    46ca:	69 01       	movw	r12, r18
    46cc:	f9 01       	movw	r30, r18
    46ce:	29 2f       	mov	r18, r25
    46d0:	11 92       	st	Z+, r1
    46d2:	2a 95       	dec	r18
    46d4:	e9 f7       	brne	.-6      	; 0x46d0 <__vector_11+0x10e>
    46d6:	99 83       	std	Y+1, r25	; 0x01
    46d8:	1a 83       	std	Y+2, r17	; 0x02
    46da:	91 e0       	ldi	r25, 0x01	; 1
    46dc:	9e 83       	std	Y+6, r25	; 0x06
    46de:	90 ea       	ldi	r25, 0xA0	; 160
    46e0:	98 87       	std	Y+8, r25	; 0x08
    46e2:	9a ef       	ldi	r25, 0xFA	; 250
    46e4:	99 87       	std	Y+9, r25	; 0x09
    46e6:	20 91 72 04 	lds	r18, 0x0472	; 0x800472 <_ZL6_cmark>
    46ea:	30 91 73 04 	lds	r19, 0x0473	; 0x800473 <_ZL6_cmark+0x1>
    46ee:	27 5f       	subi	r18, 0xF7	; 247
    46f0:	3f 4f       	sbci	r19, 0xFF	; 255
    46f2:	3c 83       	std	Y+4, r19	; 0x04
    46f4:	2b 83       	std	Y+3, r18	; 0x03
    46f6:	8d 83       	std	Y+5, r24	; 0x05
    46f8:	c7 01       	movw	r24, r14
    46fa:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <_Z11InitControli>
    46fe:	49 e0       	ldi	r20, 0x09	; 9
    4700:	50 e0       	ldi	r21, 0x00	; 0
    4702:	b6 01       	movw	r22, r12
    4704:	80 e0       	ldi	r24, 0x00	; 0
    4706:	0e 94 87 22 	call	0x450e	; 0x450e <_Z15USB_SendControlhPKvi>
    470a:	0e 94 43 21 	call	0x4286	; 0x4286 <_ZL14SendInterfacesv>
    470e:	9a c0       	rjmp	.+308    	; 0x4844 <__vector_11+0x282>
    4710:	c7 01       	movw	r24, r14
    4712:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <_Z11InitControli>
    4716:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <_Z12PluggableUSBv>
    471a:	be 01       	movw	r22, r28
    471c:	6b 5e       	subi	r22, 0xEB	; 235
    471e:	7f 4f       	sbci	r23, 0xFF	; 255
    4720:	0e 94 cc 2e 	call	0x5d98	; 0x5d98 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>
    4724:	00 97       	sbiw	r24, 0x00	; 0
    4726:	19 f0       	breq	.+6      	; 0x472e <__vector_11+0x16c>
    4728:	0c f0       	brlt	.+2      	; 0x472c <__vector_11+0x16a>
    472a:	8c c0       	rjmp	.+280    	; 0x4844 <__vector_11+0x282>
    472c:	8f c0       	rjmp	.+286    	; 0x484c <__vector_11+0x28a>
    472e:	11 30       	cpi	r17, 0x01	; 1
    4730:	71 f4       	brne	.+28     	; 0x474e <__vector_11+0x18c>
    4732:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4734:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4736:	08 97       	sbiw	r24, 0x08	; 8
    4738:	19 f4       	brne	.+6      	; 0x4740 <__vector_11+0x17e>
    473a:	81 e0       	ldi	r24, 0x01	; 1
    473c:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <_ZL13_cdcComposite>
    4740:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZL13_cdcComposite>
    4744:	81 11       	cpse	r24, r1
    4746:	73 c0       	rjmp	.+230    	; 0x482e <__vector_11+0x26c>
    4748:	63 e1       	ldi	r22, 0x13	; 19
    474a:	74 e0       	ldi	r23, 0x04	; 4
    474c:	75 c0       	rjmp	.+234    	; 0x4838 <__vector_11+0x276>
    474e:	13 30       	cpi	r17, 0x03	; 3
    4750:	09 f0       	breq	.+2      	; 0x4754 <__vector_11+0x192>
    4752:	7c c0       	rjmp	.+248    	; 0x484c <__vector_11+0x28a>
    4754:	8f 89       	ldd	r24, Y+23	; 0x17
    4756:	88 23       	and	r24, r24
    4758:	09 f4       	brne	.+2      	; 0x475c <__vector_11+0x19a>
    475a:	6c c0       	rjmp	.+216    	; 0x4834 <__vector_11+0x272>
    475c:	82 30       	cpi	r24, 0x02	; 2
    475e:	29 f4       	brne	.+10     	; 0x476a <__vector_11+0x1a8>
    4760:	40 e8       	ldi	r20, 0x80	; 128
    4762:	60 e1       	ldi	r22, 0x10	; 16
    4764:	81 e3       	ldi	r24, 0x31	; 49
    4766:	94 e0       	ldi	r25, 0x04	; 4
    4768:	06 c0       	rjmp	.+12     	; 0x4776 <__vector_11+0x1b4>
    476a:	81 30       	cpi	r24, 0x01	; 1
    476c:	39 f4       	brne	.+14     	; 0x477c <__vector_11+0x1ba>
    476e:	40 e8       	ldi	r20, 0x80	; 128
    4770:	6b e0       	ldi	r22, 0x0B	; 11
    4772:	85 e2       	ldi	r24, 0x25	; 37
    4774:	94 e0       	ldi	r25, 0x04	; 4
    4776:	0e 94 eb 20 	call	0x41d6	; 0x41d6 <_ZL24USB_SendStringDescriptorPKhhh>
    477a:	56 c0       	rjmp	.+172    	; 0x4828 <__vector_11+0x266>
    477c:	83 30       	cpi	r24, 0x03	; 3
    477e:	09 f0       	breq	.+2      	; 0x4782 <__vector_11+0x1c0>
    4780:	65 c0       	rjmp	.+202    	; 0x484c <__vector_11+0x28a>
    4782:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <_Z12PluggableUSBv>
    4786:	8e 01       	movw	r16, r28
    4788:	0f 5f       	subi	r16, 0xFF	; 255
    478a:	1f 4f       	sbci	r17, 0xFF	; 255
    478c:	b8 01       	movw	r22, r16
    478e:	0e 94 eb 2e 	call	0x5dd6	; 0x5dd6 <_ZN13PluggableUSB_12getShortNameEPc>
    4792:	f8 01       	movw	r30, r16
    4794:	01 90       	ld	r0, Z+
    4796:	00 20       	and	r0, r0
    4798:	e9 f7       	brne	.-6      	; 0x4794 <__vector_11+0x1d2>
    479a:	31 97       	sbiw	r30, 0x01	; 1
    479c:	bf 01       	movw	r22, r30
    479e:	60 1b       	sub	r22, r16
    47a0:	71 0b       	sbc	r23, r17
    47a2:	40 e0       	ldi	r20, 0x00	; 0
    47a4:	c8 01       	movw	r24, r16
    47a6:	e7 cf       	rjmp	.-50     	; 0x4776 <__vector_11+0x1b4>
    47a8:	97 30       	cpi	r25, 0x07	; 7
    47aa:	09 f4       	brne	.+2      	; 0x47ae <__vector_11+0x1ec>
    47ac:	4f c0       	rjmp	.+158    	; 0x484c <__vector_11+0x28a>
    47ae:	98 30       	cpi	r25, 0x08	; 8
    47b0:	21 f4       	brne	.+8      	; 0x47ba <__vector_11+0x1f8>
    47b2:	81 e0       	ldi	r24, 0x01	; 1
    47b4:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    47b8:	45 c0       	rjmp	.+138    	; 0x4844 <__vector_11+0x282>
    47ba:	99 30       	cpi	r25, 0x09	; 9
    47bc:	09 f0       	breq	.+2      	; 0x47c0 <__vector_11+0x1fe>
    47be:	42 c0       	rjmp	.+132    	; 0x4844 <__vector_11+0x282>
    47c0:	83 70       	andi	r24, 0x03	; 3
    47c2:	09 f0       	breq	.+2      	; 0x47c6 <__vector_11+0x204>
    47c4:	43 c0       	rjmp	.+134    	; 0x484c <__vector_11+0x28a>
    47c6:	ef e0       	ldi	r30, 0x0F	; 15
    47c8:	f1 e0       	ldi	r31, 0x01	; 1
    47ca:	81 e0       	ldi	r24, 0x01	; 1
    47cc:	31 e0       	ldi	r19, 0x01	; 1
    47ce:	96 e3       	ldi	r25, 0x36	; 54
    47d0:	20 81       	ld	r18, Z
    47d2:	21 11       	cpse	r18, r1
    47d4:	09 c0       	rjmp	.+18     	; 0x47e8 <__vector_11+0x226>
    47d6:	8e e7       	ldi	r24, 0x7E	; 126
    47d8:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
    47dc:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
    47e0:	8f 89       	ldd	r24, Y+23	; 0x17
    47e2:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_usbConfiguration>
    47e6:	2e c0       	rjmp	.+92     	; 0x4844 <__vector_11+0x282>
    47e8:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    47ec:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    47f0:	21 91       	ld	r18, Z+
    47f2:	20 93 ec 00 	sts	0x00EC, r18	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    47f6:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    47fa:	8f 5f       	subi	r24, 0xFF	; 255
    47fc:	87 30       	cpi	r24, 0x07	; 7
    47fe:	41 f7       	brne	.-48     	; 0x47d0 <__vector_11+0x20e>
    4800:	ea cf       	rjmp	.-44     	; 0x47d6 <__vector_11+0x214>
    4802:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4804:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4806:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <_Z11InitControli>
    480a:	89 8d       	ldd	r24, Y+25	; 0x19
    480c:	81 11       	cpse	r24, r1
    480e:	05 c0       	rjmp	.+10     	; 0x481a <__vector_11+0x258>
    4810:	ce 01       	movw	r24, r28
    4812:	45 96       	adiw	r24, 0x15	; 21
    4814:	0e 94 1b 1e 	call	0x3c36	; 0x3c36 <_Z9CDC_SetupR8USBSetup>
    4818:	07 c0       	rjmp	.+14     	; 0x4828 <__vector_11+0x266>
    481a:	0e 94 28 2f 	call	0x5e50	; 0x5e50 <_Z12PluggableUSBv>
    481e:	be 01       	movw	r22, r28
    4820:	6b 5e       	subi	r22, 0xEB	; 235
    4822:	7f 4f       	sbci	r23, 0xFF	; 255
    4824:	0e 94 0a 2f 	call	0x5e14	; 0x5e14 <_ZN13PluggableUSB_5setupER8USBSetup>
    4828:	88 23       	and	r24, r24
    482a:	81 f0       	breq	.+32     	; 0x484c <__vector_11+0x28a>
    482c:	0b c0       	rjmp	.+22     	; 0x4844 <__vector_11+0x282>
    482e:	61 e0       	ldi	r22, 0x01	; 1
    4830:	74 e0       	ldi	r23, 0x04	; 4
    4832:	02 c0       	rjmp	.+4      	; 0x4838 <__vector_11+0x276>
    4834:	62 e4       	ldi	r22, 0x42	; 66
    4836:	74 e0       	ldi	r23, 0x04	; 4
    4838:	fb 01       	movw	r30, r22
    483a:	44 91       	lpm	r20, Z
    483c:	50 e0       	ldi	r21, 0x00	; 0
    483e:	80 e8       	ldi	r24, 0x80	; 128
    4840:	0e 94 87 22 	call	0x450e	; 0x450e <_Z15USB_SendControlhPKvi>
    4844:	8e ef       	ldi	r24, 0xFE	; 254
    4846:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    484a:	03 c0       	rjmp	.+6      	; 0x4852 <__vector_11+0x290>
    484c:	81 e2       	ldi	r24, 0x21	; 33
    484e:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    4852:	6c 96       	adiw	r28, 0x1c	; 28
    4854:	0f b6       	in	r0, 0x3f	; 63
    4856:	f8 94       	cli
    4858:	de bf       	out	0x3e, r29	; 62
    485a:	0f be       	out	0x3f, r0	; 63
    485c:	cd bf       	out	0x3d, r28	; 61
    485e:	df 91       	pop	r29
    4860:	cf 91       	pop	r28
    4862:	ff 91       	pop	r31
    4864:	ef 91       	pop	r30
    4866:	bf 91       	pop	r27
    4868:	af 91       	pop	r26
    486a:	9f 91       	pop	r25
    486c:	8f 91       	pop	r24
    486e:	7f 91       	pop	r23
    4870:	6f 91       	pop	r22
    4872:	5f 91       	pop	r21
    4874:	4f 91       	pop	r20
    4876:	3f 91       	pop	r19
    4878:	2f 91       	pop	r18
    487a:	1f 91       	pop	r17
    487c:	0f 91       	pop	r16
    487e:	ff 90       	pop	r15
    4880:	ef 90       	pop	r14
    4882:	df 90       	pop	r13
    4884:	cf 90       	pop	r12
    4886:	0f 90       	pop	r0
    4888:	0f be       	out	0x3f, r0	; 63
    488a:	0f 90       	pop	r0
    488c:	1f 90       	pop	r1
    488e:	18 95       	reti

00004890 <_Z9USB_Flushh>:
    4890:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    4894:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    4898:	88 23       	and	r24, r24
    489a:	19 f0       	breq	.+6      	; 0x48a2 <_Z9USB_Flushh+0x12>
    489c:	8a e3       	ldi	r24, 0x3A	; 58
    489e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    48a2:	08 95       	ret

000048a4 <__vector_10>:
    48a4:	1f 92       	push	r1
    48a6:	0f 92       	push	r0
    48a8:	0f b6       	in	r0, 0x3f	; 63
    48aa:	0f 92       	push	r0
    48ac:	11 24       	eor	r1, r1
    48ae:	2f 93       	push	r18
    48b0:	3f 93       	push	r19
    48b2:	4f 93       	push	r20
    48b4:	5f 93       	push	r21
    48b6:	6f 93       	push	r22
    48b8:	7f 93       	push	r23
    48ba:	8f 93       	push	r24
    48bc:	9f 93       	push	r25
    48be:	af 93       	push	r26
    48c0:	bf 93       	push	r27
    48c2:	cf 93       	push	r28
    48c4:	ef 93       	push	r30
    48c6:	ff 93       	push	r31
    48c8:	c0 91 e1 00 	lds	r28, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    48cc:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    48d0:	83 7f       	andi	r24, 0xF3	; 243
    48d2:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    48d6:	c3 ff       	sbrs	r28, 3
    48d8:	0f c0       	rjmp	.+30     	; 0x48f8 <__vector_10+0x54>
    48da:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    48de:	81 e0       	ldi	r24, 0x01	; 1
    48e0:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    48e4:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    48e8:	82 e3       	ldi	r24, 0x32	; 50
    48ea:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    48ee:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <_usbConfiguration>
    48f2:	88 e0       	ldi	r24, 0x08	; 8
    48f4:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    48f8:	c2 ff       	sbrs	r28, 2
    48fa:	19 c0       	rjmp	.+50     	; 0x492e <__vector_10+0x8a>
    48fc:	83 e0       	ldi	r24, 0x03	; 3
    48fe:	0e 94 48 24 	call	0x4890	; 0x4890 <_Z9USB_Flushh>
    4902:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <TxLEDPulse>
    4906:	88 23       	and	r24, r24
    4908:	39 f0       	breq	.+14     	; 0x4918 <__vector_10+0x74>
    490a:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <TxLEDPulse>
    490e:	81 50       	subi	r24, 0x01	; 1
    4910:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <TxLEDPulse>
    4914:	88 23       	and	r24, r24
    4916:	89 f1       	breq	.+98     	; 0x497a <__vector_10+0xd6>
    4918:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <RxLEDPulse>
    491c:	88 23       	and	r24, r24
    491e:	39 f0       	breq	.+14     	; 0x492e <__vector_10+0x8a>
    4920:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <RxLEDPulse>
    4924:	81 50       	subi	r24, 0x01	; 1
    4926:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <RxLEDPulse>
    492a:	88 23       	and	r24, r24
    492c:	41 f1       	breq	.+80     	; 0x497e <__vector_10+0xda>
    492e:	c4 ff       	sbrs	r28, 4
    4930:	10 c0       	rjmp	.+32     	; 0x4952 <__vector_10+0xae>
    4932:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    4936:	8e 7e       	andi	r24, 0xEE	; 238
    4938:	81 60       	ori	r24, 0x01	; 1
    493a:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    493e:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    4942:	8f 7e       	andi	r24, 0xEF	; 239
    4944:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    4948:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_usbSuspendState>
    494c:	8e 7e       	andi	r24, 0xEE	; 238
    494e:	80 61       	ori	r24, 0x10	; 16
    4950:	11 c0       	rjmp	.+34     	; 0x4974 <__vector_10+0xd0>
    4952:	c0 ff       	sbrs	r28, 0
    4954:	16 c0       	rjmp	.+44     	; 0x4982 <__vector_10+0xde>
    4956:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    495a:	8e 7e       	andi	r24, 0xEE	; 238
    495c:	80 61       	ori	r24, 0x10	; 16
    495e:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    4962:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    4966:	8e 7e       	andi	r24, 0xEE	; 238
    4968:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    496c:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_usbSuspendState>
    4970:	8e 7e       	andi	r24, 0xEE	; 238
    4972:	81 60       	ori	r24, 0x01	; 1
    4974:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <_usbSuspendState>
    4978:	04 c0       	rjmp	.+8      	; 0x4982 <__vector_10+0xde>
    497a:	5d 9a       	sbi	0x0b, 5	; 11
    497c:	cd cf       	rjmp	.-102    	; 0x4918 <__vector_10+0x74>
    497e:	28 9a       	sbi	0x05, 0	; 5
    4980:	d6 cf       	rjmp	.-84     	; 0x492e <__vector_10+0x8a>
    4982:	ff 91       	pop	r31
    4984:	ef 91       	pop	r30
    4986:	cf 91       	pop	r28
    4988:	bf 91       	pop	r27
    498a:	af 91       	pop	r26
    498c:	9f 91       	pop	r25
    498e:	8f 91       	pop	r24
    4990:	7f 91       	pop	r23
    4992:	6f 91       	pop	r22
    4994:	5f 91       	pop	r21
    4996:	4f 91       	pop	r20
    4998:	3f 91       	pop	r19
    499a:	2f 91       	pop	r18
    499c:	0f 90       	pop	r0
    499e:	0f be       	out	0x3f, r0	; 63
    49a0:	0f 90       	pop	r0
    49a2:	1f 90       	pop	r1
    49a4:	18 95       	reti

000049a6 <_ZN10USBDevice_6attachEv>:
{
}

void USBDevice_::attach()
{
	_usbConfiguration = 0;
    49a6:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <_usbConfiguration>
	_usbCurrentStatus = 0;
    49aa:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <_usbCurrentStatus>
	_usbSuspendState = 0;
    49ae:	10 92 74 04 	sts	0x0474, r1	; 0x800474 <_usbSuspendState>
	USB_ClockEnable();
    49b2:	0e 94 20 21 	call	0x4240	; 0x4240 <_ZL15USB_ClockEnablev>

	UDINT &= ~((1<<WAKEUPI) | (1<<SUSPI)); // clear already pending WAKEUP / SUSPEND requests
    49b6:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    49ba:	8e 7e       	andi	r24, 0xEE	; 238
    49bc:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
	UDIEN = (1<<EORSTE) | (1<<SOFE) | (1<<SUSPE);	// Enable interrupts for EOR (End of Reset), SOF (start of frame) and SUSPEND
    49c0:	8d e0       	ldi	r24, 0x0D	; 13
    49c2:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
	
	TX_RX_LED_INIT;
    49c6:	55 9a       	sbi	0x0a, 5	; 10
    49c8:	20 9a       	sbi	0x04, 0	; 4

#if MAGIC_KEY_POS != (RAMEND-1)
	if (pgm_read_word(FLASHEND - 1) == NEW_LUFA_SIGNATURE) {
    49ca:	ee ef       	ldi	r30, 0xFE	; 254
    49cc:	ff e7       	ldi	r31, 0x7F	; 127
    49ce:	85 91       	lpm	r24, Z+
    49d0:	94 91       	lpm	r25, Z
    49d2:	8b 3f       	cpi	r24, 0xFB	; 251
    49d4:	9c 4d       	sbci	r25, 0xDC	; 220
    49d6:	19 f4       	brne	.+6      	; 0x49de <_ZN10USBDevice_6attachEv+0x38>
		_updatedLUFAbootloader = true;
    49d8:	81 e0       	ldi	r24, 0x01	; 1
    49da:	80 93 d0 03 	sts	0x03D0, r24	; 0x8003d0 <_updatedLUFAbootloader>
    49de:	08 95       	ret

000049e0 <nothing>:
#include <avr/pgmspace.h>
#include <stdio.h>

#include "wiring_private.h"

static void nothing(void) {
    49e0:	08 95       	ret

000049e2 <attachInterrupt>:
#endif
};
// volatile static voidFuncPtr twiIntFunc;

void attachInterrupt(uint8_t interruptNum, void (*userFunc)(void), int mode) {
  if(interruptNum < EXTERNAL_NUM_INTERRUPTS) {
    49e2:	85 30       	cpi	r24, 0x05	; 5
    49e4:	08 f0       	brcs	.+2      	; 0x49e8 <attachInterrupt+0x6>
    49e6:	4c c0       	rjmp	.+152    	; 0x4a80 <attachInterrupt+0x9e>
    intFunc[interruptNum] = userFunc;
    49e8:	e8 2f       	mov	r30, r24
    49ea:	f0 e0       	ldi	r31, 0x00	; 0
    49ec:	ee 0f       	add	r30, r30
    49ee:	ff 1f       	adc	r31, r31
    49f0:	eb 5e       	subi	r30, 0xEB	; 235
    49f2:	fe 4f       	sbci	r31, 0xFE	; 254
    49f4:	71 83       	std	Z+1, r23	; 0x01
    49f6:	60 83       	st	Z, r22
    // to the configuration bits in the hardware register, so we simply shift
    // the mode into place.
      
    // Enable the interrupt.
      
    switch (interruptNum) {
    49f8:	82 30       	cpi	r24, 0x02	; 2
    49fa:	e1 f0       	breq	.+56     	; 0x4a34 <attachInterrupt+0x52>
    49fc:	18 f4       	brcc	.+6      	; 0x4a04 <attachInterrupt+0x22>
    49fe:	81 30       	cpi	r24, 0x01	; 1
    4a00:	69 f0       	breq	.+26     	; 0x4a1c <attachInterrupt+0x3a>
    4a02:	04 c0       	rjmp	.+8      	; 0x4a0c <attachInterrupt+0x2a>
    4a04:	83 30       	cpi	r24, 0x03	; 3
    4a06:	19 f1       	breq	.+70     	; 0x4a4e <attachInterrupt+0x6c>
    4a08:	84 30       	cpi	r24, 0x04	; 4
    4a0a:	71 f1       	breq	.+92     	; 0x4a68 <attachInterrupt+0x86>
#if defined(__AVR_ATmega32U4__)
	// I hate doing this, but the register assignment differs between the 1280/2560
	// and the 32U4.  Since avrlib defines registers PCMSK1 and PCMSK2 that aren't 
	// even present on the 32U4 this is the only way to distinguish between them.
    case 0:
	EICRA = (EICRA & ~((1<<ISC00) | (1<<ISC01))) | (mode << ISC00);
    4a0c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    4a10:	8c 7f       	andi	r24, 0xFC	; 252
    4a12:	48 2b       	or	r20, r24
    4a14:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK |= (1<<INT0);
    4a18:	e8 9a       	sbi	0x1d, 0	; 29
	break;
    4a1a:	08 95       	ret
    case 1:
	EICRA = (EICRA & ~((1<<ISC10) | (1<<ISC11))) | (mode << ISC10);
    4a1c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    4a20:	83 7f       	andi	r24, 0xF3	; 243
    4a22:	44 0f       	add	r20, r20
    4a24:	55 1f       	adc	r21, r21
    4a26:	44 0f       	add	r20, r20
    4a28:	55 1f       	adc	r21, r21
    4a2a:	48 2b       	or	r20, r24
    4a2c:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK |= (1<<INT1);
    4a30:	e9 9a       	sbi	0x1d, 1	; 29
	break;	
    4a32:	08 95       	ret
    case 2:
        EICRA = (EICRA & ~((1<<ISC20) | (1<<ISC21))) | (mode << ISC20);
    4a34:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    4a38:	8f 7c       	andi	r24, 0xCF	; 207
    4a3a:	34 e0       	ldi	r19, 0x04	; 4
    4a3c:	44 0f       	add	r20, r20
    4a3e:	55 1f       	adc	r21, r21
    4a40:	3a 95       	dec	r19
    4a42:	e1 f7       	brne	.-8      	; 0x4a3c <attachInterrupt+0x5a>
    4a44:	48 2b       	or	r20, r24
    4a46:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
        EIMSK |= (1<<INT2);
    4a4a:	ea 9a       	sbi	0x1d, 2	; 29
        break;
    4a4c:	08 95       	ret
    case 3:
        EICRA = (EICRA & ~((1<<ISC30) | (1<<ISC31))) | (mode << ISC30);
    4a4e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    4a52:	8f 73       	andi	r24, 0x3F	; 63
    4a54:	26 e0       	ldi	r18, 0x06	; 6
    4a56:	44 0f       	add	r20, r20
    4a58:	55 1f       	adc	r21, r21
    4a5a:	2a 95       	dec	r18
    4a5c:	e1 f7       	brne	.-8      	; 0x4a56 <attachInterrupt+0x74>
    4a5e:	48 2b       	or	r20, r24
    4a60:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
        EIMSK |= (1<<INT3);
    4a64:	eb 9a       	sbi	0x1d, 3	; 29
        break;
    4a66:	08 95       	ret
    case 4:
        EICRB = (EICRB & ~((1<<ISC60) | (1<<ISC61))) | (mode << ISC60);
    4a68:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
    4a6c:	8f 7c       	andi	r24, 0xCF	; 207
    4a6e:	94 e0       	ldi	r25, 0x04	; 4
    4a70:	44 0f       	add	r20, r20
    4a72:	55 1f       	adc	r21, r21
    4a74:	9a 95       	dec	r25
    4a76:	e1 f7       	brne	.-8      	; 0x4a70 <attachInterrupt+0x8e>
    4a78:	48 2b       	or	r20, r24
    4a7a:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
        EIMSK |= (1<<INT6);
    4a7e:	ee 9a       	sbi	0x1d, 6	; 29
    4a80:	08 95       	ret

00004a82 <detachInterrupt>:
    }
  }
}

void detachInterrupt(uint8_t interruptNum) {
  if(interruptNum < EXTERNAL_NUM_INTERRUPTS) {
    4a82:	85 30       	cpi	r24, 0x05	; 5
    4a84:	e8 f4       	brcc	.+58     	; 0x4ac0 <detachInterrupt+0x3e>
    // Disable the interrupt.  (We can't assume that interruptNum is equal
    // to the number of the EIMSK bit to clear, as this isn't true on the 
    // ATmega8.  There, INT0 is 6 and INT1 is 7.)
    switch (interruptNum) {
    4a86:	82 30       	cpi	r24, 0x02	; 2
    4a88:	61 f0       	breq	.+24     	; 0x4aa2 <detachInterrupt+0x20>
    4a8a:	18 f4       	brcc	.+6      	; 0x4a92 <detachInterrupt+0x10>
    4a8c:	81 30       	cpi	r24, 0x01	; 1
    4a8e:	39 f0       	breq	.+14     	; 0x4a9e <detachInterrupt+0x1c>
    4a90:	04 c0       	rjmp	.+8      	; 0x4a9a <detachInterrupt+0x18>
    4a92:	83 30       	cpi	r24, 0x03	; 3
    4a94:	41 f0       	breq	.+16     	; 0x4aa6 <detachInterrupt+0x24>
    4a96:	84 30       	cpi	r24, 0x04	; 4
    4a98:	41 f0       	breq	.+16     	; 0x4aaa <detachInterrupt+0x28>
#if defined(__AVR_ATmega32U4__)
    case 0:
        EIMSK &= ~(1<<INT0);
    4a9a:	e8 98       	cbi	0x1d, 0	; 29
        break;
    4a9c:	07 c0       	rjmp	.+14     	; 0x4aac <detachInterrupt+0x2a>
    case 1:
        EIMSK &= ~(1<<INT1);
    4a9e:	e9 98       	cbi	0x1d, 1	; 29
        break;
    4aa0:	05 c0       	rjmp	.+10     	; 0x4aac <detachInterrupt+0x2a>
    case 2:
        EIMSK &= ~(1<<INT2);
    4aa2:	ea 98       	cbi	0x1d, 2	; 29
        break;
    4aa4:	03 c0       	rjmp	.+6      	; 0x4aac <detachInterrupt+0x2a>
    case 3:
        EIMSK &= ~(1<<INT3);
    4aa6:	eb 98       	cbi	0x1d, 3	; 29
        break;	
    4aa8:	01 c0       	rjmp	.+2      	; 0x4aac <detachInterrupt+0x2a>
    case 4:
        EIMSK &= ~(1<<INT6);
    4aaa:	ee 98       	cbi	0x1d, 6	; 29
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
    4aac:	e8 2f       	mov	r30, r24
    4aae:	f0 e0       	ldi	r31, 0x00	; 0
    4ab0:	ee 0f       	add	r30, r30
    4ab2:	ff 1f       	adc	r31, r31
    4ab4:	eb 5e       	subi	r30, 0xEB	; 235
    4ab6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ab8:	80 ef       	ldi	r24, 0xF0	; 240
    4aba:	94 e2       	ldi	r25, 0x24	; 36
    4abc:	91 83       	std	Z+1, r25	; 0x01
    4abe:	80 83       	st	Z, r24
    4ac0:	08 95       	ret

00004ac2 <__vector_1>:
    intFunc[interrupt](); \
  }

#if defined(__AVR_ATmega32U4__)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_0)
    4ac2:	1f 92       	push	r1
    4ac4:	0f 92       	push	r0
    4ac6:	0f b6       	in	r0, 0x3f	; 63
    4ac8:	0f 92       	push	r0
    4aca:	11 24       	eor	r1, r1
    4acc:	2f 93       	push	r18
    4ace:	3f 93       	push	r19
    4ad0:	4f 93       	push	r20
    4ad2:	5f 93       	push	r21
    4ad4:	6f 93       	push	r22
    4ad6:	7f 93       	push	r23
    4ad8:	8f 93       	push	r24
    4ada:	9f 93       	push	r25
    4adc:	af 93       	push	r26
    4ade:	bf 93       	push	r27
    4ae0:	ef 93       	push	r30
    4ae2:	ff 93       	push	r31
    4ae4:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <intFunc>
    4ae8:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <intFunc+0x1>
    4aec:	09 95       	icall
    4aee:	ff 91       	pop	r31
    4af0:	ef 91       	pop	r30
    4af2:	bf 91       	pop	r27
    4af4:	af 91       	pop	r26
    4af6:	9f 91       	pop	r25
    4af8:	8f 91       	pop	r24
    4afa:	7f 91       	pop	r23
    4afc:	6f 91       	pop	r22
    4afe:	5f 91       	pop	r21
    4b00:	4f 91       	pop	r20
    4b02:	3f 91       	pop	r19
    4b04:	2f 91       	pop	r18
    4b06:	0f 90       	pop	r0
    4b08:	0f be       	out	0x3f, r0	; 63
    4b0a:	0f 90       	pop	r0
    4b0c:	1f 90       	pop	r1
    4b0e:	18 95       	reti

00004b10 <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_1)
    4b10:	1f 92       	push	r1
    4b12:	0f 92       	push	r0
    4b14:	0f b6       	in	r0, 0x3f	; 63
    4b16:	0f 92       	push	r0
    4b18:	11 24       	eor	r1, r1
    4b1a:	2f 93       	push	r18
    4b1c:	3f 93       	push	r19
    4b1e:	4f 93       	push	r20
    4b20:	5f 93       	push	r21
    4b22:	6f 93       	push	r22
    4b24:	7f 93       	push	r23
    4b26:	8f 93       	push	r24
    4b28:	9f 93       	push	r25
    4b2a:	af 93       	push	r26
    4b2c:	bf 93       	push	r27
    4b2e:	ef 93       	push	r30
    4b30:	ff 93       	push	r31
    4b32:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <intFunc+0x2>
    4b36:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <intFunc+0x3>
    4b3a:	09 95       	icall
    4b3c:	ff 91       	pop	r31
    4b3e:	ef 91       	pop	r30
    4b40:	bf 91       	pop	r27
    4b42:	af 91       	pop	r26
    4b44:	9f 91       	pop	r25
    4b46:	8f 91       	pop	r24
    4b48:	7f 91       	pop	r23
    4b4a:	6f 91       	pop	r22
    4b4c:	5f 91       	pop	r21
    4b4e:	4f 91       	pop	r20
    4b50:	3f 91       	pop	r19
    4b52:	2f 91       	pop	r18
    4b54:	0f 90       	pop	r0
    4b56:	0f be       	out	0x3f, r0	; 63
    4b58:	0f 90       	pop	r0
    4b5a:	1f 90       	pop	r1
    4b5c:	18 95       	reti

00004b5e <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_2)
    4b5e:	1f 92       	push	r1
    4b60:	0f 92       	push	r0
    4b62:	0f b6       	in	r0, 0x3f	; 63
    4b64:	0f 92       	push	r0
    4b66:	11 24       	eor	r1, r1
    4b68:	2f 93       	push	r18
    4b6a:	3f 93       	push	r19
    4b6c:	4f 93       	push	r20
    4b6e:	5f 93       	push	r21
    4b70:	6f 93       	push	r22
    4b72:	7f 93       	push	r23
    4b74:	8f 93       	push	r24
    4b76:	9f 93       	push	r25
    4b78:	af 93       	push	r26
    4b7a:	bf 93       	push	r27
    4b7c:	ef 93       	push	r30
    4b7e:	ff 93       	push	r31
    4b80:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <intFunc+0x4>
    4b84:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <intFunc+0x5>
    4b88:	09 95       	icall
    4b8a:	ff 91       	pop	r31
    4b8c:	ef 91       	pop	r30
    4b8e:	bf 91       	pop	r27
    4b90:	af 91       	pop	r26
    4b92:	9f 91       	pop	r25
    4b94:	8f 91       	pop	r24
    4b96:	7f 91       	pop	r23
    4b98:	6f 91       	pop	r22
    4b9a:	5f 91       	pop	r21
    4b9c:	4f 91       	pop	r20
    4b9e:	3f 91       	pop	r19
    4ba0:	2f 91       	pop	r18
    4ba2:	0f 90       	pop	r0
    4ba4:	0f be       	out	0x3f, r0	; 63
    4ba6:	0f 90       	pop	r0
    4ba8:	1f 90       	pop	r1
    4baa:	18 95       	reti

00004bac <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_3)
    4bac:	1f 92       	push	r1
    4bae:	0f 92       	push	r0
    4bb0:	0f b6       	in	r0, 0x3f	; 63
    4bb2:	0f 92       	push	r0
    4bb4:	11 24       	eor	r1, r1
    4bb6:	2f 93       	push	r18
    4bb8:	3f 93       	push	r19
    4bba:	4f 93       	push	r20
    4bbc:	5f 93       	push	r21
    4bbe:	6f 93       	push	r22
    4bc0:	7f 93       	push	r23
    4bc2:	8f 93       	push	r24
    4bc4:	9f 93       	push	r25
    4bc6:	af 93       	push	r26
    4bc8:	bf 93       	push	r27
    4bca:	ef 93       	push	r30
    4bcc:	ff 93       	push	r31
    4bce:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <intFunc+0x6>
    4bd2:	f0 91 1c 01 	lds	r31, 0x011C	; 0x80011c <intFunc+0x7>
    4bd6:	09 95       	icall
    4bd8:	ff 91       	pop	r31
    4bda:	ef 91       	pop	r30
    4bdc:	bf 91       	pop	r27
    4bde:	af 91       	pop	r26
    4be0:	9f 91       	pop	r25
    4be2:	8f 91       	pop	r24
    4be4:	7f 91       	pop	r23
    4be6:	6f 91       	pop	r22
    4be8:	5f 91       	pop	r21
    4bea:	4f 91       	pop	r20
    4bec:	3f 91       	pop	r19
    4bee:	2f 91       	pop	r18
    4bf0:	0f 90       	pop	r0
    4bf2:	0f be       	out	0x3f, r0	; 63
    4bf4:	0f 90       	pop	r0
    4bf6:	1f 90       	pop	r1
    4bf8:	18 95       	reti

00004bfa <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_4)
    4bfa:	1f 92       	push	r1
    4bfc:	0f 92       	push	r0
    4bfe:	0f b6       	in	r0, 0x3f	; 63
    4c00:	0f 92       	push	r0
    4c02:	11 24       	eor	r1, r1
    4c04:	2f 93       	push	r18
    4c06:	3f 93       	push	r19
    4c08:	4f 93       	push	r20
    4c0a:	5f 93       	push	r21
    4c0c:	6f 93       	push	r22
    4c0e:	7f 93       	push	r23
    4c10:	8f 93       	push	r24
    4c12:	9f 93       	push	r25
    4c14:	af 93       	push	r26
    4c16:	bf 93       	push	r27
    4c18:	ef 93       	push	r30
    4c1a:	ff 93       	push	r31
    4c1c:	e0 91 1d 01 	lds	r30, 0x011D	; 0x80011d <intFunc+0x8>
    4c20:	f0 91 1e 01 	lds	r31, 0x011E	; 0x80011e <intFunc+0x9>
    4c24:	09 95       	icall
    4c26:	ff 91       	pop	r31
    4c28:	ef 91       	pop	r30
    4c2a:	bf 91       	pop	r27
    4c2c:	af 91       	pop	r26
    4c2e:	9f 91       	pop	r25
    4c30:	8f 91       	pop	r24
    4c32:	7f 91       	pop	r23
    4c34:	6f 91       	pop	r22
    4c36:	5f 91       	pop	r21
    4c38:	4f 91       	pop	r20
    4c3a:	3f 91       	pop	r19
    4c3c:	2f 91       	pop	r18
    4c3e:	0f 90       	pop	r0
    4c40:	0f be       	out	0x3f, r0	; 63
    4c42:	0f 90       	pop	r0
    4c44:	1f 90       	pop	r1
    4c46:	18 95       	reti

00004c48 <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    4c48:	1f 92       	push	r1
    4c4a:	0f 92       	push	r0
    4c4c:	0f b6       	in	r0, 0x3f	; 63
    4c4e:	0f 92       	push	r0
    4c50:	11 24       	eor	r1, r1
    4c52:	2f 93       	push	r18
    4c54:	3f 93       	push	r19
    4c56:	8f 93       	push	r24
    4c58:	9f 93       	push	r25
    4c5a:	af 93       	push	r26
    4c5c:	bf 93       	push	r27
    4c5e:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <timer0_millis>
    4c62:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <timer0_millis+0x1>
    4c66:	a0 91 7c 04 	lds	r26, 0x047C	; 0x80047c <timer0_millis+0x2>
    4c6a:	b0 91 7d 04 	lds	r27, 0x047D	; 0x80047d <timer0_millis+0x3>
    4c6e:	30 91 79 04 	lds	r19, 0x0479	; 0x800479 <timer0_fract>
    4c72:	23 e0       	ldi	r18, 0x03	; 3
    4c74:	23 0f       	add	r18, r19
    4c76:	2d 37       	cpi	r18, 0x7D	; 125
    4c78:	20 f4       	brcc	.+8      	; 0x4c82 <__vector_23+0x3a>
    4c7a:	01 96       	adiw	r24, 0x01	; 1
    4c7c:	a1 1d       	adc	r26, r1
    4c7e:	b1 1d       	adc	r27, r1
    4c80:	05 c0       	rjmp	.+10     	; 0x4c8c <__vector_23+0x44>
    4c82:	26 e8       	ldi	r18, 0x86	; 134
    4c84:	23 0f       	add	r18, r19
    4c86:	02 96       	adiw	r24, 0x02	; 2
    4c88:	a1 1d       	adc	r26, r1
    4c8a:	b1 1d       	adc	r27, r1
    4c8c:	20 93 79 04 	sts	0x0479, r18	; 0x800479 <timer0_fract>
    4c90:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <timer0_millis>
    4c94:	90 93 7b 04 	sts	0x047B, r25	; 0x80047b <timer0_millis+0x1>
    4c98:	a0 93 7c 04 	sts	0x047C, r26	; 0x80047c <timer0_millis+0x2>
    4c9c:	b0 93 7d 04 	sts	0x047D, r27	; 0x80047d <timer0_millis+0x3>
    4ca0:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <timer0_overflow_count>
    4ca4:	90 91 7f 04 	lds	r25, 0x047F	; 0x80047f <timer0_overflow_count+0x1>
    4ca8:	a0 91 80 04 	lds	r26, 0x0480	; 0x800480 <timer0_overflow_count+0x2>
    4cac:	b0 91 81 04 	lds	r27, 0x0481	; 0x800481 <timer0_overflow_count+0x3>
    4cb0:	01 96       	adiw	r24, 0x01	; 1
    4cb2:	a1 1d       	adc	r26, r1
    4cb4:	b1 1d       	adc	r27, r1
    4cb6:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <timer0_overflow_count>
    4cba:	90 93 7f 04 	sts	0x047F, r25	; 0x80047f <timer0_overflow_count+0x1>
    4cbe:	a0 93 80 04 	sts	0x0480, r26	; 0x800480 <timer0_overflow_count+0x2>
    4cc2:	b0 93 81 04 	sts	0x0481, r27	; 0x800481 <timer0_overflow_count+0x3>
    4cc6:	bf 91       	pop	r27
    4cc8:	af 91       	pop	r26
    4cca:	9f 91       	pop	r25
    4ccc:	8f 91       	pop	r24
    4cce:	3f 91       	pop	r19
    4cd0:	2f 91       	pop	r18
    4cd2:	0f 90       	pop	r0
    4cd4:	0f be       	out	0x3f, r0	; 63
    4cd6:	0f 90       	pop	r0
    4cd8:	1f 90       	pop	r1
    4cda:	18 95       	reti

00004cdc <millis>:
    4cdc:	2f b7       	in	r18, 0x3f	; 63
    4cde:	f8 94       	cli
    4ce0:	60 91 7a 04 	lds	r22, 0x047A	; 0x80047a <timer0_millis>
    4ce4:	70 91 7b 04 	lds	r23, 0x047B	; 0x80047b <timer0_millis+0x1>
    4ce8:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <timer0_millis+0x2>
    4cec:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <timer0_millis+0x3>
    4cf0:	2f bf       	out	0x3f, r18	; 63
    4cf2:	08 95       	ret

00004cf4 <micros>:
    4cf4:	3f b7       	in	r19, 0x3f	; 63
    4cf6:	f8 94       	cli
    4cf8:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <timer0_overflow_count>
    4cfc:	90 91 7f 04 	lds	r25, 0x047F	; 0x80047f <timer0_overflow_count+0x1>
    4d00:	a0 91 80 04 	lds	r26, 0x0480	; 0x800480 <timer0_overflow_count+0x2>
    4d04:	b0 91 81 04 	lds	r27, 0x0481	; 0x800481 <timer0_overflow_count+0x3>
    4d08:	26 b5       	in	r18, 0x26	; 38
    4d0a:	a8 9b       	sbis	0x15, 0	; 21
    4d0c:	05 c0       	rjmp	.+10     	; 0x4d18 <micros+0x24>
    4d0e:	2f 3f       	cpi	r18, 0xFF	; 255
    4d10:	19 f0       	breq	.+6      	; 0x4d18 <micros+0x24>
    4d12:	01 96       	adiw	r24, 0x01	; 1
    4d14:	a1 1d       	adc	r26, r1
    4d16:	b1 1d       	adc	r27, r1
    4d18:	3f bf       	out	0x3f, r19	; 63
    4d1a:	ba 2f       	mov	r27, r26
    4d1c:	a9 2f       	mov	r26, r25
    4d1e:	98 2f       	mov	r25, r24
    4d20:	88 27       	eor	r24, r24
    4d22:	82 0f       	add	r24, r18
    4d24:	91 1d       	adc	r25, r1
    4d26:	a1 1d       	adc	r26, r1
    4d28:	b1 1d       	adc	r27, r1
    4d2a:	bc 01       	movw	r22, r24
    4d2c:	cd 01       	movw	r24, r26
    4d2e:	42 e0       	ldi	r20, 0x02	; 2
    4d30:	66 0f       	add	r22, r22
    4d32:	77 1f       	adc	r23, r23
    4d34:	88 1f       	adc	r24, r24
    4d36:	99 1f       	adc	r25, r25
    4d38:	4a 95       	dec	r20
    4d3a:	d1 f7       	brne	.-12     	; 0x4d30 <micros+0x3c>
    4d3c:	08 95       	ret

00004d3e <delay>:
    4d3e:	8f 92       	push	r8
    4d40:	9f 92       	push	r9
    4d42:	af 92       	push	r10
    4d44:	bf 92       	push	r11
    4d46:	cf 92       	push	r12
    4d48:	df 92       	push	r13
    4d4a:	ef 92       	push	r14
    4d4c:	ff 92       	push	r15
    4d4e:	6b 01       	movw	r12, r22
    4d50:	7c 01       	movw	r14, r24
    4d52:	0e 94 7a 26 	call	0x4cf4	; 0x4cf4 <micros>
    4d56:	4b 01       	movw	r8, r22
    4d58:	5c 01       	movw	r10, r24
    4d5a:	c1 14       	cp	r12, r1
    4d5c:	d1 04       	cpc	r13, r1
    4d5e:	e1 04       	cpc	r14, r1
    4d60:	f1 04       	cpc	r15, r1
    4d62:	01 f1       	breq	.+64     	; 0x4da4 <delay+0x66>
    4d64:	0e 94 a2 2e 	call	0x5d44	; 0x5d44 <yield>
    4d68:	0e 94 7a 26 	call	0x4cf4	; 0x4cf4 <micros>
    4d6c:	dc 01       	movw	r26, r24
    4d6e:	cb 01       	movw	r24, r22
    4d70:	88 19       	sub	r24, r8
    4d72:	99 09       	sbc	r25, r9
    4d74:	aa 09       	sbc	r26, r10
    4d76:	bb 09       	sbc	r27, r11
    4d78:	88 3e       	cpi	r24, 0xE8	; 232
    4d7a:	93 40       	sbci	r25, 0x03	; 3
    4d7c:	a1 05       	cpc	r26, r1
    4d7e:	b1 05       	cpc	r27, r1
    4d80:	60 f3       	brcs	.-40     	; 0x4d5a <delay+0x1c>
    4d82:	21 e0       	ldi	r18, 0x01	; 1
    4d84:	c2 1a       	sub	r12, r18
    4d86:	d1 08       	sbc	r13, r1
    4d88:	e1 08       	sbc	r14, r1
    4d8a:	f1 08       	sbc	r15, r1
    4d8c:	88 ee       	ldi	r24, 0xE8	; 232
    4d8e:	88 0e       	add	r8, r24
    4d90:	83 e0       	ldi	r24, 0x03	; 3
    4d92:	98 1e       	adc	r9, r24
    4d94:	a1 1c       	adc	r10, r1
    4d96:	b1 1c       	adc	r11, r1
    4d98:	c1 14       	cp	r12, r1
    4d9a:	d1 04       	cpc	r13, r1
    4d9c:	e1 04       	cpc	r14, r1
    4d9e:	f1 04       	cpc	r15, r1
    4da0:	19 f7       	brne	.-58     	; 0x4d68 <delay+0x2a>
    4da2:	db cf       	rjmp	.-74     	; 0x4d5a <delay+0x1c>
    4da4:	ff 90       	pop	r15
    4da6:	ef 90       	pop	r14
    4da8:	df 90       	pop	r13
    4daa:	cf 90       	pop	r12
    4dac:	bf 90       	pop	r11
    4dae:	af 90       	pop	r10
    4db0:	9f 90       	pop	r9
    4db2:	8f 90       	pop	r8
    4db4:	08 95       	ret

00004db6 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    4db6:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    4db8:	84 b5       	in	r24, 0x24	; 36
    4dba:	82 60       	ori	r24, 0x02	; 2
    4dbc:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    4dbe:	84 b5       	in	r24, 0x24	; 36
    4dc0:	81 60       	ori	r24, 0x01	; 1
    4dc2:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    4dc4:	85 b5       	in	r24, 0x25	; 37
    4dc6:	82 60       	ori	r24, 0x02	; 2
    4dc8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    4dca:	85 b5       	in	r24, 0x25	; 37
    4dcc:	81 60       	ori	r24, 0x01	; 1
    4dce:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    4dd0:	ee e6       	ldi	r30, 0x6E	; 110
    4dd2:	f0 e0       	ldi	r31, 0x00	; 0
    4dd4:	80 81       	ld	r24, Z
    4dd6:	81 60       	ori	r24, 0x01	; 1
    4dd8:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    4dda:	e1 e8       	ldi	r30, 0x81	; 129
    4ddc:	f0 e0       	ldi	r31, 0x00	; 0
    4dde:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    4de0:	80 81       	ld	r24, Z
    4de2:	82 60       	ori	r24, 0x02	; 2
    4de4:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    4de6:	80 81       	ld	r24, Z
    4de8:	81 60       	ori	r24, 0x01	; 1
    4dea:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    4dec:	e0 e8       	ldi	r30, 0x80	; 128
    4dee:	f0 e0       	ldi	r31, 0x00	; 0
    4df0:	80 81       	ld	r24, Z
    4df2:	81 60       	ori	r24, 0x01	; 1
    4df4:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    4df6:	e1 e9       	ldi	r30, 0x91	; 145
    4df8:	f0 e0       	ldi	r31, 0x00	; 0
    4dfa:	80 81       	ld	r24, Z
    4dfc:	82 60       	ori	r24, 0x02	; 2
    4dfe:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    4e00:	80 81       	ld	r24, Z
    4e02:	81 60       	ori	r24, 0x01	; 1
    4e04:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    4e06:	e0 e9       	ldi	r30, 0x90	; 144
    4e08:	f0 e0       	ldi	r31, 0x00	; 0
    4e0a:	80 81       	ld	r24, Z
    4e0c:	81 60       	ori	r24, 0x01	; 1
    4e0e:	80 83       	st	Z, r24
#endif

#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */
	sbi(TCCR4B, CS42);		// set timer4 prescale factor to 64
    4e10:	e1 ec       	ldi	r30, 0xC1	; 193
    4e12:	f0 e0       	ldi	r31, 0x00	; 0
    4e14:	80 81       	ld	r24, Z
    4e16:	84 60       	ori	r24, 0x04	; 4
    4e18:	80 83       	st	Z, r24
	sbi(TCCR4B, CS41);
    4e1a:	80 81       	ld	r24, Z
    4e1c:	82 60       	ori	r24, 0x02	; 2
    4e1e:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    4e20:	80 81       	ld	r24, Z
    4e22:	81 60       	ori	r24, 0x01	; 1
    4e24:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
    4e26:	e3 ec       	ldi	r30, 0xC3	; 195
    4e28:	f0 e0       	ldi	r31, 0x00	; 0
    4e2a:	80 81       	ld	r24, Z
    4e2c:	81 60       	ori	r24, 0x01	; 1
    4e2e:	80 83       	st	Z, r24
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
    4e30:	e0 ec       	ldi	r30, 0xC0	; 192
    4e32:	f0 e0       	ldi	r31, 0x00	; 0
    4e34:	80 81       	ld	r24, Z
    4e36:	82 60       	ori	r24, 0x02	; 2
    4e38:	80 83       	st	Z, r24
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
    4e3a:	e2 ec       	ldi	r30, 0xC2	; 194
    4e3c:	f0 e0       	ldi	r31, 0x00	; 0
    4e3e:	80 81       	ld	r24, Z
    4e40:	81 60       	ori	r24, 0x01	; 1
    4e42:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    4e44:	ea e7       	ldi	r30, 0x7A	; 122
    4e46:	f0 e0       	ldi	r31, 0x00	; 0
    4e48:	80 81       	ld	r24, Z
    4e4a:	84 60       	ori	r24, 0x04	; 4
    4e4c:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    4e4e:	80 81       	ld	r24, Z
    4e50:	82 60       	ori	r24, 0x02	; 2
    4e52:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    4e54:	80 81       	ld	r24, Z
    4e56:	81 60       	ori	r24, 0x01	; 1
    4e58:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    4e5a:	80 81       	ld	r24, Z
    4e5c:	80 68       	ori	r24, 0x80	; 128
    4e5e:	80 83       	st	Z, r24
    4e60:	08 95       	ret

00004e62 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    4e62:	90 e0       	ldi	r25, 0x00	; 0
    4e64:	fc 01       	movw	r30, r24
    4e66:	31 97       	sbiw	r30, 0x01	; 1
    4e68:	ef 30       	cpi	r30, 0x0F	; 15
    4e6a:	f1 05       	cpc	r31, r1
    4e6c:	b0 f5       	brcc	.+108    	; 0x4eda <turnOffPWM+0x78>
    4e6e:	e9 59       	subi	r30, 0x99	; 153
    4e70:	ff 4f       	sbci	r31, 0xFF	; 255
    4e72:	0c 94 92 2f 	jmp	0x5f24	; 0x5f24 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    4e76:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    4e7a:	8f 77       	andi	r24, 0x7F	; 127
    4e7c:	03 c0       	rjmp	.+6      	; 0x4e84 <turnOffPWM+0x22>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    4e7e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    4e82:	8f 7d       	andi	r24, 0xDF	; 223
    4e84:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    4e88:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    4e8a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    4e8e:	87 7f       	andi	r24, 0xF7	; 247
    4e90:	f9 cf       	rjmp	.-14     	; 0x4e84 <turnOffPWM+0x22>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    4e92:	84 b5       	in	r24, 0x24	; 36
    4e94:	8f 77       	andi	r24, 0x7F	; 127
    4e96:	02 c0       	rjmp	.+4      	; 0x4e9c <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    4e98:	84 b5       	in	r24, 0x24	; 36
    4e9a:	8f 7d       	andi	r24, 0xDF	; 223
    4e9c:	84 bd       	out	0x24, r24	; 36
    4e9e:	08 95       	ret
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    4ea0:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    4ea4:	8f 77       	andi	r24, 0x7F	; 127
    4ea6:	07 c0       	rjmp	.+14     	; 0x4eb6 <turnOffPWM+0x54>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    4ea8:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    4eac:	8f 7d       	andi	r24, 0xDF	; 223
    4eae:	03 c0       	rjmp	.+6      	; 0x4eb6 <turnOffPWM+0x54>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    4eb0:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    4eb4:	87 7f       	andi	r24, 0xF7	; 247
    4eb6:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    4eba:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    4ebc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    4ec0:	8f 77       	andi	r24, 0x7F	; 127
    4ec2:	03 c0       	rjmp	.+6      	; 0x4eca <turnOffPWM+0x68>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    4ec4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    4ec8:	8f 7d       	andi	r24, 0xDF	; 223
    4eca:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    4ece:	08 95       	ret
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
		#endif			
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
    4ed0:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    4ed4:	87 7f       	andi	r24, 0xF7	; 247
    4ed6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    4eda:	08 95       	ret

00004edc <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    4edc:	cf 93       	push	r28
    4ede:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    4ee0:	90 e0       	ldi	r25, 0x00	; 0
    4ee2:	fc 01       	movw	r30, r24
    4ee4:	ec 59       	subi	r30, 0x9C	; 156
    4ee6:	fb 4f       	sbci	r31, 0xFB	; 251
    4ee8:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    4eea:	fc 01       	movw	r30, r24
    4eec:	ee 57       	subi	r30, 0x7E	; 126
    4eee:	fb 4f       	sbci	r31, 0xFB	; 251
    4ef0:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    4ef2:	88 23       	and	r24, r24
    4ef4:	61 f1       	breq	.+88     	; 0x4f4e <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    4ef6:	90 e0       	ldi	r25, 0x00	; 0
    4ef8:	88 0f       	add	r24, r24
    4efa:	99 1f       	adc	r25, r25
    4efc:	fc 01       	movw	r30, r24
    4efe:	e4 54       	subi	r30, 0x44	; 68
    4f00:	fb 4f       	sbci	r31, 0xFB	; 251
    4f02:	c5 91       	lpm	r28, Z+
    4f04:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    4f06:	fc 01       	movw	r30, r24
    4f08:	e2 55       	subi	r30, 0x52	; 82
    4f0a:	fb 4f       	sbci	r31, 0xFB	; 251
    4f0c:	a5 91       	lpm	r26, Z+
    4f0e:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    4f10:	61 11       	cpse	r22, r1
    4f12:	09 c0       	rjmp	.+18     	; 0x4f26 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    4f14:	9f b7       	in	r25, 0x3f	; 63
                cli();
    4f16:	f8 94       	cli
		*reg &= ~bit;
    4f18:	88 81       	ld	r24, Y
    4f1a:	20 95       	com	r18
    4f1c:	82 23       	and	r24, r18
    4f1e:	88 83       	st	Y, r24
		*out &= ~bit;
    4f20:	ec 91       	ld	r30, X
    4f22:	2e 23       	and	r18, r30
    4f24:	0b c0       	rjmp	.+22     	; 0x4f3c <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    4f26:	62 30       	cpi	r22, 0x02	; 2
    4f28:	61 f4       	brne	.+24     	; 0x4f42 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    4f2a:	9f b7       	in	r25, 0x3f	; 63
                cli();
    4f2c:	f8 94       	cli
		*reg &= ~bit;
    4f2e:	88 81       	ld	r24, Y
    4f30:	32 2f       	mov	r19, r18
    4f32:	30 95       	com	r19
    4f34:	83 23       	and	r24, r19
    4f36:	88 83       	st	Y, r24
		*out |= bit;
    4f38:	ec 91       	ld	r30, X
    4f3a:	2e 2b       	or	r18, r30
    4f3c:	2c 93       	st	X, r18
		SREG = oldSREG;
    4f3e:	9f bf       	out	0x3f, r25	; 63
    4f40:	06 c0       	rjmp	.+12     	; 0x4f4e <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    4f42:	8f b7       	in	r24, 0x3f	; 63
                cli();
    4f44:	f8 94       	cli
		*reg |= bit;
    4f46:	e8 81       	ld	r30, Y
    4f48:	2e 2b       	or	r18, r30
    4f4a:	28 83       	st	Y, r18
		SREG = oldSREG;
    4f4c:	8f bf       	out	0x3f, r24	; 63
	}
}
    4f4e:	df 91       	pop	r29
    4f50:	cf 91       	pop	r28
    4f52:	08 95       	ret

00004f54 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    4f54:	1f 93       	push	r17
    4f56:	cf 93       	push	r28
    4f58:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    4f5a:	28 2f       	mov	r18, r24
    4f5c:	30 e0       	ldi	r19, 0x00	; 0
    4f5e:	f9 01       	movw	r30, r18
    4f60:	ea 5b       	subi	r30, 0xBA	; 186
    4f62:	fb 4f       	sbci	r31, 0xFB	; 251
    4f64:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    4f66:	f9 01       	movw	r30, r18
    4f68:	ec 59       	subi	r30, 0x9C	; 156
    4f6a:	fb 4f       	sbci	r31, 0xFB	; 251
    4f6c:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    4f6e:	f9 01       	movw	r30, r18
    4f70:	ee 57       	subi	r30, 0x7E	; 126
    4f72:	fb 4f       	sbci	r31, 0xFB	; 251
    4f74:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    4f76:	cc 23       	and	r28, r28
    4f78:	c1 f0       	breq	.+48     	; 0x4faa <digitalWrite+0x56>
    4f7a:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    4f7c:	81 11       	cpse	r24, r1
    4f7e:	0e 94 31 27 	call	0x4e62	; 0x4e62 <turnOffPWM>

	out = portOutputRegister(port);
    4f82:	ec 2f       	mov	r30, r28
    4f84:	f0 e0       	ldi	r31, 0x00	; 0
    4f86:	ee 0f       	add	r30, r30
    4f88:	ff 1f       	adc	r31, r31
    4f8a:	e2 55       	subi	r30, 0x52	; 82
    4f8c:	fb 4f       	sbci	r31, 0xFB	; 251
    4f8e:	a5 91       	lpm	r26, Z+
    4f90:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    4f92:	9f b7       	in	r25, 0x3f	; 63
	cli();
    4f94:	f8 94       	cli

	if (val == LOW) {
    4f96:	11 11       	cpse	r17, r1
    4f98:	04 c0       	rjmp	.+8      	; 0x4fa2 <digitalWrite+0x4e>
		*out &= ~bit;
    4f9a:	8c 91       	ld	r24, X
    4f9c:	d0 95       	com	r29
    4f9e:	d8 23       	and	r29, r24
    4fa0:	02 c0       	rjmp	.+4      	; 0x4fa6 <digitalWrite+0x52>
	} else {
		*out |= bit;
    4fa2:	ec 91       	ld	r30, X
    4fa4:	de 2b       	or	r29, r30
    4fa6:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    4fa8:	9f bf       	out	0x3f, r25	; 63
}
    4faa:	df 91       	pop	r29
    4fac:	cf 91       	pop	r28
    4fae:	1f 91       	pop	r17
    4fb0:	08 95       	ret

00004fb2 <digitalRead>:

int digitalRead(uint8_t pin)
{
    4fb2:	cf 93       	push	r28
    4fb4:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    4fb6:	28 2f       	mov	r18, r24
    4fb8:	30 e0       	ldi	r19, 0x00	; 0
    4fba:	f9 01       	movw	r30, r18
    4fbc:	ea 5b       	subi	r30, 0xBA	; 186
    4fbe:	fb 4f       	sbci	r31, 0xFB	; 251
    4fc0:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    4fc2:	f9 01       	movw	r30, r18
    4fc4:	ec 59       	subi	r30, 0x9C	; 156
    4fc6:	fb 4f       	sbci	r31, 0xFB	; 251
    4fc8:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    4fca:	f9 01       	movw	r30, r18
    4fcc:	ee 57       	subi	r30, 0x7E	; 126
    4fce:	fb 4f       	sbci	r31, 0xFB	; 251
    4fd0:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
    4fd2:	cc 23       	and	r28, r28
    4fd4:	91 f0       	breq	.+36     	; 0x4ffa <digitalRead+0x48>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    4fd6:	81 11       	cpse	r24, r1
    4fd8:	0e 94 31 27 	call	0x4e62	; 0x4e62 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
    4fdc:	ec 2f       	mov	r30, r28
    4fde:	f0 e0       	ldi	r31, 0x00	; 0
    4fe0:	ee 0f       	add	r30, r30
    4fe2:	ff 1f       	adc	r31, r31
    4fe4:	e0 56       	subi	r30, 0x60	; 96
    4fe6:	fb 4f       	sbci	r31, 0xFB	; 251
    4fe8:	a5 91       	lpm	r26, Z+
    4fea:	b4 91       	lpm	r27, Z
    4fec:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
    4fee:	ed 23       	and	r30, r29
    4ff0:	81 e0       	ldi	r24, 0x01	; 1
    4ff2:	90 e0       	ldi	r25, 0x00	; 0
    4ff4:	21 f4       	brne	.+8      	; 0x4ffe <digitalRead+0x4c>
    4ff6:	80 e0       	ldi	r24, 0x00	; 0
    4ff8:	02 c0       	rjmp	.+4      	; 0x4ffe <digitalRead+0x4c>
    4ffa:	80 e0       	ldi	r24, 0x00	; 0
    4ffc:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
    4ffe:	df 91       	pop	r29
    5000:	cf 91       	pop	r28
    5002:	08 95       	ret

00005004 <_ZN8SPIClass8transferEh>:
	SPI.transfer(addr);
	SPI.transfer(value);
    SPI.transfer(value2);
	delay(1);
	digitalWrite(_ss, HIGH);
	delay(1);
    5004:	8e bd       	out	0x2e, r24	; 46
    5006:	00 00       	nop
    5008:	0d b4       	in	r0, 0x2d	; 45
    500a:	07 fe       	sbrs	r0, 7
    500c:	fd cf       	rjmp	.-6      	; 0x5008 <_ZN8SPIClass8transferEh+0x4>
    500e:	8e b5       	in	r24, 0x2e	; 46
    5010:	08 95       	ret

00005012 <_ZN6CANBusC1Ehhh>:
    5012:	fc 01       	movw	r30, r24
    5014:	60 83       	st	Z, r22
    5016:	41 83       	std	Z+1, r20	; 0x01
    5018:	22 83       	std	Z+2, r18	; 0x02
    501a:	08 95       	ret

0000501c <_ZN6CANBus5beginEv>:
    501c:	cf 93       	push	r28
    501e:	df 93       	push	r29
    5020:	ec 01       	movw	r28, r24
    5022:	61 e0       	ldi	r22, 0x01	; 1
    5024:	8f e0       	ldi	r24, 0x0F	; 15
    5026:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    502a:	60 e0       	ldi	r22, 0x00	; 0
    502c:	8e e0       	ldi	r24, 0x0E	; 14
    502e:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    5032:	61 e0       	ldi	r22, 0x01	; 1
    5034:	80 e1       	ldi	r24, 0x10	; 16
    5036:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    503a:	61 e0       	ldi	r22, 0x01	; 1
    503c:	88 81       	ld	r24, Y
    503e:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    5042:	61 e0       	ldi	r22, 0x01	; 1
    5044:	89 81       	ldd	r24, Y+1	; 0x01
    5046:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    504a:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <_ZN8SPIClass5beginEv>
    504e:	8c b5       	in	r24, 0x2c	; 44
    5050:	83 7f       	andi	r24, 0xF3	; 243
    5052:	8c bd       	out	0x2c, r24	; 44
    5054:	8c b5       	in	r24, 0x2c	; 44
    5056:	8c 7f       	andi	r24, 0xFC	; 252
    5058:	8c bd       	out	0x2c, r24	; 44
    505a:	8d b5       	in	r24, 0x2d	; 45
    505c:	81 60       	ori	r24, 0x01	; 1
    505e:	8d bd       	out	0x2d, r24	; 45
    5060:	8c b5       	in	r24, 0x2c	; 44
    5062:	8f 7d       	andi	r24, 0xDF	; 223
    5064:	8c bd       	out	0x2c, r24	; 44
    5066:	60 e0       	ldi	r22, 0x00	; 0
    5068:	89 81       	ldd	r24, Y+1	; 0x01
    506a:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    506e:	62 e3       	ldi	r22, 0x32	; 50
    5070:	70 e0       	ldi	r23, 0x00	; 0
    5072:	80 e0       	ldi	r24, 0x00	; 0
    5074:	90 e0       	ldi	r25, 0x00	; 0
    5076:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    507a:	61 e0       	ldi	r22, 0x01	; 1
    507c:	89 81       	ldd	r24, Y+1	; 0x01
    507e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5082:	62 e3       	ldi	r22, 0x32	; 50
    5084:	70 e0       	ldi	r23, 0x00	; 0
    5086:	80 e0       	ldi	r24, 0x00	; 0
    5088:	90 e0       	ldi	r25, 0x00	; 0
    508a:	df 91       	pop	r29
    508c:	cf 91       	pop	r28
    508e:	0c 94 9f 26 	jmp	0x4d3e	; 0x4d3e <delay>

00005092 <_ZN6CANBus10baudConfigEj>:
    5092:	4f 92       	push	r4
    5094:	5f 92       	push	r5
    5096:	6f 92       	push	r6
    5098:	7f 92       	push	r7
    509a:	8f 92       	push	r8
    509c:	9f 92       	push	r9
    509e:	af 92       	push	r10
    50a0:	bf 92       	push	r11
    50a2:	ef 92       	push	r14
    50a4:	ff 92       	push	r15
    50a6:	0f 93       	push	r16
    50a8:	1f 93       	push	r17
    50aa:	cf 93       	push	r28
    50ac:	df 93       	push	r29
    50ae:	8c 01       	movw	r16, r24
    50b0:	61 32       	cpi	r22, 0x21	; 33
    50b2:	71 05       	cpc	r23, r1
    50b4:	09 f4       	brne	.+2      	; 0x50b8 <_ZN6CANBus10baudConfigEj+0x26>
    50b6:	91 c0       	rjmp	.+290    	; 0x51da <_ZN6CANBus10baudConfigEj+0x148>
    50b8:	80 e0       	ldi	r24, 0x00	; 0
    50ba:	90 e0       	ldi	r25, 0x00	; 0
    50bc:	0e 94 43 1c 	call	0x3886	; 0x3886 <__floatunsisf>
    50c0:	9b 01       	movw	r18, r22
    50c2:	ac 01       	movw	r20, r24
    50c4:	60 e0       	ldi	r22, 0x00	; 0
    50c6:	70 e0       	ldi	r23, 0x00	; 0
    50c8:	80 e8       	ldi	r24, 0x80	; 128
    50ca:	9f e3       	ldi	r25, 0x3F	; 63
    50cc:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    50d0:	20 e0       	ldi	r18, 0x00	; 0
    50d2:	30 e0       	ldi	r19, 0x00	; 0
    50d4:	4a e7       	ldi	r20, 0x7A	; 122
    50d6:	54 e4       	ldi	r21, 0x44	; 68
    50d8:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
    50dc:	2b 01       	movw	r4, r22
    50de:	3c 01       	movw	r6, r24
    50e0:	c1 e0       	ldi	r28, 0x01	; 1
    50e2:	d0 e0       	ldi	r29, 0x00	; 0
    50e4:	ec 2e       	mov	r14, r28
    50e6:	ea 94       	dec	r14
    50e8:	be 01       	movw	r22, r28
    50ea:	0d 2e       	mov	r0, r29
    50ec:	00 0c       	add	r0, r0
    50ee:	88 0b       	sbc	r24, r24
    50f0:	99 0b       	sbc	r25, r25
    50f2:	0e 94 45 1c 	call	0x388a	; 0x388a <__floatsisf>
    50f6:	9b 01       	movw	r18, r22
    50f8:	ac 01       	movw	r20, r24
    50fa:	0e 94 2a 1b 	call	0x3654	; 0x3654 <__addsf3>
    50fe:	20 e0       	ldi	r18, 0x00	; 0
    5100:	30 e0       	ldi	r19, 0x00	; 0
    5102:	40 e8       	ldi	r20, 0x80	; 128
    5104:	5d e3       	ldi	r21, 0x3D	; 61
    5106:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
    510a:	9b 01       	movw	r18, r22
    510c:	ac 01       	movw	r20, r24
    510e:	c3 01       	movw	r24, r6
    5110:	b2 01       	movw	r22, r4
    5112:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__divsf3>
    5116:	4b 01       	movw	r8, r22
    5118:	5c 01       	movw	r10, r24
    511a:	20 e0       	ldi	r18, 0x00	; 0
    511c:	30 e0       	ldi	r19, 0x00	; 0
    511e:	48 ec       	ldi	r20, 0xC8	; 200
    5120:	51 e4       	ldi	r21, 0x41	; 65
    5122:	0e 94 96 1b 	call	0x372c	; 0x372c <__cmpsf2>
    5126:	18 16       	cp	r1, r24
    5128:	cc f0       	brlt	.+50     	; 0x515c <_ZN6CANBus10baudConfigEj+0xca>
    512a:	c5 01       	movw	r24, r10
    512c:	b4 01       	movw	r22, r8
    512e:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixsfsi>
    5132:	f6 2e       	mov	r15, r22
    5134:	77 27       	eor	r23, r23
    5136:	07 2e       	mov	r0, r23
    5138:	00 0c       	add	r0, r0
    513a:	88 0b       	sbc	r24, r24
    513c:	99 0b       	sbc	r25, r25
    513e:	0e 94 45 1c 	call	0x388a	; 0x388a <__floatsisf>
    5142:	9b 01       	movw	r18, r22
    5144:	ac 01       	movw	r20, r24
    5146:	c5 01       	movw	r24, r10
    5148:	b4 01       	movw	r22, r8
    514a:	0e 94 29 1b 	call	0x3652	; 0x3652 <__subsf3>
    514e:	20 e0       	ldi	r18, 0x00	; 0
    5150:	30 e0       	ldi	r19, 0x00	; 0
    5152:	a9 01       	movw	r20, r18
    5154:	0e 94 96 1b 	call	0x372c	; 0x372c <__cmpsf2>
    5158:	88 23       	and	r24, r24
    515a:	39 f0       	breq	.+14     	; 0x516a <_ZN6CANBus10baudConfigEj+0xd8>
    515c:	21 96       	adiw	r28, 0x01	; 1
    515e:	c9 30       	cpi	r28, 0x09	; 9
    5160:	d1 05       	cpc	r29, r1
    5162:	09 f0       	breq	.+2      	; 0x5166 <_ZN6CANBus10baudConfigEj+0xd4>
    5164:	bf cf       	rjmp	.-130    	; 0x50e4 <_ZN6CANBus10baudConfigEj+0x52>
    5166:	38 e0       	ldi	r19, 0x08	; 8
    5168:	e3 2e       	mov	r14, r19
    516a:	6f 2d       	mov	r22, r15
    516c:	70 e0       	ldi	r23, 0x00	; 0
    516e:	80 e0       	ldi	r24, 0x00	; 0
    5170:	90 e0       	ldi	r25, 0x00	; 0
    5172:	0e 94 45 1c 	call	0x388a	; 0x388a <__floatsisf>
    5176:	2d ec       	ldi	r18, 0xCD	; 205
    5178:	3c ec       	ldi	r19, 0xCC	; 204
    517a:	4c e4       	ldi	r20, 0x4C	; 76
    517c:	5f e3       	ldi	r21, 0x3F	; 63
    517e:	0e 94 fa 1c 	call	0x39f4	; 0x39f4 <__mulsf3>
    5182:	0e 94 14 1c 	call	0x3828	; 0x3828 <__fixunssfsi>
    5186:	86 2f       	mov	r24, r22
    5188:	90 e0       	ldi	r25, 0x00	; 0
    518a:	ec 01       	movw	r28, r24
    518c:	21 97       	sbiw	r28, 0x01	; 1
    518e:	d7 fd       	sbrc	r29, 7
    5190:	ec 01       	movw	r28, r24
    5192:	d5 95       	asr	r29
    5194:	c7 95       	ror	r28
    5196:	61 50       	subi	r22, 0x01	; 1
    5198:	96 2f       	mov	r25, r22
    519a:	9c 1b       	sub	r25, r28
    519c:	8f 2d       	mov	r24, r15
    519e:	86 1b       	sub	r24, r22
    51a0:	4f ef       	ldi	r20, 0xFF	; 255
    51a2:	48 0f       	add	r20, r24
    51a4:	29 2f       	mov	r18, r25
    51a6:	30 e0       	ldi	r19, 0x00	; 0
    51a8:	fe 01       	movw	r30, r28
    51aa:	e2 0f       	add	r30, r18
    51ac:	f3 1f       	adc	r31, r19
    51ae:	64 2f       	mov	r22, r20
    51b0:	70 e0       	ldi	r23, 0x00	; 0
    51b2:	e6 17       	cp	r30, r22
    51b4:	f7 07       	cpc	r31, r23
    51b6:	0c f4       	brge	.+2      	; 0x51ba <_ZN6CANBus10baudConfigEj+0x128>
    51b8:	85 c0       	rjmp	.+266    	; 0x52c4 <_ZN6CANBus10baudConfigEj+0x232>
    51ba:	42 30       	cpi	r20, 0x02	; 2
    51bc:	08 f4       	brcc	.+2      	; 0x51c0 <_ZN6CANBus10baudConfigEj+0x12e>
    51be:	82 c0       	rjmp	.+260    	; 0x52c4 <_ZN6CANBus10baudConfigEj+0x232>
    51c0:	21 50       	subi	r18, 0x01	; 1
    51c2:	31 09       	sbc	r19, r1
    51c4:	93 e0       	ldi	r25, 0x03	; 3
    51c6:	22 0f       	add	r18, r18
    51c8:	33 1f       	adc	r19, r19
    51ca:	9a 95       	dec	r25
    51cc:	e1 f7       	brne	.-8      	; 0x51c6 <_ZN6CANBus10baudConfigEj+0x134>
    51ce:	c1 50       	subi	r28, 0x01	; 1
    51d0:	c0 68       	ori	r28, 0x80	; 128
    51d2:	c2 2b       	or	r28, r18
    51d4:	de ef       	ldi	r29, 0xFE	; 254
    51d6:	d8 0f       	add	r29, r24
    51d8:	04 c0       	rjmp	.+8      	; 0x51e2 <_ZN6CANBus10baudConfigEj+0x150>
    51da:	d7 e0       	ldi	r29, 0x07	; 7
    51dc:	ce eb       	ldi	r28, 0xBE	; 190
    51de:	89 e0       	ldi	r24, 0x09	; 9
    51e0:	e8 2e       	mov	r14, r24
    51e2:	60 e0       	ldi	r22, 0x00	; 0
    51e4:	f8 01       	movw	r30, r16
    51e6:	80 81       	ld	r24, Z
    51e8:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    51ec:	61 e0       	ldi	r22, 0x01	; 1
    51ee:	70 e0       	ldi	r23, 0x00	; 0
    51f0:	80 e0       	ldi	r24, 0x00	; 0
    51f2:	90 e0       	ldi	r25, 0x00	; 0
    51f4:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    51f8:	82 e0       	ldi	r24, 0x02	; 2
    51fa:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    51fe:	8a e2       	ldi	r24, 0x2A	; 42
    5200:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5204:	8e 2d       	mov	r24, r14
    5206:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    520a:	61 e0       	ldi	r22, 0x01	; 1
    520c:	70 e0       	ldi	r23, 0x00	; 0
    520e:	80 e0       	ldi	r24, 0x00	; 0
    5210:	90 e0       	ldi	r25, 0x00	; 0
    5212:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    5216:	61 e0       	ldi	r22, 0x01	; 1
    5218:	f8 01       	movw	r30, r16
    521a:	80 81       	ld	r24, Z
    521c:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5220:	61 e0       	ldi	r22, 0x01	; 1
    5222:	70 e0       	ldi	r23, 0x00	; 0
    5224:	80 e0       	ldi	r24, 0x00	; 0
    5226:	90 e0       	ldi	r25, 0x00	; 0
    5228:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    522c:	60 e0       	ldi	r22, 0x00	; 0
    522e:	f8 01       	movw	r30, r16
    5230:	80 81       	ld	r24, Z
    5232:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5236:	61 e0       	ldi	r22, 0x01	; 1
    5238:	70 e0       	ldi	r23, 0x00	; 0
    523a:	80 e0       	ldi	r24, 0x00	; 0
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    5242:	82 e0       	ldi	r24, 0x02	; 2
    5244:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5248:	89 e2       	ldi	r24, 0x29	; 41
    524a:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    524e:	8c 2f       	mov	r24, r28
    5250:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5254:	61 e0       	ldi	r22, 0x01	; 1
    5256:	70 e0       	ldi	r23, 0x00	; 0
    5258:	80 e0       	ldi	r24, 0x00	; 0
    525a:	90 e0       	ldi	r25, 0x00	; 0
    525c:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    5260:	61 e0       	ldi	r22, 0x01	; 1
    5262:	f8 01       	movw	r30, r16
    5264:	80 81       	ld	r24, Z
    5266:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    526a:	61 e0       	ldi	r22, 0x01	; 1
    526c:	70 e0       	ldi	r23, 0x00	; 0
    526e:	80 e0       	ldi	r24, 0x00	; 0
    5270:	90 e0       	ldi	r25, 0x00	; 0
    5272:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    5276:	60 e0       	ldi	r22, 0x00	; 0
    5278:	f8 01       	movw	r30, r16
    527a:	80 81       	ld	r24, Z
    527c:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5280:	61 e0       	ldi	r22, 0x01	; 1
    5282:	70 e0       	ldi	r23, 0x00	; 0
    5284:	80 e0       	ldi	r24, 0x00	; 0
    5286:	90 e0       	ldi	r25, 0x00	; 0
    5288:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    528c:	82 e0       	ldi	r24, 0x02	; 2
    528e:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5292:	88 e2       	ldi	r24, 0x28	; 40
    5294:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5298:	8d 2f       	mov	r24, r29
    529a:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    529e:	61 e0       	ldi	r22, 0x01	; 1
    52a0:	70 e0       	ldi	r23, 0x00	; 0
    52a2:	80 e0       	ldi	r24, 0x00	; 0
    52a4:	90 e0       	ldi	r25, 0x00	; 0
    52a6:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    52aa:	61 e0       	ldi	r22, 0x01	; 1
    52ac:	f8 01       	movw	r30, r16
    52ae:	80 81       	ld	r24, Z
    52b0:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    52b4:	61 e0       	ldi	r22, 0x01	; 1
    52b6:	70 e0       	ldi	r23, 0x00	; 0
    52b8:	80 e0       	ldi	r24, 0x00	; 0
    52ba:	90 e0       	ldi	r25, 0x00	; 0
    52bc:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    52c0:	81 e0       	ldi	r24, 0x01	; 1
    52c2:	01 c0       	rjmp	.+2      	; 0x52c6 <_ZN6CANBus10baudConfigEj+0x234>
    52c4:	80 e0       	ldi	r24, 0x00	; 0
    52c6:	df 91       	pop	r29
    52c8:	cf 91       	pop	r28
    52ca:	1f 91       	pop	r17
    52cc:	0f 91       	pop	r16
    52ce:	ff 90       	pop	r15
    52d0:	ef 90       	pop	r14
    52d2:	bf 90       	pop	r11
    52d4:	af 90       	pop	r10
    52d6:	9f 90       	pop	r9
    52d8:	8f 90       	pop	r8
    52da:	7f 90       	pop	r7
    52dc:	6f 90       	pop	r6
    52de:	5f 90       	pop	r5
    52e0:	4f 90       	pop	r4
    52e2:	08 95       	ret

000052e4 <_ZN6CANBus9bitModifyEhhh>:
    52e4:	ff 92       	push	r15
    52e6:	0f 93       	push	r16
    52e8:	1f 93       	push	r17
    52ea:	cf 93       	push	r28
    52ec:	df 93       	push	r29
    52ee:	ec 01       	movw	r28, r24
    52f0:	f6 2e       	mov	r15, r22
    52f2:	14 2f       	mov	r17, r20
    52f4:	02 2f       	mov	r16, r18
    52f6:	60 e0       	ldi	r22, 0x00	; 0
    52f8:	88 81       	ld	r24, Y
    52fa:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    52fe:	85 e0       	ldi	r24, 0x05	; 5
    5300:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5304:	8f 2d       	mov	r24, r15
    5306:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    530a:	80 2f       	mov	r24, r16
    530c:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5310:	81 2f       	mov	r24, r17
    5312:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5316:	61 e0       	ldi	r22, 0x01	; 1
    5318:	88 81       	ld	r24, Y
    531a:	df 91       	pop	r29
    531c:	cf 91       	pop	r28
    531e:	1f 91       	pop	r17
    5320:	0f 91       	pop	r16
    5322:	ff 90       	pop	r15
    5324:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

00005328 <_ZN6CANBus8setRxIntEb>:
    5328:	1f 93       	push	r17
    532a:	cf 93       	push	r28
    532c:	df 93       	push	r29
    532e:	ec 01       	movw	r28, r24
    5330:	61 11       	cpse	r22, r1
    5332:	02 c0       	rjmp	.+4      	; 0x5338 <_ZN6CANBus8setRxIntEb+0x10>
    5334:	10 e0       	ldi	r17, 0x00	; 0
    5336:	01 c0       	rjmp	.+2      	; 0x533a <_ZN6CANBus8setRxIntEb+0x12>
    5338:	13 e0       	ldi	r17, 0x03	; 3
    533a:	60 e0       	ldi	r22, 0x00	; 0
    533c:	88 81       	ld	r24, Y
    533e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5342:	85 e0       	ldi	r24, 0x05	; 5
    5344:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5348:	8b e2       	ldi	r24, 0x2B	; 43
    534a:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    534e:	83 e0       	ldi	r24, 0x03	; 3
    5350:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5354:	81 2f       	mov	r24, r17
    5356:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    535a:	61 e0       	ldi	r22, 0x01	; 1
    535c:	88 81       	ld	r24, Y
    535e:	df 91       	pop	r29
    5360:	cf 91       	pop	r28
    5362:	1f 91       	pop	r17
    5364:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

00005368 <_ZN6CANBus9setClkPreEi>:
    5368:	0f 93       	push	r16
    536a:	1f 93       	push	r17
    536c:	cf 93       	push	r28
    536e:	8c 01       	movw	r16, r24
    5370:	62 30       	cpi	r22, 0x02	; 2
    5372:	71 05       	cpc	r23, r1
    5374:	71 f0       	breq	.+28     	; 0x5392 <_ZN6CANBus9setClkPreEi+0x2a>
    5376:	2c f4       	brge	.+10     	; 0x5382 <_ZN6CANBus9setClkPreEi+0x1a>
    5378:	61 30       	cpi	r22, 0x01	; 1
    537a:	71 05       	cpc	r23, r1
    537c:	69 f4       	brne	.+26     	; 0x5398 <_ZN6CANBus9setClkPreEi+0x30>
    537e:	c0 e0       	ldi	r28, 0x00	; 0
    5380:	0b c0       	rjmp	.+22     	; 0x5398 <_ZN6CANBus9setClkPreEi+0x30>
    5382:	64 30       	cpi	r22, 0x04	; 4
    5384:	71 05       	cpc	r23, r1
    5386:	39 f0       	breq	.+14     	; 0x5396 <_ZN6CANBus9setClkPreEi+0x2e>
    5388:	68 30       	cpi	r22, 0x08	; 8
    538a:	71 05       	cpc	r23, r1
    538c:	29 f4       	brne	.+10     	; 0x5398 <_ZN6CANBus9setClkPreEi+0x30>
    538e:	c3 e0       	ldi	r28, 0x03	; 3
    5390:	03 c0       	rjmp	.+6      	; 0x5398 <_ZN6CANBus9setClkPreEi+0x30>
    5392:	c1 e0       	ldi	r28, 0x01	; 1
    5394:	01 c0       	rjmp	.+2      	; 0x5398 <_ZN6CANBus9setClkPreEi+0x30>
    5396:	c2 e0       	ldi	r28, 0x02	; 2
    5398:	60 e0       	ldi	r22, 0x00	; 0
    539a:	f8 01       	movw	r30, r16
    539c:	80 81       	ld	r24, Z
    539e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    53a2:	85 e0       	ldi	r24, 0x05	; 5
    53a4:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    53a8:	8f e0       	ldi	r24, 0x0F	; 15
    53aa:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    53ae:	83 e0       	ldi	r24, 0x03	; 3
    53b0:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    53b4:	8c 2f       	mov	r24, r28
    53b6:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    53ba:	61 e0       	ldi	r22, 0x01	; 1
    53bc:	f8 01       	movw	r30, r16
    53be:	80 81       	ld	r24, Z
    53c0:	cf 91       	pop	r28
    53c2:	1f 91       	pop	r17
    53c4:	0f 91       	pop	r16
    53c6:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

000053ca <_ZN6CANBus7setModeE7CANMode>:
    53ca:	0f 93       	push	r16
    53cc:	1f 93       	push	r17
    53ce:	cf 93       	push	r28
    53d0:	8c 01       	movw	r16, r24
    53d2:	62 30       	cpi	r22, 0x02	; 2
    53d4:	79 f0       	breq	.+30     	; 0x53f4 <_ZN6CANBus7setModeE7CANMode+0x2a>
    53d6:	30 f4       	brcc	.+12     	; 0x53e4 <_ZN6CANBus7setModeE7CANMode+0x1a>
    53d8:	66 23       	and	r22, r22
    53da:	51 f0       	breq	.+20     	; 0x53f0 <_ZN6CANBus7setModeE7CANMode+0x26>
    53dc:	61 30       	cpi	r22, 0x01	; 1
    53de:	69 f4       	brne	.+26     	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53e0:	c0 e0       	ldi	r28, 0x00	; 0
    53e2:	0b c0       	rjmp	.+22     	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53e4:	63 30       	cpi	r22, 0x03	; 3
    53e6:	41 f0       	breq	.+16     	; 0x53f8 <_ZN6CANBus7setModeE7CANMode+0x2e>
    53e8:	64 30       	cpi	r22, 0x04	; 4
    53ea:	39 f4       	brne	.+14     	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53ec:	c0 e4       	ldi	r28, 0x40	; 64
    53ee:	05 c0       	rjmp	.+10     	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53f0:	c0 e8       	ldi	r28, 0x80	; 128
    53f2:	03 c0       	rjmp	.+6      	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53f4:	c0 e2       	ldi	r28, 0x20	; 32
    53f6:	01 c0       	rjmp	.+2      	; 0x53fa <_ZN6CANBus7setModeE7CANMode+0x30>
    53f8:	c0 e6       	ldi	r28, 0x60	; 96
    53fa:	60 e0       	ldi	r22, 0x00	; 0
    53fc:	f8 01       	movw	r30, r16
    53fe:	80 81       	ld	r24, Z
    5400:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5404:	85 e0       	ldi	r24, 0x05	; 5
    5406:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    540a:	8f e0       	ldi	r24, 0x0F	; 15
    540c:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5410:	80 ee       	ldi	r24, 0xE0	; 224
    5412:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5416:	8c 2f       	mov	r24, r28
    5418:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    541c:	61 e0       	ldi	r22, 0x01	; 1
    541e:	f8 01       	movw	r30, r16
    5420:	80 81       	ld	r24, Z
    5422:	cf 91       	pop	r28
    5424:	1f 91       	pop	r17
    5426:	0f 91       	pop	r16
    5428:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

0000542c <_ZN6CANBus10readStatusEv>:
    542c:	1f 93       	push	r17
    542e:	cf 93       	push	r28
    5430:	df 93       	push	r29
    5432:	ec 01       	movw	r28, r24
    5434:	60 e0       	ldi	r22, 0x00	; 0
    5436:	88 81       	ld	r24, Y
    5438:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    543c:	80 ea       	ldi	r24, 0xA0	; 160
    543e:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5442:	8f ef       	ldi	r24, 0xFF	; 255
    5444:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5448:	18 2f       	mov	r17, r24
    544a:	61 e0       	ldi	r22, 0x01	; 1
    544c:	88 81       	ld	r24, Y
    544e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    5452:	81 2f       	mov	r24, r17
    5454:	df 91       	pop	r29
    5456:	cf 91       	pop	r28
    5458:	1f 91       	pop	r17
    545a:	08 95       	ret

0000545c <_ZN6CANBus12readRegisterEh>:
    545c:	1f 93       	push	r17
    545e:	cf 93       	push	r28
    5460:	df 93       	push	r29
    5462:	ec 01       	movw	r28, r24
    5464:	16 2f       	mov	r17, r22
    5466:	60 e0       	ldi	r22, 0x00	; 0
    5468:	88 81       	ld	r24, Y
    546a:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    546e:	83 e0       	ldi	r24, 0x03	; 3
    5470:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5474:	81 2f       	mov	r24, r17
    5476:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    547a:	8f ef       	ldi	r24, 0xFF	; 255
    547c:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5480:	18 2f       	mov	r17, r24
    5482:	61 e0       	ldi	r22, 0x01	; 1
    5484:	88 81       	ld	r24, Y
    5486:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    548a:	81 2f       	mov	r24, r17
    548c:	df 91       	pop	r29
    548e:	cf 91       	pop	r28
    5490:	1f 91       	pop	r17
    5492:	08 95       	ret

00005494 <_ZN6CANBus13writeRegisterEhhhhh>:
}

void CANBus::writeRegister( uint8_t addr, uint8_t value, uint8_t value2, uint8_t value3, uint8_t value4 ){
    5494:	df 92       	push	r13
    5496:	ef 92       	push	r14
    5498:	ff 92       	push	r15
    549a:	0f 93       	push	r16
    549c:	1f 93       	push	r17
    549e:	cf 93       	push	r28
    54a0:	df 93       	push	r29
    54a2:	ec 01       	movw	r28, r24
    54a4:	d6 2e       	mov	r13, r22
    54a6:	f4 2e       	mov	r15, r20
    54a8:	12 2f       	mov	r17, r18
    digitalWrite(_ss, LOW);
    54aa:	60 e0       	ldi	r22, 0x00	; 0
    54ac:	88 81       	ld	r24, Y
    54ae:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
	delay(1);
    54b2:	61 e0       	ldi	r22, 0x01	; 1
    54b4:	70 e0       	ldi	r23, 0x00	; 0
    54b6:	80 e0       	ldi	r24, 0x00	; 0
    54b8:	90 e0       	ldi	r25, 0x00	; 0
    54ba:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
	SPI.transfer(WRITE);
    54be:	82 e0       	ldi	r24, 0x02	; 2
    54c0:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(addr);
    54c4:	8d 2d       	mov	r24, r13
    54c6:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(value);
    54ca:	8f 2d       	mov	r24, r15
    54cc:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    SPI.transfer(value2);
    54d0:	81 2f       	mov	r24, r17
    54d2:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    SPI.transfer(value3);
    54d6:	80 2f       	mov	r24, r16
    54d8:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    SPI.transfer(value4);
    54dc:	8e 2d       	mov	r24, r14
    54de:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	delay(1);
    54e2:	61 e0       	ldi	r22, 0x01	; 1
    54e4:	70 e0       	ldi	r23, 0x00	; 0
    54e6:	80 e0       	ldi	r24, 0x00	; 0
    54e8:	90 e0       	ldi	r25, 0x00	; 0
    54ea:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
	digitalWrite(_ss, HIGH);
    54ee:	61 e0       	ldi	r22, 0x01	; 1
    54f0:	88 81       	ld	r24, Y
    54f2:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
	delay(1);
    54f6:	61 e0       	ldi	r22, 0x01	; 1
    54f8:	70 e0       	ldi	r23, 0x00	; 0
    54fa:	80 e0       	ldi	r24, 0x00	; 0
    54fc:	90 e0       	ldi	r25, 0x00	; 0
}
    54fe:	df 91       	pop	r29
    5500:	cf 91       	pop	r28
    5502:	1f 91       	pop	r17
    5504:	0f 91       	pop	r16
    5506:	ff 90       	pop	r15
    5508:	ef 90       	pop	r14
    550a:	df 90       	pop	r13
    SPI.transfer(value2);
    SPI.transfer(value3);
    SPI.transfer(value4);
	delay(1);
	digitalWrite(_ss, HIGH);
	delay(1);
    550c:	0c 94 9f 26 	jmp	0x4d3e	; 0x4d3e <delay>

00005510 <_ZN6CANBus12clearFiltersEv>:

	this->setMode(NORMAL);
}


void CANBus::clearFilters(void){
    5510:	ef 92       	push	r14
    5512:	0f 93       	push	r16
    5514:	cf 93       	push	r28
    5516:	df 93       	push	r29
    5518:	ec 01       	movw	r28, r24
    this->writeRegister(RXM0SIDH, 0, 0, 0, 0 );
    551a:	e1 2c       	mov	r14, r1
    551c:	00 e0       	ldi	r16, 0x00	; 0
    551e:	20 e0       	ldi	r18, 0x00	; 0
    5520:	40 e0       	ldi	r20, 0x00	; 0
    5522:	60 e2       	ldi	r22, 0x20	; 32
    5524:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>
    this->writeRegister(RXM1SIDH, 0, 0, 0, 0 );
    5528:	20 e0       	ldi	r18, 0x00	; 0
    552a:	40 e0       	ldi	r20, 0x00	; 0
    552c:	64 e2       	ldi	r22, 0x24	; 36
    552e:	ce 01       	movw	r24, r28
    5530:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>
}
    5534:	df 91       	pop	r29
    5536:	cf 91       	pop	r28
    5538:	0f 91       	pop	r16
    553a:	ef 90       	pop	r14
    553c:	08 95       	ret

0000553e <_ZN6CANBus9setFilterEhmm>:
    SPI.transfer(value);
    digitalWrite(_ss, HIGH);
}

//Modified by jacob psimos 1/13/2017 jpsimos@gmail.com
void CANBus::setFilter( uint8_t ide, uint32_t filter0, uint32_t filter1 ){
    553e:	4f 92       	push	r4
    5540:	5f 92       	push	r5
    5542:	6f 92       	push	r6
    5544:	7f 92       	push	r7
    5546:	8f 92       	push	r8
    5548:	9f 92       	push	r9
    554a:	af 92       	push	r10
    554c:	bf 92       	push	r11
    554e:	df 92       	push	r13
    5550:	ef 92       	push	r14
    5552:	ff 92       	push	r15
    5554:	0f 93       	push	r16
    5556:	1f 93       	push	r17
    5558:	cf 93       	push	r28
    555a:	df 93       	push	r29
    555c:	ec 01       	movw	r28, r24
    555e:	d6 2e       	mov	r13, r22
    5560:	29 01       	movw	r4, r18
    5562:	3a 01       	movw	r6, r20
    5564:	47 01       	movw	r8, r14
    5566:	58 01       	movw	r10, r16

    this->setMode(CONFIGURATION);
    5568:	60 e0       	ldi	r22, 0x00	; 0
    556a:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    this->clearFilters();
    556e:	ce 01       	movw	r24, r28
    5570:	0e 94 88 2a 	call	0x5510	; 0x5510 <_ZN6CANBus12clearFiltersEv>
    this->bitModify(CANINTF, 0, 0x03);
    5574:	23 e0       	ldi	r18, 0x03	; 3
    5576:	40 e0       	ldi	r20, 0x00	; 0
    5578:	6c e2       	ldi	r22, 0x2C	; 44
    557a:	ce 01       	movw	r24, r28
    557c:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	
	if(filter0 == 0 && filter1 == 0){
    5580:	41 14       	cp	r4, r1
    5582:	51 04       	cpc	r5, r1
    5584:	61 04       	cpc	r6, r1
    5586:	71 04       	cpc	r7, r1
    5588:	a1 f4       	brne	.+40     	; 0x55b2 <_ZN6CANBus9setFilterEhmm+0x74>
    558a:	ef 28       	or	r14, r15
    558c:	e0 2a       	or	r14, r16
    558e:	e1 2a       	or	r14, r17
    5590:	81 f4       	brne	.+32     	; 0x55b2 <_ZN6CANBus9setFilterEhmm+0x74>
	    if(ide){
    5592:	dd 20       	and	r13, r13
    5594:	09 f4       	brne	.+2      	; 0x5598 <_ZN6CANBus9setFilterEhmm+0x5a>
    5596:	92 c0       	rjmp	.+292    	; 0x56bc <_ZN6CANBus9setFilterEhmm+0x17e>
			bitModify(RXF0SIDL, 0x08, 0x08);
    5598:	28 e0       	ldi	r18, 0x08	; 8
    559a:	48 e0       	ldi	r20, 0x08	; 8
    559c:	61 e0       	ldi	r22, 0x01	; 1
    559e:	ce 01       	movw	r24, r28
    55a0:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
			bitModify(RXF1SIDL, 0x08, 0x08);
    55a4:	28 e0       	ldi	r18, 0x08	; 8
    55a6:	48 e0       	ldi	r20, 0x08	; 8
    55a8:	65 e0       	ldi	r22, 0x05	; 5
    55aa:	ce 01       	movw	r24, r28
    55ac:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    55b0:	85 c0       	rjmp	.+266    	; 0x56bc <_ZN6CANBus9setFilterEhmm+0x17e>
	byte EID8 = 0;
	byte EID0 = 0;

	// RXB0
	if (ide) {
		byte1 = byte ((filter0 << 3) >> 24); // 8 MSBits of SID
    55b2:	d3 01       	movw	r26, r6
    55b4:	c2 01       	movw	r24, r4
	byte SIDL = 0;
	byte EID8 = 0;
	byte EID0 = 0;

	// RXB0
	if (ide) {
    55b6:	dd 20       	and	r13, r13
    55b8:	d1 f0       	breq	.+52     	; 0x55ee <_ZN6CANBus9setFilterEhmm+0xb0>
		byte1 = byte ((filter0 << 3) >> 24); // 8 MSBits of SID
    55ba:	e3 e0       	ldi	r30, 0x03	; 3
    55bc:	88 0f       	add	r24, r24
    55be:	99 1f       	adc	r25, r25
    55c0:	aa 1f       	adc	r26, r26
    55c2:	bb 1f       	adc	r27, r27
    55c4:	ea 95       	dec	r30
    55c6:	d1 f7       	brne	.-12     	; 0x55bc <_ZN6CANBus9setFilterEhmm+0x7e>
    55c8:	4b 2f       	mov	r20, r27
		byte2 = byte ((filter0 << 11) >> 24) & 0xE0; // 3 LSBits of SID
    55ca:	d3 01       	movw	r26, r6
    55cc:	c2 01       	movw	r24, r4
    55ce:	fb e0       	ldi	r31, 0x0B	; 11
    55d0:	88 0f       	add	r24, r24
    55d2:	99 1f       	adc	r25, r25
    55d4:	aa 1f       	adc	r26, r26
    55d6:	bb 1f       	adc	r27, r27
    55d8:	fa 95       	dec	r31
    55da:	d1 f7       	brne	.-12     	; 0x55d0 <_ZN6CANBus9setFilterEhmm+0x92>
    55dc:	8b 2f       	mov	r24, r27
    55de:	80 7e       	andi	r24, 0xE0	; 224
		byte2 = byte2 | byte ((filter0 << 14) >> 30); // 2 MSBits of EID
		byte2 = byte2 | 0x08; // EXIDE
    55e0:	26 2d       	mov	r18, r6
    55e2:	23 70       	andi	r18, 0x03	; 3
    55e4:	28 60       	ori	r18, 0x08	; 8
    55e6:	28 2b       	or	r18, r24
		byte3 = byte ((filter0 << 16) >> 24); // EID Bits 15-8
    55e8:	05 2d       	mov	r16, r5
		byte4 = byte ((filter0 << 24) >> 24); // EID Bits 7-0
    55ea:	e4 2c       	mov	r14, r4
    55ec:	15 c0       	rjmp	.+42     	; 0x5618 <_ZN6CANBus9setFilterEhmm+0xda>
	} else {
		byte1 = byte ((filter0 << 21) >> 24); // 8 MSBits of SID
    55ee:	65 e1       	ldi	r22, 0x15	; 21
    55f0:	88 0f       	add	r24, r24
    55f2:	99 1f       	adc	r25, r25
    55f4:	aa 1f       	adc	r26, r26
    55f6:	bb 1f       	adc	r27, r27
    55f8:	6a 95       	dec	r22
    55fa:	d1 f7       	brne	.-12     	; 0x55f0 <_ZN6CANBus9setFilterEhmm+0xb2>
    55fc:	4b 2f       	mov	r20, r27
		byte2 = byte ((filter0 << 29) >> 24) & 0xE0; // 3 LSBits of SID
    55fe:	d3 01       	movw	r26, r6
    5600:	c2 01       	movw	r24, r4
    5602:	7d e1       	ldi	r23, 0x1D	; 29
    5604:	88 0f       	add	r24, r24
    5606:	99 1f       	adc	r25, r25
    5608:	aa 1f       	adc	r26, r26
    560a:	bb 1f       	adc	r27, r27
    560c:	7a 95       	dec	r23
    560e:	d1 f7       	brne	.-12     	; 0x5604 <_ZN6CANBus9setFilterEhmm+0xc6>
    5610:	2b 2f       	mov	r18, r27
    5612:	20 7e       	andi	r18, 0xE0	; 224
		byte3 = 0; // TXBnEID8
		byte4 = 0; // TXBnEID0
    5614:	e1 2c       	mov	r14, r1
		byte3 = byte ((filter0 << 16) >> 24); // EID Bits 15-8
		byte4 = byte ((filter0 << 24) >> 24); // EID Bits 7-0
	} else {
		byte1 = byte ((filter0 << 21) >> 24); // 8 MSBits of SID
		byte2 = byte ((filter0 << 29) >> 24) & 0xE0; // 3 LSBits of SID
		byte3 = 0; // TXBnEID8
    5616:	00 e0       	ldi	r16, 0x00	; 0
		byte4 = 0; // TXBnEID0
	}
	
	this->writeRegister(RXF0SIDH, byte1, byte2, byte3, byte4 );
    5618:	60 e0       	ldi	r22, 0x00	; 0
    561a:	ce 01       	movw	r24, r28
    561c:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>

	if (ide) {
		byte1 = byte ((filter1 << 3) >> 24); // 8 MSBits of SID
    5620:	d5 01       	movw	r26, r10
    5622:	c4 01       	movw	r24, r8
		byte4 = 0; // TXBnEID0
	}
	
	this->writeRegister(RXF0SIDH, byte1, byte2, byte3, byte4 );

	if (ide) {
    5624:	dd 20       	and	r13, r13
    5626:	d1 f0       	breq	.+52     	; 0x565c <_ZN6CANBus9setFilterEhmm+0x11e>
		byte1 = byte ((filter1 << 3) >> 24); // 8 MSBits of SID
    5628:	43 e0       	ldi	r20, 0x03	; 3
    562a:	88 0f       	add	r24, r24
    562c:	99 1f       	adc	r25, r25
    562e:	aa 1f       	adc	r26, r26
    5630:	bb 1f       	adc	r27, r27
    5632:	4a 95       	dec	r20
    5634:	d1 f7       	brne	.-12     	; 0x562a <_ZN6CANBus9setFilterEhmm+0xec>
    5636:	4b 2f       	mov	r20, r27
		byte2 = byte ((filter1 << 11) >> 24) & 0xE0; // 3 LSBits of SID
    5638:	d5 01       	movw	r26, r10
    563a:	c4 01       	movw	r24, r8
    563c:	5b e0       	ldi	r21, 0x0B	; 11
    563e:	88 0f       	add	r24, r24
    5640:	99 1f       	adc	r25, r25
    5642:	aa 1f       	adc	r26, r26
    5644:	bb 1f       	adc	r27, r27
    5646:	5a 95       	dec	r21
    5648:	d1 f7       	brne	.-12     	; 0x563e <_ZN6CANBus9setFilterEhmm+0x100>
    564a:	8b 2f       	mov	r24, r27
    564c:	80 7e       	andi	r24, 0xE0	; 224
		byte2 = byte2 | byte ((filter1 << 14) >> 30); // 2 MSBits of EID
		byte2 = byte2 | 0x08; // EXIDE
    564e:	2a 2d       	mov	r18, r10
    5650:	23 70       	andi	r18, 0x03	; 3
    5652:	28 60       	ori	r18, 0x08	; 8
    5654:	28 2b       	or	r18, r24
		byte3 = byte ((filter1 << 16) >> 24); // EID Bits 15-8
    5656:	09 2d       	mov	r16, r9
		byte4 = byte ((filter1 << 24) >> 24); // EID Bits 7-0
    5658:	e8 2c       	mov	r14, r8
    565a:	15 c0       	rjmp	.+42     	; 0x5686 <_ZN6CANBus9setFilterEhmm+0x148>
	} else {
		byte1 = byte ((filter1 << 21) >> 24); // 8 MSBits of SID
    565c:	25 e1       	ldi	r18, 0x15	; 21
    565e:	88 0f       	add	r24, r24
    5660:	99 1f       	adc	r25, r25
    5662:	aa 1f       	adc	r26, r26
    5664:	bb 1f       	adc	r27, r27
    5666:	2a 95       	dec	r18
    5668:	d1 f7       	brne	.-12     	; 0x565e <_ZN6CANBus9setFilterEhmm+0x120>
    566a:	4b 2f       	mov	r20, r27
		byte2 = byte ((filter1 << 29) >> 24) & 0xE0; // 3 LSBits of SID
    566c:	d5 01       	movw	r26, r10
    566e:	c4 01       	movw	r24, r8
    5670:	3d e1       	ldi	r19, 0x1D	; 29
    5672:	88 0f       	add	r24, r24
    5674:	99 1f       	adc	r25, r25
    5676:	aa 1f       	adc	r26, r26
    5678:	bb 1f       	adc	r27, r27
    567a:	3a 95       	dec	r19
    567c:	d1 f7       	brne	.-12     	; 0x5672 <_ZN6CANBus9setFilterEhmm+0x134>
    567e:	2b 2f       	mov	r18, r27
    5680:	20 7e       	andi	r18, 0xE0	; 224
		byte3 = 0; // TXBnEID8
		byte4 = 0; // TXBnEID0
    5682:	e1 2c       	mov	r14, r1
		byte3 = byte ((filter1 << 16) >> 24); // EID Bits 15-8
		byte4 = byte ((filter1 << 24) >> 24); // EID Bits 7-0
	} else {
		byte1 = byte ((filter1 << 21) >> 24); // 8 MSBits of SID
		byte2 = byte ((filter1 << 29) >> 24) & 0xE0; // 3 LSBits of SID
		byte3 = 0; // TXBnEID8
    5684:	00 e0       	ldi	r16, 0x00	; 0
		byte4 = 0; // TXBnEID0
	}
	
	this->writeRegister(RXF1SIDH, byte1, byte2, byte3, byte4 );
    5686:	64 e0       	ldi	r22, 0x04	; 4
    5688:	ce 01       	movw	r24, r28
    568a:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>

	if (ide) {
    568e:	d1 10       	cpse	r13, r1
    5690:	04 c0       	rjmp	.+8      	; 0x569a <_ZN6CANBus9setFilterEhmm+0x15c>
		EID8 = 0xFF;
		EID0 = 0xFF;
	} else  {
		SIDH = byte ((0xFFFFFFFF << 21) >> 24);
		SIDL = byte ((0xFFFFFFFF << 29) >> 24) & 0xE0;
		EID8 = 0x00;
    5692:	10 e0       	ldi	r17, 0x00	; 0
		SIDL = SIDL | byte ((0xFFFFFFFF << 14) >> 30);
		EID8 = 0xFF;
		EID0 = 0xFF;
	} else  {
		SIDH = byte ((0xFFFFFFFF << 21) >> 24);
		SIDL = byte ((0xFFFFFFFF << 29) >> 24) & 0xE0;
    5694:	90 ee       	ldi	r25, 0xE0	; 224
    5696:	d9 2e       	mov	r13, r25
    5698:	03 c0       	rjmp	.+6      	; 0x56a0 <_ZN6CANBus9setFilterEhmm+0x162>

	if (ide) {
		SIDH = byte ((0xFFFFFFFF << 3) >> 24);
		SIDL = byte ((0xFFFFFFFF << 11) >> 24) & 0xE0;
		SIDL = SIDL | byte ((0xFFFFFFFF << 14) >> 30);
		EID8 = 0xFF;
    569a:	1f ef       	ldi	r17, 0xFF	; 255
	this->writeRegister(RXF1SIDH, byte1, byte2, byte3, byte4 );

	if (ide) {
		SIDH = byte ((0xFFFFFFFF << 3) >> 24);
		SIDL = byte ((0xFFFFFFFF << 11) >> 24) & 0xE0;
		SIDL = SIDL | byte ((0xFFFFFFFF << 14) >> 30);
    569c:	83 ee       	ldi	r24, 0xE3	; 227
    569e:	d8 2e       	mov	r13, r24
		SIDL = byte ((0xFFFFFFFF << 29) >> 24) & 0xE0;
		EID8 = 0x00;
		EID0 = 0x00;
	}
	
	this->writeRegister(RXM0SIDH, SIDH, SIDL, EID8, EID0);
    56a0:	e1 2e       	mov	r14, r17
    56a2:	01 2f       	mov	r16, r17
    56a4:	2d 2d       	mov	r18, r13
    56a6:	4f ef       	ldi	r20, 0xFF	; 255
    56a8:	60 e2       	ldi	r22, 0x20	; 32
    56aa:	ce 01       	movw	r24, r28
    56ac:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>
	this->writeRegister(RXM1SIDH, SIDH, SIDL, EID8, EID0);
    56b0:	2d 2d       	mov	r18, r13
    56b2:	4f ef       	ldi	r20, 0xFF	; 255
    56b4:	64 e2       	ldi	r22, 0x24	; 36
    56b6:	ce 01       	movw	r24, r28
    56b8:	0e 94 4a 2a 	call	0x5494	; 0x5494 <_ZN6CANBus13writeRegisterEhhhhh>

	this->setMode(NORMAL);
    56bc:	61 e0       	ldi	r22, 0x01	; 1
    56be:	ce 01       	movw	r24, r28
}
    56c0:	df 91       	pop	r29
    56c2:	cf 91       	pop	r28
    56c4:	1f 91       	pop	r17
    56c6:	0f 91       	pop	r16
    56c8:	ff 90       	pop	r15
    56ca:	ef 90       	pop	r14
    56cc:	df 90       	pop	r13
    56ce:	bf 90       	pop	r11
    56d0:	af 90       	pop	r10
    56d2:	9f 90       	pop	r9
    56d4:	8f 90       	pop	r8
    56d6:	7f 90       	pop	r7
    56d8:	6f 90       	pop	r6
    56da:	5f 90       	pop	r5
    56dc:	4f 90       	pop	r4
	}
	
	this->writeRegister(RXM0SIDH, SIDH, SIDL, EID8, EID0);
	this->writeRegister(RXM1SIDH, SIDH, SIDL, EID8, EID0);

	this->setMode(NORMAL);
    56de:	0c 94 e5 29 	jmp	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>

000056e2 <_ZN6CANBus9getNextTxEPhS0_>:
	delay(1);
	digitalWrite(_ss, HIGH);
	delay(1);
}

bool CANBus::getNextTx(uint8_t *channel, uint8_t *sendBuffer){
    56e2:	0f 93       	push	r16
    56e4:	1f 93       	push	r17
    56e6:	cf 93       	push	r28
    56e8:	df 93       	push	r29
    56ea:	eb 01       	movw	r28, r22
    56ec:	8a 01       	movw	r16, r20
    const uint8_t stat = this->readStatus();
    56ee:	0e 94 16 2a 	call	0x542c	; 0x542c <_ZN6CANBus10readStatusEv>
	
	if( (stat & 0x4) != 0x4 ){
    56f2:	82 fd       	sbrc	r24, 2
    56f4:	05 c0       	rjmp	.+10     	; 0x5700 <_ZN6CANBus9getNextTxEPhS0_+0x1e>
		*sendBuffer = SEND_TX_BUF_0;
    56f6:	81 e8       	ldi	r24, 0x81	; 129
    56f8:	f8 01       	movw	r30, r16
    56fa:	80 83       	st	Z, r24
		*channel = 0;
    56fc:	18 82       	st	Y, r1
    56fe:	0f c0       	rjmp	.+30     	; 0x571e <_ZN6CANBus9getNextTxEPhS0_+0x3c>
		return true;
	}

    if( (stat & 0x10) != 0x10 ){
    5700:	84 fd       	sbrc	r24, 4
    5702:	06 c0       	rjmp	.+12     	; 0x5710 <_ZN6CANBus9getNextTxEPhS0_+0x2e>
		*sendBuffer = SEND_TX_BUF_1;
    5704:	82 e8       	ldi	r24, 0x82	; 130
    5706:	f8 01       	movw	r30, r16
    5708:	80 83       	st	Z, r24
		*channel = 1;
    570a:	81 e0       	ldi	r24, 0x01	; 1
    570c:	88 83       	st	Y, r24
		return true;
    570e:	0e c0       	rjmp	.+28     	; 0x572c <_ZN6CANBus9getNextTxEPhS0_+0x4a>
	}
	
    if( (stat & 0x40) != 0x40 ){
    5710:	86 fd       	sbrc	r24, 6
    5712:	07 c0       	rjmp	.+14     	; 0x5722 <_ZN6CANBus9getNextTxEPhS0_+0x40>
		*sendBuffer = SEND_TX_BUF_0;
    5714:	81 e8       	ldi	r24, 0x81	; 129
    5716:	f8 01       	movw	r30, r16
    5718:	80 83       	st	Z, r24
		*channel = 2;
    571a:	82 e0       	ldi	r24, 0x02	; 2
    571c:	88 83       	st	Y, r24
		return true;
    571e:	81 e0       	ldi	r24, 0x01	; 1
    5720:	05 c0       	rjmp	.+10     	; 0x572c <_ZN6CANBus9getNextTxEPhS0_+0x4a>
	}
	
	*sendBuffer = 0xFF;
    5722:	8f ef       	ldi	r24, 0xFF	; 255
    5724:	f8 01       	movw	r30, r16
    5726:	80 83       	st	Z, r24
    *channel = 0xFF;
    5728:	88 83       	st	Y, r24
	return false;
    572a:	80 e0       	ldi	r24, 0x00	; 0
}
    572c:	df 91       	pop	r29
    572e:	cf 91       	pop	r28
    5730:	1f 91       	pop	r17
    5732:	0f 91       	pop	r16
    5734:	08 95       	ret

00005736 <_ZN6CANBus9getNextRxEPhS0_>:

bool CANBus::getNextRx(uint8_t *status, uint8_t *rxBuffer){
    5736:	0f 93       	push	r16
    5738:	1f 93       	push	r17
    573a:	cf 93       	push	r28
    573c:	df 93       	push	r29
    573e:	eb 01       	movw	r28, r22
    5740:	8a 01       	movw	r16, r20
	uint8_t _status = this->readStatus();
    5742:	0e 94 16 2a 	call	0x542c	; 0x542c <_ZN6CANBus10readStatusEv>
	if( (_status & 0x1) == 0x1 ){
    5746:	80 ff       	sbrs	r24, 0
    5748:	02 c0       	rjmp	.+4      	; 0x574e <_ZN6CANBus9getNextRxEPhS0_+0x18>
		*rxBuffer = READ_RX_BUF_0_ID;
    574a:	90 e9       	ldi	r25, 0x90	; 144
    574c:	03 c0       	rjmp	.+6      	; 0x5754 <_ZN6CANBus9getNextRxEPhS0_+0x1e>
		*status = _status;
		return true;
	}else if((_status & 0x2) == 0x2 ){
    574e:	81 ff       	sbrs	r24, 1
    5750:	06 c0       	rjmp	.+12     	; 0x575e <_ZN6CANBus9getNextRxEPhS0_+0x28>
		*rxBuffer = READ_RX_BUF_1_ID;
    5752:	94 e9       	ldi	r25, 0x94	; 148
    5754:	f8 01       	movw	r30, r16
    5756:	90 83       	st	Z, r25
		*status = _status;
    5758:	88 83       	st	Y, r24
		return true;
    575a:	81 e0       	ldi	r24, 0x01	; 1
    575c:	02 c0       	rjmp	.+4      	; 0x5762 <_ZN6CANBus9getNextRxEPhS0_+0x2c>
	}
	*status = _status;
    575e:	88 83       	st	Y, r24
	return false;
    5760:	80 e0       	ldi	r24, 0x00	; 0
}
    5762:	df 91       	pop	r29
    5764:	cf 91       	pop	r28
    5766:	1f 91       	pop	r17
    5768:	0f 91       	pop	r16
    576a:	08 95       	ret

0000576c <_ZN6CANBus6send_XEh>:


void CANBus::send_X(uint8_t SEND_TX_BUF_ID){
    576c:	1f 93       	push	r17
    576e:	cf 93       	push	r28
    5770:	df 93       	push	r29
    5772:	ec 01       	movw	r28, r24
    5774:	16 2f       	mov	r17, r22
	digitalWrite(_ss, LOW);
    5776:	60 e0       	ldi	r22, 0x00	; 0
    5778:	88 81       	ld	r24, Y
    577a:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
	SPI.transfer(SEND_TX_BUF_ID);
    577e:	81 2f       	mov	r24, r17
    5780:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	digitalWrite(_ss, HIGH);
    5784:	61 e0       	ldi	r22, 0x01	; 1
    5786:	88 81       	ld	r24, Y
}
    5788:	df 91       	pop	r29
    578a:	cf 91       	pop	r28
    578c:	1f 91       	pop	r17


void CANBus::send_X(uint8_t SEND_TX_BUF_ID){
	digitalWrite(_ss, LOW);
	SPI.transfer(SEND_TX_BUF_ID);
	digitalWrite(_ss, HIGH);
    578e:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

00005792 <_ZN6CANBus9load_ff_XEhhmPhh>:
}

void CANBus::load_ff_X(uint8_t bufferId, uint8_t length, uint32_t identifier, uint8_t *data, uint8_t ide){
    5792:	9f 92       	push	r9
    5794:	af 92       	push	r10
    5796:	bf 92       	push	r11
    5798:	cf 92       	push	r12
    579a:	df 92       	push	r13
    579c:	ef 92       	push	r14
    579e:	ff 92       	push	r15
    57a0:	0f 93       	push	r16
    57a2:	1f 93       	push	r17
    57a4:	cf 93       	push	r28
    57a6:	df 93       	push	r29
    57a8:	ec 01       	movw	r28, r24
    57aa:	d4 2e       	mov	r13, r20
    57ac:	63 30       	cpi	r22, 0x03	; 3
    57ae:	30 f4       	brcc	.+12     	; 0x57bc <_ZN6CANBus9load_ff_XEhhmPhh+0x2a>
    57b0:	e6 2f       	mov	r30, r22
    57b2:	f0 e0       	ldi	r31, 0x00	; 0
    57b4:	e9 59       	subi	r30, 0x99	; 153
    57b6:	fe 4f       	sbci	r31, 0xFE	; 254
    57b8:	a0 80       	ld	r10, Z
    57ba:	02 c0       	rjmp	.+4      	; 0x57c0 <_ZN6CANBus9load_ff_XEhhmPhh+0x2e>
    57bc:	aa 24       	eor	r10, r10
    57be:	aa 94       	dec	r10
		break;
	}
	
	//generate id uint8_ts before SPI write
	if (ide) {
		byte1 = uint8_t ((identifier << 3) >> 24); // 8 MSBits of SID
    57c0:	d9 01       	movw	r26, r18
    57c2:	c8 01       	movw	r24, r16
			TX_BUFFER_ID_X = 0xFF;
		break;
	}
	
	//generate id uint8_ts before SPI write
	if (ide) {
    57c4:	cc 20       	and	r12, r12
    57c6:	d1 f0       	breq	.+52     	; 0x57fc <_ZN6CANBus9load_ff_XEhhmPhh+0x6a>
		byte1 = uint8_t ((identifier << 3) >> 24); // 8 MSBits of SID
    57c8:	63 e0       	ldi	r22, 0x03	; 3
    57ca:	88 0f       	add	r24, r24
    57cc:	99 1f       	adc	r25, r25
    57ce:	aa 1f       	adc	r26, r26
    57d0:	bb 1f       	adc	r27, r27
    57d2:	6a 95       	dec	r22
    57d4:	d1 f7       	brne	.-12     	; 0x57ca <_ZN6CANBus9load_ff_XEhhmPhh+0x38>
    57d6:	bb 2e       	mov	r11, r27
		byte2 = uint8_t ((identifier << 11) >> 24) & 0xE0; // 3 LSBits of SID
    57d8:	d9 01       	movw	r26, r18
    57da:	c8 01       	movw	r24, r16
    57dc:	7b e0       	ldi	r23, 0x0B	; 11
    57de:	88 0f       	add	r24, r24
    57e0:	99 1f       	adc	r25, r25
    57e2:	aa 1f       	adc	r26, r26
    57e4:	bb 1f       	adc	r27, r27
    57e6:	7a 95       	dec	r23
    57e8:	d1 f7       	brne	.-12     	; 0x57de <_ZN6CANBus9load_ff_XEhhmPhh+0x4c>
    57ea:	8b 2f       	mov	r24, r27
    57ec:	80 7e       	andi	r24, 0xE0	; 224
		byte2 = byte2 | uint8_t ((identifier << 14) >> 30); // 2 MSBits of EID
		byte2 = byte2 | 0x08; // EXIDE
    57ee:	92 2f       	mov	r25, r18
    57f0:	93 70       	andi	r25, 0x03	; 3
    57f2:	98 60       	ori	r25, 0x08	; 8
    57f4:	c9 2e       	mov	r12, r25
    57f6:	c8 2a       	or	r12, r24
		byte3 = uint8_t ((identifier << 16) >> 24); // EID Bits 15-8
    57f8:	91 2e       	mov	r9, r17
    57fa:	14 c0       	rjmp	.+40     	; 0x5824 <_ZN6CANBus9load_ff_XEhhmPhh+0x92>
		byte4 = uint8_t ((identifier << 24) >> 24); // EID Bits 7-0
	} else {
		byte1 = uint8_t ((identifier << 21) >> 24); // 8 MSBits of SID
    57fc:	45 e1       	ldi	r20, 0x15	; 21
    57fe:	88 0f       	add	r24, r24
    5800:	99 1f       	adc	r25, r25
    5802:	aa 1f       	adc	r26, r26
    5804:	bb 1f       	adc	r27, r27
    5806:	4a 95       	dec	r20
    5808:	d1 f7       	brne	.-12     	; 0x57fe <_ZN6CANBus9load_ff_XEhhmPhh+0x6c>
    580a:	bb 2e       	mov	r11, r27
		byte2 = uint8_t ((identifier << 29) >> 24) & 0xE0; // 3 LSBits of SID
    580c:	5d e1       	ldi	r21, 0x1D	; 29
    580e:	00 0f       	add	r16, r16
    5810:	11 1f       	adc	r17, r17
    5812:	22 1f       	adc	r18, r18
    5814:	33 1f       	adc	r19, r19
    5816:	5a 95       	dec	r21
    5818:	d1 f7       	brne	.-12     	; 0x580e <_ZN6CANBus9load_ff_XEhhmPhh+0x7c>
    581a:	83 2f       	mov	r24, r19
    581c:	80 7e       	andi	r24, 0xE0	; 224
    581e:	c8 2e       	mov	r12, r24
		byte3 = 0; // TXBnEID8
		byte4 = 0; // TXBnEID0
    5820:	00 e0       	ldi	r16, 0x00	; 0
		byte3 = uint8_t ((identifier << 16) >> 24); // EID Bits 15-8
		byte4 = uint8_t ((identifier << 24) >> 24); // EID Bits 7-0
	} else {
		byte1 = uint8_t ((identifier << 21) >> 24); // 8 MSBits of SID
		byte2 = uint8_t ((identifier << 29) >> 24) & 0xE0; // 3 LSBits of SID
		byte3 = 0; // TXBnEID8
    5822:	91 2c       	mov	r9, r1
		byte4 = 0; // TXBnEID0
	}

	digitalWrite(_ss, LOW);
    5824:	60 e0       	ldi	r22, 0x00	; 0
    5826:	88 81       	ld	r24, Y
    5828:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
	SPI.transfer(TX_BUFFER_ID_X);
    582c:	8a 2d       	mov	r24, r10
    582e:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(byte1); //identifier high bits
    5832:	8b 2d       	mov	r24, r11
    5834:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(byte2); //identifier low bits
    5838:	8c 2d       	mov	r24, r12
    583a:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(byte3); //extended identifier registers, high bits
    583e:	89 2d       	mov	r24, r9
    5840:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(byte4); //extended identifier registers, low bits
    5844:	80 2f       	mov	r24, r16
    5846:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(length);
    584a:	8d 2d       	mov	r24, r13
    584c:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5850:	87 01       	movw	r16, r14
    5852:	ed 0c       	add	r14, r13
    5854:	f1 1c       	adc	r15, r1
	for (i=0;i<length;i++) { //load data buffer
    5856:	0e 15       	cp	r16, r14
    5858:	1f 05       	cpc	r17, r15
    585a:	31 f0       	breq	.+12     	; 0x5868 <_ZN6CANBus9load_ff_XEhhmPhh+0xd6>
		SPI.transfer(data[i]);
    585c:	f8 01       	movw	r30, r16
    585e:	81 91       	ld	r24, Z+
    5860:	8f 01       	movw	r16, r30
    5862:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	SPI.transfer(byte1); //identifier high bits
	SPI.transfer(byte2); //identifier low bits
	SPI.transfer(byte3); //extended identifier registers, high bits
	SPI.transfer(byte4); //extended identifier registers, low bits
	SPI.transfer(length);
	for (i=0;i<length;i++) { //load data buffer
    5866:	f7 cf       	rjmp	.-18     	; 0x5856 <_ZN6CANBus9load_ff_XEhhmPhh+0xc4>
		SPI.transfer(data[i]);
	}
	digitalWrite(_ss, HIGH);
    5868:	61 e0       	ldi	r22, 0x01	; 1
    586a:	88 81       	ld	r24, Y
}
    586c:	df 91       	pop	r29
    586e:	cf 91       	pop	r28
    5870:	1f 91       	pop	r17
    5872:	0f 91       	pop	r16
    5874:	ff 90       	pop	r15
    5876:	ef 90       	pop	r14
    5878:	df 90       	pop	r13
    587a:	cf 90       	pop	r12
    587c:	bf 90       	pop	r11
    587e:	af 90       	pop	r10
    5880:	9f 90       	pop	r9
	SPI.transfer(byte4); //extended identifier registers, low bits
	SPI.transfer(length);
	for (i=0;i<length;i++) { //load data buffer
		SPI.transfer(data[i]);
	}
	digitalWrite(_ss, HIGH);
    5882:	0c 94 aa 27 	jmp	0x4f54	; 0x4f54 <digitalWrite>

00005886 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_>:
}

void CANBus::readDATA_ff_X(uint8_t readBuffer, uint8_t* length_out, uint8_t *data_out,
    uint32_t *id_out, uint8_t *ide){
    5886:	2f 92       	push	r2
    5888:	3f 92       	push	r3
    588a:	4f 92       	push	r4
    588c:	5f 92       	push	r5
    588e:	6f 92       	push	r6
    5890:	7f 92       	push	r7
    5892:	8f 92       	push	r8
    5894:	9f 92       	push	r9
    5896:	af 92       	push	r10
    5898:	bf 92       	push	r11
    589a:	cf 92       	push	r12
    589c:	df 92       	push	r13
    589e:	ef 92       	push	r14
    58a0:	ff 92       	push	r15
    58a2:	0f 93       	push	r16
    58a4:	1f 93       	push	r17
    58a6:	cf 93       	push	r28
    58a8:	df 93       	push	r29

	if(length_out == (uint8_t*)NULL || data_out == (uint8_t*)NULL  || id_out == (uint32_t*)NULL  || ide == (uint8_t*)NULL){return;}
    58aa:	41 15       	cp	r20, r1
    58ac:	51 05       	cpc	r21, r1
    58ae:	09 f4       	brne	.+2      	; 0x58b2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x2c>
    58b0:	a0 c0       	rjmp	.+320    	; 0x59f2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x16c>
    58b2:	21 15       	cp	r18, r1
    58b4:	31 05       	cpc	r19, r1
    58b6:	09 f4       	brne	.+2      	; 0x58ba <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x34>
    58b8:	9c c0       	rjmp	.+312    	; 0x59f2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x16c>
    58ba:	01 15       	cp	r16, r1
    58bc:	11 05       	cpc	r17, r1
    58be:	09 f4       	brne	.+2      	; 0x58c2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x3c>
    58c0:	98 c0       	rjmp	.+304    	; 0x59f2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x16c>
    58c2:	e1 14       	cp	r14, r1
    58c4:	f1 04       	cpc	r15, r1
    58c6:	09 f4       	brne	.+2      	; 0x58ca <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x44>
    58c8:	94 c0       	rjmp	.+296    	; 0x59f2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x16c>
    58ca:	e8 01       	movw	r28, r16
    58cc:	89 01       	movw	r16, r18
    58ce:	6a 01       	movw	r12, r20
    58d0:	96 2e       	mov	r9, r22
    58d2:	5c 01       	movw	r10, r24
	
	uint8_t i, len, byte1, byte2, byte3, byte4;

	digitalWrite(_ss, LOW);
    58d4:	60 e0       	ldi	r22, 0x00	; 0
    58d6:	fc 01       	movw	r30, r24
    58d8:	80 81       	ld	r24, Z
    58da:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
	SPI.transfer(readBuffer);
    58de:	89 2d       	mov	r24, r9
    58e0:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
	byte1 = SPI.transfer(0xFF); //id high
    58e4:	8f ef       	ldi	r24, 0xFF	; 255
    58e6:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    58ea:	38 2e       	mov	r3, r24
	byte2 = SPI.transfer(0xFF); //id low
    58ec:	8f ef       	ldi	r24, 0xFF	; 255
    58ee:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    58f2:	58 2e       	mov	r5, r24
    byte3 = SPI.transfer(0xFF); //extended id high
    58f4:	8f ef       	ldi	r24, 0xFF	; 255
    58f6:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    58fa:	68 2e       	mov	r6, r24
    byte4 = SPI.transfer(0xFF); //extended id low
    58fc:	8f ef       	ldi	r24, 0xFF	; 255
    58fe:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5902:	78 2e       	mov	r7, r24
	len = (SPI.transfer(0xFF) & 0x0F); //data length code
    5904:	8f ef       	ldi	r24, 0xFF	; 255
    5906:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    590a:	8f 70       	andi	r24, 0x0F	; 15
    590c:	48 2e       	mov	r4, r24
    590e:	20 2e       	mov	r2, r16
    5910:	48 01       	movw	r8, r16
	
	for (i = 0; i < len; i++) {
    5912:	88 2d       	mov	r24, r8
    5914:	82 19       	sub	r24, r2
    5916:	84 15       	cp	r24, r4
    5918:	38 f4       	brcc	.+14     	; 0x5928 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0xa2>
		data_out[i] = SPI.transfer(0xFF);
    591a:	8f ef       	ldi	r24, 0xFF	; 255
    591c:	0e 94 02 28 	call	0x5004	; 0x5004 <_ZN8SPIClass8transferEh>
    5920:	f4 01       	movw	r30, r8
    5922:	81 93       	st	Z+, r24
    5924:	4f 01       	movw	r8, r30
    5926:	f5 cf       	rjmp	.-22     	; 0x5912 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x8c>
	}
	
	digitalWrite(_ss, HIGH);
    5928:	61 e0       	ldi	r22, 0x01	; 1
    592a:	f5 01       	movw	r30, r10
    592c:	80 81       	ld	r24, Z
    592e:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>

	(*length_out) = len;
    5932:	f6 01       	movw	r30, r12
    5934:	40 82       	st	Z, r4

	uint32_t id;
	(*ide) = (byte2 & 0x08);
    5936:	85 2d       	mov	r24, r5
    5938:	88 70       	andi	r24, 0x08	; 8
    593a:	f7 01       	movw	r30, r14
    593c:	80 83       	st	Z, r24
    593e:	23 2d       	mov	r18, r3
    5940:	30 e0       	ldi	r19, 0x00	; 0
    5942:	45 2d       	mov	r20, r5
    5944:	50 e0       	ldi	r21, 0x00	; 0
	if (*ide) {
    5946:	88 23       	and	r24, r24
    5948:	b1 f1       	breq	.+108    	; 0x59b6 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x130>
		// 29-bit message
		id = (byte1 >> 3);
		id = (id << 8) | ((byte1 << 5) | ((byte2 >> 5) << 2) | (byte2 & 0x03));
    594a:	c9 01       	movw	r24, r18
    594c:	a3 e0       	ldi	r26, 0x03	; 3
    594e:	95 95       	asr	r25
    5950:	87 95       	ror	r24
    5952:	aa 95       	dec	r26
    5954:	e1 f7       	brne	.-8      	; 0x594e <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0xc8>
    5956:	09 2e       	mov	r0, r25
    5958:	00 0c       	add	r0, r0
    595a:	aa 0b       	sbc	r26, r26
    595c:	bb 0b       	sbc	r27, r27
    595e:	cc 24       	eor	r12, r12
    5960:	d8 2e       	mov	r13, r24
    5962:	e9 2e       	mov	r14, r25
    5964:	fa 2e       	mov	r15, r26
		id = (id << 8) | byte3;
    5966:	05 e0       	ldi	r16, 0x05	; 5
    5968:	22 0f       	add	r18, r18
    596a:	33 1f       	adc	r19, r19
    596c:	0a 95       	dec	r16
    596e:	e1 f7       	brne	.-8      	; 0x5968 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0xe2>
    5970:	95 2d       	mov	r25, r5
    5972:	93 70       	andi	r25, 0x03	; 3
    5974:	29 2b       	or	r18, r25
    5976:	85 e0       	ldi	r24, 0x05	; 5
    5978:	55 95       	asr	r21
    597a:	47 95       	ror	r20
    597c:	8a 95       	dec	r24
    597e:	e1 f7       	brne	.-8      	; 0x5978 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0xf2>
    5980:	44 0f       	add	r20, r20
    5982:	55 1f       	adc	r21, r21
    5984:	44 0f       	add	r20, r20
    5986:	55 1f       	adc	r21, r21
    5988:	42 2b       	or	r20, r18
    598a:	53 2b       	or	r21, r19
    598c:	05 2e       	mov	r0, r21
    598e:	00 0c       	add	r0, r0
    5990:	66 0b       	sbc	r22, r22
    5992:	77 0b       	sbc	r23, r23
    5994:	db 01       	movw	r26, r22
    5996:	ca 01       	movw	r24, r20
    5998:	8c 29       	or	r24, r12
    599a:	9d 29       	or	r25, r13
    599c:	ae 29       	or	r26, r14
    599e:	bf 29       	or	r27, r15
    59a0:	ba 2f       	mov	r27, r26
    59a2:	a9 2f       	mov	r26, r25
    59a4:	98 2f       	mov	r25, r24
    59a6:	88 27       	eor	r24, r24
		id = (id << 8) | byte4;
    59a8:	86 29       	or	r24, r6
    59aa:	ba 2f       	mov	r27, r26
    59ac:	a9 2f       	mov	r26, r25
    59ae:	98 2f       	mov	r25, r24
    59b0:	88 27       	eor	r24, r24
		(*id_out) = id;
    59b2:	87 29       	or	r24, r7
    59b4:	1a c0       	rjmp	.+52     	; 0x59ea <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x164>
	} else {
		// 11-bit message
		(*id_out) = ((byte1 >> 5) << 8) | ((byte1 << 3) | (byte2 >> 5));
    59b6:	c9 01       	movw	r24, r18
    59b8:	63 e0       	ldi	r22, 0x03	; 3
    59ba:	88 0f       	add	r24, r24
    59bc:	99 1f       	adc	r25, r25
    59be:	6a 95       	dec	r22
    59c0:	e1 f7       	brne	.-8      	; 0x59ba <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x134>
    59c2:	75 e0       	ldi	r23, 0x05	; 5
    59c4:	55 95       	asr	r21
    59c6:	47 95       	ror	r20
    59c8:	7a 95       	dec	r23
    59ca:	e1 f7       	brne	.-8      	; 0x59c4 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x13e>
    59cc:	84 2b       	or	r24, r20
    59ce:	95 2b       	or	r25, r21
    59d0:	e5 e0       	ldi	r30, 0x05	; 5
    59d2:	35 95       	asr	r19
    59d4:	27 95       	ror	r18
    59d6:	ea 95       	dec	r30
    59d8:	e1 f7       	brne	.-8      	; 0x59d2 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_+0x14c>
    59da:	32 2f       	mov	r19, r18
    59dc:	22 27       	eor	r18, r18
    59de:	82 2b       	or	r24, r18
    59e0:	93 2b       	or	r25, r19
    59e2:	09 2e       	mov	r0, r25
    59e4:	00 0c       	add	r0, r0
    59e6:	aa 0b       	sbc	r26, r26
    59e8:	bb 0b       	sbc	r27, r27
    59ea:	88 83       	st	Y, r24
    59ec:	99 83       	std	Y+1, r25	; 0x01
    59ee:	aa 83       	std	Y+2, r26	; 0x02
    59f0:	bb 83       	std	Y+3, r27	; 0x03
	}

}
    59f2:	df 91       	pop	r29
    59f4:	cf 91       	pop	r28
    59f6:	1f 91       	pop	r17
    59f8:	0f 91       	pop	r16
    59fa:	ff 90       	pop	r15
    59fc:	ef 90       	pop	r14
    59fe:	df 90       	pop	r13
    5a00:	cf 90       	pop	r12
    5a02:	bf 90       	pop	r11
    5a04:	af 90       	pop	r10
    5a06:	9f 90       	pop	r9
    5a08:	8f 90       	pop	r8
    5a0a:	7f 90       	pop	r7
    5a0c:	6f 90       	pop	r6
    5a0e:	5f 90       	pop	r5
    5a10:	4f 90       	pop	r4
    5a12:	3f 90       	pop	r3
    5a14:	2f 90       	pop	r2
    5a16:	08 95       	ret

00005a18 <_ZN6CANBus9readFrameER7Message>:

bool CANBus::readFrame(Message &msg){
    5a18:	bf 92       	push	r11
    5a1a:	cf 92       	push	r12
    5a1c:	df 92       	push	r13
    5a1e:	ef 92       	push	r14
    5a20:	ff 92       	push	r15
    5a22:	0f 93       	push	r16
    5a24:	1f 93       	push	r17
    5a26:	cf 93       	push	r28
    5a28:	df 93       	push	r29
    5a2a:	00 d0       	rcall	.+0      	; 0x5a2c <_ZN6CANBus9readFrameER7Message+0x14>
    5a2c:	cd b7       	in	r28, 0x3d	; 61
    5a2e:	de b7       	in	r29, 0x3e	; 62
    5a30:	6c 01       	movw	r12, r24
    5a32:	8b 01       	movw	r16, r22
	uint8_t busStatus;
	uint8_t rxBufferId;
	
	if(!getNextRx(&busStatus, &rxBufferId)){
    5a34:	ae 01       	movw	r20, r28
    5a36:	4f 5f       	subi	r20, 0xFF	; 255
    5a38:	5f 4f       	sbci	r21, 0xFF	; 255
    5a3a:	be 01       	movw	r22, r28
    5a3c:	6e 5f       	subi	r22, 0xFE	; 254
    5a3e:	7f 4f       	sbci	r23, 0xFF	; 255
    5a40:	0e 94 9b 2b 	call	0x5736	; 0x5736 <_ZN6CANBus9getNextRxEPhS0_>
    5a44:	b8 2e       	mov	r11, r24
    5a46:	88 23       	and	r24, r24
    5a48:	c1 f0       	breq	.+48     	; 0x5a7a <_ZN6CANBus9readFrameER7Message+0x62>
		return false;
	}
	
	msg.clear();
    5a4a:	c8 01       	movw	r24, r16
    5a4c:	0e 94 5c 2e 	call	0x5cb8	; 0x5cb8 <_ZN7Message5clearEv>
	msg.busStatus = busStatus;
    5a50:	8a 81       	ldd	r24, Y+2	; 0x02
    5a52:	f8 01       	movw	r30, r16
    5a54:	86 83       	std	Z+6, r24	; 0x06
	msg.busId = this->busId;
    5a56:	f6 01       	movw	r30, r12
    5a58:	82 81       	ldd	r24, Z+2	; 0x02
    5a5a:	f8 01       	movw	r30, r16
    5a5c:	84 83       	std	Z+4, r24	; 0x04
	readDATA_ff_X(rxBufferId, &msg.length, msg.frame_data, &msg.frame_id, &msg.ide);
    5a5e:	78 01       	movw	r14, r16
    5a60:	f5 e0       	ldi	r31, 0x05	; 5
    5a62:	ef 0e       	add	r14, r31
    5a64:	f1 1c       	adc	r15, r1
    5a66:	98 01       	movw	r18, r16
    5a68:	28 5f       	subi	r18, 0xF8	; 248
    5a6a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a6c:	a8 01       	movw	r20, r16
    5a6e:	49 5f       	subi	r20, 0xF9	; 249
    5a70:	5f 4f       	sbci	r21, 0xFF	; 255
    5a72:	69 81       	ldd	r22, Y+1	; 0x01
    5a74:	c6 01       	movw	r24, r12
    5a76:	0e 94 43 2c 	call	0x5886	; 0x5886 <_ZN6CANBus13readDATA_ff_XEhPhS0_PmS0_>
	return true;
}
    5a7a:	8b 2d       	mov	r24, r11
    5a7c:	0f 90       	pop	r0
    5a7e:	0f 90       	pop	r0
    5a80:	df 91       	pop	r29
    5a82:	cf 91       	pop	r28
    5a84:	1f 91       	pop	r17
    5a86:	0f 91       	pop	r16
    5a88:	ff 90       	pop	r15
    5a8a:	ef 90       	pop	r14
    5a8c:	df 90       	pop	r13
    5a8e:	cf 90       	pop	r12
    5a90:	bf 90       	pop	r11
    5a92:	08 95       	ret

00005a94 <_ZN6CANBus10writeFrameER7Message>:

bool CANBus::writeFrame(Message &msg){
    5a94:	8f 92       	push	r8
    5a96:	9f 92       	push	r9
    5a98:	af 92       	push	r10
    5a9a:	bf 92       	push	r11
    5a9c:	cf 92       	push	r12
    5a9e:	df 92       	push	r13
    5aa0:	ef 92       	push	r14
    5aa2:	ff 92       	push	r15
    5aa4:	0f 93       	push	r16
    5aa6:	1f 93       	push	r17
    5aa8:	cf 93       	push	r28
    5aaa:	df 93       	push	r29
    5aac:	00 d0       	rcall	.+0      	; 0x5aae <_ZN6CANBus10writeFrameER7Message+0x1a>
    5aae:	cd b7       	in	r28, 0x3d	; 61
    5ab0:	de b7       	in	r29, 0x3e	; 62
    5ab2:	4c 01       	movw	r8, r24
    5ab4:	5b 01       	movw	r10, r22
  uint8_t sendBuffer;
  uint8_t channel;
  
  if(getNextTx(&channel, &sendBuffer)){
    5ab6:	ae 01       	movw	r20, r28
    5ab8:	4e 5f       	subi	r20, 0xFE	; 254
    5aba:	5f 4f       	sbci	r21, 0xFF	; 255
    5abc:	be 01       	movw	r22, r28
    5abe:	6f 5f       	subi	r22, 0xFF	; 255
    5ac0:	7f 4f       	sbci	r23, 0xFF	; 255
    5ac2:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <_ZN6CANBus9getNextTxEPhS0_>
    5ac6:	d8 2e       	mov	r13, r24
    5ac8:	88 23       	and	r24, r24
    5aca:	99 f0       	breq	.+38     	; 0x5af2 <_ZN6CANBus10writeFrameER7Message+0x5e>
    load_ff_X(channel, msg.length, msg.frame_id, msg.frame_data, msg.ide);
    5acc:	75 01       	movw	r14, r10
    5ace:	88 e0       	ldi	r24, 0x08	; 8
    5ad0:	e8 0e       	add	r14, r24
    5ad2:	f1 1c       	adc	r15, r1
    5ad4:	f5 01       	movw	r30, r10
    5ad6:	00 81       	ld	r16, Z
    5ad8:	11 81       	ldd	r17, Z+1	; 0x01
    5ada:	22 81       	ldd	r18, Z+2	; 0x02
    5adc:	33 81       	ldd	r19, Z+3	; 0x03
    5ade:	c5 80       	ldd	r12, Z+5	; 0x05
    5ae0:	47 81       	ldd	r20, Z+7	; 0x07
    5ae2:	69 81       	ldd	r22, Y+1	; 0x01
    5ae4:	c4 01       	movw	r24, r8
    5ae6:	0e 94 c9 2b 	call	0x5792	; 0x5792 <_ZN6CANBus9load_ff_XEhhmPhh>
    send_X(sendBuffer);
    5aea:	6a 81       	ldd	r22, Y+2	; 0x02
    5aec:	c4 01       	movw	r24, r8
    5aee:	0e 94 b6 2b 	call	0x576c	; 0x576c <_ZN6CANBus6send_XEh>
    return true;
  }
  
  return false;
}
    5af2:	8d 2d       	mov	r24, r13
    5af4:	0f 90       	pop	r0
    5af6:	0f 90       	pop	r0
    5af8:	df 91       	pop	r29
    5afa:	cf 91       	pop	r28
    5afc:	1f 91       	pop	r17
    5afe:	0f 91       	pop	r16
    5b00:	ff 90       	pop	r15
    5b02:	ef 90       	pop	r14
    5b04:	df 90       	pop	r13
    5b06:	cf 90       	pop	r12
    5b08:	bf 90       	pop	r11
    5b0a:	af 90       	pop	r10
    5b0c:	9f 90       	pop	r9
    5b0e:	8f 90       	pop	r8
    5b10:	08 95       	ret

00005b12 <_ZN6CANBus9powerDownEv>:

void CANBus::powerDown(void){
    5b12:	cf 93       	push	r28
    5b14:	df 93       	push	r29
    5b16:	ec 01       	movw	r28, r24
	this->previousState = this->readRegister(CANCTRL);
    5b18:	6f e0       	ldi	r22, 0x0F	; 15
    5b1a:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN6CANBus12readRegisterEh>
    5b1e:	8b 83       	std	Y+3, r24	; 0x03

    this->bitModify(BFPCTRL, B1BFE, B1BFE);
    5b20:	28 e0       	ldi	r18, 0x08	; 8
    5b22:	48 e0       	ldi	r20, 0x08	; 8
    5b24:	6c e0       	ldi	r22, 0x0C	; 12
    5b26:	ce 01       	movw	r24, r28
    5b28:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(BFPCTRL, 0, B1BFM);
    5b2c:	22 e0       	ldi	r18, 0x02	; 2
    5b2e:	40 e0       	ldi	r20, 0x00	; 0
    5b30:	6c e0       	ldi	r22, 0x0C	; 12
    5b32:	ce 01       	movw	r24, r28
    5b34:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(BFPCTRL, B1BFS, B1BFS);
    5b38:	20 e2       	ldi	r18, 0x20	; 32
    5b3a:	40 e2       	ldi	r20, 0x20	; 32
    5b3c:	6c e0       	ldi	r22, 0x0C	; 12
    5b3e:	ce 01       	movw	r24, r28
    5b40:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    delay(2);
    5b44:	62 e0       	ldi	r22, 0x02	; 2
    5b46:	70 e0       	ldi	r23, 0x00	; 0
    5b48:	80 e0       	ldi	r24, 0x00	; 0
    5b4a:	90 e0       	ldi	r25, 0x00	; 0
    5b4c:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    this->setMode(SLEEP);
    5b50:	62 e0       	ldi	r22, 0x02	; 2
    5b52:	ce 01       	movw	r24, r28
    5b54:	0e 94 e5 29 	call	0x53ca	; 0x53ca <_ZN6CANBus7setModeE7CANMode>
    this->bitModify(CANINTF, 0, 0x03);
    5b58:	23 e0       	ldi	r18, 0x03	; 3
    5b5a:	40 e0       	ldi	r20, 0x00	; 0
    5b5c:	6c e2       	ldi	r22, 0x2C	; 44
    5b5e:	ce 01       	movw	r24, r28
    5b60:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	delay(2);
    5b64:	62 e0       	ldi	r22, 0x02	; 2
    5b66:	70 e0       	ldi	r23, 0x00	; 0
    5b68:	80 e0       	ldi	r24, 0x00	; 0
    5b6a:	90 e0       	ldi	r25, 0x00	; 0
}
    5b6c:	df 91       	pop	r29
    5b6e:	cf 91       	pop	r28
    this->bitModify(BFPCTRL, 0, B1BFM);
    this->bitModify(BFPCTRL, B1BFS, B1BFS);
    delay(2);
    this->setMode(SLEEP);
    this->bitModify(CANINTF, 0, 0x03);
	delay(2);
    5b70:	0c 94 9f 26 	jmp	0x4d3e	; 0x4d3e <delay>

00005b74 <_ZN6CANBus7powerUpEv>:
}

void CANBus::powerUp(void){
    5b74:	cf 93       	push	r28
    5b76:	df 93       	push	r29
    5b78:	ec 01       	movw	r28, r24
    this->bitModify(CANINTF, WAKIF, WAKIF);
    5b7a:	20 e4       	ldi	r18, 0x40	; 64
    5b7c:	40 e4       	ldi	r20, 0x40	; 64
    5b7e:	6c e2       	ldi	r22, 0x2C	; 44
    5b80:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(CANINTE, WAKIE, WAKIE);
    5b84:	20 e4       	ldi	r18, 0x40	; 64
    5b86:	40 e4       	ldi	r20, 0x40	; 64
    5b88:	6b e2       	ldi	r22, 0x2B	; 43
    5b8a:	ce 01       	movw	r24, r28
    5b8c:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    delay(2);
    5b90:	62 e0       	ldi	r22, 0x02	; 2
    5b92:	70 e0       	ldi	r23, 0x00	; 0
    5b94:	80 e0       	ldi	r24, 0x00	; 0
    5b96:	90 e0       	ldi	r25, 0x00	; 0
    5b98:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
    this->bitModify(CANINTE, 0, WAKIE);
    5b9c:	20 e4       	ldi	r18, 0x40	; 64
    5b9e:	40 e0       	ldi	r20, 0x00	; 0
    5ba0:	6b e2       	ldi	r22, 0x2B	; 43
    5ba2:	ce 01       	movw	r24, r28
    5ba4:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(CANINTF, 0, WAKIF);
    5ba8:	20 e4       	ldi	r18, 0x40	; 64
    5baa:	40 e0       	ldi	r20, 0x00	; 0
    5bac:	6c e2       	ldi	r22, 0x2C	; 44
    5bae:	ce 01       	movw	r24, r28
    5bb0:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	this->bitModify(CANINTF, 0, 0xFF);
    5bb4:	2f ef       	ldi	r18, 0xFF	; 255
    5bb6:	40 e0       	ldi	r20, 0x00	; 0
    5bb8:	6c e2       	ldi	r22, 0x2C	; 44
    5bba:	ce 01       	movw	r24, r28
    5bbc:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(BFPCTRL, 0, B1BFS);
    5bc0:	20 e2       	ldi	r18, 0x20	; 32
    5bc2:	40 e0       	ldi	r20, 0x00	; 0
    5bc4:	6c e0       	ldi	r22, 0x0C	; 12
    5bc6:	ce 01       	movw	r24, r28
    5bc8:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    delay(1);
    5bcc:	61 e0       	ldi	r22, 0x01	; 1
    5bce:	70 e0       	ldi	r23, 0x00	; 0
    5bd0:	80 e0       	ldi	r24, 0x00	; 0
    5bd2:	90 e0       	ldi	r25, 0x00	; 0
    5bd4:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
	this->bitModify(CANCTRL, this->previousState, 0xE0);
    5bd8:	20 ee       	ldi	r18, 0xE0	; 224
    5bda:	4b 81       	ldd	r20, Y+3	; 0x03
    5bdc:	6f e0       	ldi	r22, 0x0F	; 15
    5bde:	ce 01       	movw	r24, r28
    5be0:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	delay(2);
    5be4:	62 e0       	ldi	r22, 0x02	; 2
    5be6:	70 e0       	ldi	r23, 0x00	; 0
    5be8:	80 e0       	ldi	r24, 0x00	; 0
    5bea:	90 e0       	ldi	r25, 0x00	; 0
}
    5bec:	df 91       	pop	r29
    5bee:	cf 91       	pop	r28
    this->bitModify(CANINTF, 0, WAKIF);
	this->bitModify(CANINTF, 0, 0xFF);
    this->bitModify(BFPCTRL, 0, B1BFS);
    delay(1);
	this->bitModify(CANCTRL, this->previousState, 0xE0);
	delay(2);
    5bf0:	0c 94 9f 26 	jmp	0x4d3e	; 0x4d3e <delay>

00005bf4 <_ZN6CANBus22prepareWakeupInterruptEv>:
}

void CANBus::prepareWakeupInterrupt(void){
    5bf4:	cf 93       	push	r28
    5bf6:	df 93       	push	r29
    5bf8:	ec 01       	movw	r28, r24
	this->previousState = this->readRegister(CANCTRL);
    5bfa:	6f e0       	ldi	r22, 0x0F	; 15
    5bfc:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN6CANBus12readRegisterEh>
    5c00:	8b 83       	std	Y+3, r24	; 0x03

    this->bitModify(BFPCTRL, B1BFE, B1BFE);
    5c02:	28 e0       	ldi	r18, 0x08	; 8
    5c04:	48 e0       	ldi	r20, 0x08	; 8
    5c06:	6c e0       	ldi	r22, 0x0C	; 12
    5c08:	ce 01       	movw	r24, r28
    5c0a:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(BFPCTRL, 0, B1BFM);
    5c0e:	22 e0       	ldi	r18, 0x02	; 2
    5c10:	40 e0       	ldi	r20, 0x00	; 0
    5c12:	6c e0       	ldi	r22, 0x0C	; 12
    5c14:	ce 01       	movw	r24, r28
    5c16:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
    this->bitModify(BFPCTRL, B1BFS, B1BFS);
    5c1a:	20 e2       	ldi	r18, 0x20	; 32
    5c1c:	40 e2       	ldi	r20, 0x20	; 32
    5c1e:	6c e0       	ldi	r22, 0x0C	; 12
    5c20:	ce 01       	movw	r24, r28
    5c22:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	delay(2);
    5c26:	62 e0       	ldi	r22, 0x02	; 2
    5c28:	70 e0       	ldi	r23, 0x00	; 0
    5c2a:	80 e0       	ldi	r24, 0x00	; 0
    5c2c:	90 e0       	ldi	r25, 0x00	; 0
    5c2e:	0e 94 9f 26 	call	0x4d3e	; 0x4d3e <delay>
	
	this->bitModify(CANCTRL, this->previousState, 0xE0);
    5c32:	20 ee       	ldi	r18, 0xE0	; 224
    5c34:	4b 81       	ldd	r20, Y+3	; 0x03
    5c36:	6f e0       	ldi	r22, 0x0F	; 15
    5c38:	ce 01       	movw	r24, r28
    5c3a:	0e 94 72 29 	call	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>
	this->bitModify(CANINTF, 0, 0x03);
    5c3e:	23 e0       	ldi	r18, 0x03	; 3
    5c40:	40 e0       	ldi	r20, 0x00	; 0
    5c42:	6c e2       	ldi	r22, 0x2C	; 44
    5c44:	ce 01       	movw	r24, r28
}
    5c46:	df 91       	pop	r29
    5c48:	cf 91       	pop	r28
    this->bitModify(BFPCTRL, 0, B1BFM);
    this->bitModify(BFPCTRL, B1BFS, B1BFS);
	delay(2);
	
	this->bitModify(CANCTRL, this->previousState, 0xE0);
	this->bitModify(CANINTF, 0, 0x03);
    5c4a:	0c 94 72 29 	jmp	0x52e4	; 0x52e4 <_ZN6CANBus9bitModifyEhhh>

00005c4e <_ZN7MessageC1Ev>:

#include "Message.h"

Message::Message(){
    5c4e:	fc 01       	movw	r30, r24
	busId = 0;
    5c50:	14 82       	std	Z+4, r1	; 0x04
	ide = 0;
    5c52:	15 82       	std	Z+5, r1	; 0x05
	busStatus = 0;
    5c54:	16 82       	std	Z+6, r1	; 0x06
	length = 0;
    5c56:	17 82       	std	Z+7, r1	; 0x07
	frame_id = 0;
    5c58:	10 82       	st	Z, r1
    5c5a:	11 82       	std	Z+1, r1	; 0x01
    5c5c:	12 82       	std	Z+2, r1	; 0x02
    5c5e:	13 82       	std	Z+3, r1	; 0x03
	memset(this->frame_data, '\0', 8);
    5c60:	38 96       	adiw	r30, 0x08	; 8
    5c62:	88 e0       	ldi	r24, 0x08	; 8
    5c64:	df 01       	movw	r26, r30
    5c66:	1d 92       	st	X+, r1
    5c68:	8a 95       	dec	r24
    5c6a:	e9 f7       	brne	.-6      	; 0x5c66 <_ZN7MessageC1Ev+0x18>
    5c6c:	08 95       	ret

00005c6e <_ZN7Message5cloneERKS_>:

Message::Message(const Message &src){
	clone(src);
}

void Message::clone(const Message &src){
    5c6e:	dc 01       	movw	r26, r24
    5c70:	fb 01       	movw	r30, r22
	this->busId = src.busId;
    5c72:	84 81       	ldd	r24, Z+4	; 0x04
    5c74:	14 96       	adiw	r26, 0x04	; 4
    5c76:	8c 93       	st	X, r24
    5c78:	14 97       	sbiw	r26, 0x04	; 4
	this->ide = src.ide;
    5c7a:	85 81       	ldd	r24, Z+5	; 0x05
    5c7c:	15 96       	adiw	r26, 0x05	; 5
    5c7e:	8c 93       	st	X, r24
    5c80:	15 97       	sbiw	r26, 0x05	; 5
	this->busStatus = src.busStatus;
    5c82:	86 81       	ldd	r24, Z+6	; 0x06
    5c84:	16 96       	adiw	r26, 0x06	; 6
    5c86:	8c 93       	st	X, r24
    5c88:	16 97       	sbiw	r26, 0x06	; 6
	this->length = src.length;
    5c8a:	87 81       	ldd	r24, Z+7	; 0x07
    5c8c:	17 96       	adiw	r26, 0x07	; 7
    5c8e:	8c 93       	st	X, r24
    5c90:	17 97       	sbiw	r26, 0x07	; 7
	this->frame_id = src.frame_id;
    5c92:	40 81       	ld	r20, Z
    5c94:	51 81       	ldd	r21, Z+1	; 0x01
    5c96:	62 81       	ldd	r22, Z+2	; 0x02
    5c98:	73 81       	ldd	r23, Z+3	; 0x03
    5c9a:	4d 93       	st	X+, r20
    5c9c:	5d 93       	st	X+, r21
    5c9e:	6d 93       	st	X+, r22
    5ca0:	7c 93       	st	X, r23
    5ca2:	13 97       	sbiw	r26, 0x03	; 3
	memcpy(this->frame_data, src.frame_data, 8);
    5ca4:	18 96       	adiw	r26, 0x08	; 8
    5ca6:	38 96       	adiw	r30, 0x08	; 8
    5ca8:	88 e0       	ldi	r24, 0x08	; 8
    5caa:	01 90       	ld	r0, Z+
    5cac:	0d 92       	st	X+, r0
    5cae:	8a 95       	dec	r24
    5cb0:	e1 f7       	brne	.-8      	; 0x5caa <_ZN7Message5cloneERKS_+0x3c>
    5cb2:	08 95       	ret

00005cb4 <_ZN7MessageC1ERKS_>:
	frame_id = 0;
	memset(this->frame_data, '\0', 8);
}

Message::Message(const Message &src){
	clone(src);
    5cb4:	0c 94 37 2e 	jmp	0x5c6e	; 0x5c6e <_ZN7Message5cloneERKS_>

00005cb8 <_ZN7Message5clearEv>:
	this->length = src.length;
	this->frame_id = src.frame_id;
	memcpy(this->frame_data, src.frame_data, 8);
}

void Message::clear(void){
    5cb8:	fc 01       	movw	r30, r24
	busId = 0;
    5cba:	14 82       	std	Z+4, r1	; 0x04
	ide = 0;
    5cbc:	15 82       	std	Z+5, r1	; 0x05
	busStatus = 0;
    5cbe:	16 82       	std	Z+6, r1	; 0x06
	length = 0;
    5cc0:	17 82       	std	Z+7, r1	; 0x07
	frame_id = 0;
    5cc2:	10 82       	st	Z, r1
    5cc4:	11 82       	std	Z+1, r1	; 0x01
    5cc6:	12 82       	std	Z+2, r1	; 0x02
    5cc8:	13 82       	std	Z+3, r1	; 0x03
	memset(this->frame_data, '\0', 8);
    5cca:	38 96       	adiw	r30, 0x08	; 8
    5ccc:	88 e0       	ldi	r24, 0x08	; 8
    5cce:	df 01       	movw	r26, r30
    5cd0:	1d 92       	st	X+, r1
    5cd2:	8a 95       	dec	r24
    5cd4:	e9 f7       	brne	.-6      	; 0x5cd0 <_ZN7Message5clearEv+0x18>
    5cd6:	08 95       	ret

00005cd8 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    5cd8:	cf 93       	push	r28
  uint8_t sreg = SREG;
    5cda:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    5cdc:	f8 94       	cli
  if (!initialized) {
    5cde:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <_ZN8SPIClass11initializedE>
    5ce2:	81 11       	cpse	r24, r1
    5ce4:	27 c0       	rjmp	.+78     	; 0x5d34 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    5ce6:	e3 e9       	ldi	r30, 0x93	; 147
    5ce8:	f4 e0       	ldi	r31, 0x04	; 4
    5cea:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
    5cec:	e5 e7       	ldi	r30, 0x75	; 117
    5cee:	f4 e0       	ldi	r31, 0x04	; 4
    5cf0:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
    5cf2:	e8 2f       	mov	r30, r24
    5cf4:	f0 e0       	ldi	r31, 0x00	; 0
    5cf6:	ee 0f       	add	r30, r30
    5cf8:	ff 1f       	adc	r31, r31
    5cfa:	e4 54       	subi	r30, 0x44	; 68
    5cfc:	fb 4f       	sbci	r31, 0xFB	; 251
    5cfe:	a5 91       	lpm	r26, Z+
    5d00:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    5d02:	ec 91       	ld	r30, X
    5d04:	e9 23       	and	r30, r25
    5d06:	21 f4       	brne	.+8      	; 0x5d10 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
    5d08:	61 e0       	ldi	r22, 0x01	; 1
    5d0a:	81 e1       	ldi	r24, 0x11	; 17
    5d0c:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    5d10:	61 e0       	ldi	r22, 0x01	; 1
    5d12:	81 e1       	ldi	r24, 0x11	; 17
    5d14:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    5d18:	8c b5       	in	r24, 0x2c	; 44
    5d1a:	80 61       	ori	r24, 0x10	; 16
    5d1c:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
    5d1e:	8c b5       	in	r24, 0x2c	; 44
    5d20:	80 64       	ori	r24, 0x40	; 64
    5d22:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    5d24:	61 e0       	ldi	r22, 0x01	; 1
    5d26:	8f e0       	ldi	r24, 0x0F	; 15
    5d28:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
    pinMode(MOSI, OUTPUT);
    5d2c:	61 e0       	ldi	r22, 0x01	; 1
    5d2e:	80 e1       	ldi	r24, 0x10	; 16
    5d30:	0e 94 6e 27 	call	0x4edc	; 0x4edc <pinMode>
  }
  initialized++; // reference count
    5d34:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <_ZN8SPIClass11initializedE>
    5d38:	8f 5f       	subi	r24, 0xFF	; 255
    5d3a:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <_ZN8SPIClass11initializedE>
  SREG = sreg;
    5d3e:	cf bf       	out	0x3f, r28	; 63
}
    5d40:	cf 91       	pop	r28
    5d42:	08 95       	ret

00005d44 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    5d44:	08 95       	ret

00005d46 <_ZN13PluggableUSB_12getInterfaceEPh>:
		_initEndpoints[lastEp] = node->endpointType[i];
		lastEp++;
	}
	return true;
	// restart USB layer???
}
    5d46:	ef 92       	push	r14
    5d48:	ff 92       	push	r15
    5d4a:	0f 93       	push	r16
    5d4c:	1f 93       	push	r17
    5d4e:	cf 93       	push	r28
    5d50:	df 93       	push	r29
    5d52:	7b 01       	movw	r14, r22
    5d54:	fc 01       	movw	r30, r24
    5d56:	c2 81       	ldd	r28, Z+2	; 0x02
    5d58:	d3 81       	ldd	r29, Z+3	; 0x03
    5d5a:	00 e0       	ldi	r16, 0x00	; 0
    5d5c:	10 e0       	ldi	r17, 0x00	; 0
    5d5e:	20 97       	sbiw	r28, 0x00	; 0
    5d60:	81 f0       	breq	.+32     	; 0x5d82 <_ZN13PluggableUSB_12getInterfaceEPh+0x3c>
    5d62:	e8 81       	ld	r30, Y
    5d64:	f9 81       	ldd	r31, Y+1	; 0x01
    5d66:	02 80       	ldd	r0, Z+2	; 0x02
    5d68:	f3 81       	ldd	r31, Z+3	; 0x03
    5d6a:	e0 2d       	mov	r30, r0
    5d6c:	b7 01       	movw	r22, r14
    5d6e:	ce 01       	movw	r24, r28
    5d70:	09 95       	icall
    5d72:	97 fd       	sbrc	r25, 7
    5d74:	08 c0       	rjmp	.+16     	; 0x5d86 <_ZN13PluggableUSB_12getInterfaceEPh+0x40>
    5d76:	08 0f       	add	r16, r24
    5d78:	19 1f       	adc	r17, r25
    5d7a:	08 84       	ldd	r0, Y+8	; 0x08
    5d7c:	d9 85       	ldd	r29, Y+9	; 0x09
    5d7e:	c0 2d       	mov	r28, r0
    5d80:	ee cf       	rjmp	.-36     	; 0x5d5e <_ZN13PluggableUSB_12getInterfaceEPh+0x18>
    5d82:	c8 01       	movw	r24, r16
    5d84:	02 c0       	rjmp	.+4      	; 0x5d8a <_ZN13PluggableUSB_12getInterfaceEPh+0x44>
    5d86:	8f ef       	ldi	r24, 0xFF	; 255
    5d88:	9f ef       	ldi	r25, 0xFF	; 255
    5d8a:	df 91       	pop	r29
    5d8c:	cf 91       	pop	r28
    5d8e:	1f 91       	pop	r17
    5d90:	0f 91       	pop	r16
    5d92:	ff 90       	pop	r15
    5d94:	ef 90       	pop	r14
    5d96:	08 95       	ret

00005d98 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>:
    5d98:	0f 93       	push	r16
    5d9a:	1f 93       	push	r17
    5d9c:	cf 93       	push	r28
    5d9e:	df 93       	push	r29
    5da0:	8b 01       	movw	r16, r22
    5da2:	fc 01       	movw	r30, r24
    5da4:	c2 81       	ldd	r28, Z+2	; 0x02
    5da6:	d3 81       	ldd	r29, Z+3	; 0x03
    5da8:	20 97       	sbiw	r28, 0x00	; 0
    5daa:	71 f0       	breq	.+28     	; 0x5dc8 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x30>
    5dac:	e8 81       	ld	r30, Y
    5dae:	f9 81       	ldd	r31, Y+1	; 0x01
    5db0:	04 80       	ldd	r0, Z+4	; 0x04
    5db2:	f5 81       	ldd	r31, Z+5	; 0x05
    5db4:	e0 2d       	mov	r30, r0
    5db6:	b8 01       	movw	r22, r16
    5db8:	ce 01       	movw	r24, r28
    5dba:	09 95       	icall
    5dbc:	00 97       	sbiw	r24, 0x00	; 0
    5dbe:	31 f4       	brne	.+12     	; 0x5dcc <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x34>
    5dc0:	08 84       	ldd	r0, Y+8	; 0x08
    5dc2:	d9 85       	ldd	r29, Y+9	; 0x09
    5dc4:	c0 2d       	mov	r28, r0
    5dc6:	f0 cf       	rjmp	.-32     	; 0x5da8 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x10>
    5dc8:	80 e0       	ldi	r24, 0x00	; 0
    5dca:	90 e0       	ldi	r25, 0x00	; 0
    5dcc:	df 91       	pop	r29
    5dce:	cf 91       	pop	r28
    5dd0:	1f 91       	pop	r17
    5dd2:	0f 91       	pop	r16
    5dd4:	08 95       	ret

00005dd6 <_ZN13PluggableUSB_12getShortNameEPc>:
    5dd6:	0f 93       	push	r16
    5dd8:	1f 93       	push	r17
    5dda:	cf 93       	push	r28
    5ddc:	df 93       	push	r29
    5dde:	8b 01       	movw	r16, r22
    5de0:	fc 01       	movw	r30, r24
    5de2:	c2 81       	ldd	r28, Z+2	; 0x02
    5de4:	d3 81       	ldd	r29, Z+3	; 0x03
    5de6:	20 97       	sbiw	r28, 0x00	; 0
    5de8:	71 f0       	breq	.+28     	; 0x5e06 <_ZN13PluggableUSB_12getShortNameEPc+0x30>
    5dea:	e8 81       	ld	r30, Y
    5dec:	f9 81       	ldd	r31, Y+1	; 0x01
    5dee:	06 80       	ldd	r0, Z+6	; 0x06
    5df0:	f7 81       	ldd	r31, Z+7	; 0x07
    5df2:	e0 2d       	mov	r30, r0
    5df4:	b8 01       	movw	r22, r16
    5df6:	ce 01       	movw	r24, r28
    5df8:	09 95       	icall
    5dfa:	08 0f       	add	r16, r24
    5dfc:	11 1d       	adc	r17, r1
    5dfe:	08 84       	ldd	r0, Y+8	; 0x08
    5e00:	d9 85       	ldd	r29, Y+9	; 0x09
    5e02:	c0 2d       	mov	r28, r0
    5e04:	f0 cf       	rjmp	.-32     	; 0x5de6 <_ZN13PluggableUSB_12getShortNameEPc+0x10>
    5e06:	f8 01       	movw	r30, r16
    5e08:	10 82       	st	Z, r1
    5e0a:	df 91       	pop	r29
    5e0c:	cf 91       	pop	r28
    5e0e:	1f 91       	pop	r17
    5e10:	0f 91       	pop	r16
    5e12:	08 95       	ret

00005e14 <_ZN13PluggableUSB_5setupER8USBSetup>:
    5e14:	0f 93       	push	r16
    5e16:	1f 93       	push	r17
    5e18:	cf 93       	push	r28
    5e1a:	df 93       	push	r29
    5e1c:	8b 01       	movw	r16, r22
    5e1e:	fc 01       	movw	r30, r24
    5e20:	c2 81       	ldd	r28, Z+2	; 0x02
    5e22:	d3 81       	ldd	r29, Z+3	; 0x03
    5e24:	20 97       	sbiw	r28, 0x00	; 0
    5e26:	71 f0       	breq	.+28     	; 0x5e44 <_ZN13PluggableUSB_5setupER8USBSetup+0x30>
    5e28:	e8 81       	ld	r30, Y
    5e2a:	f9 81       	ldd	r31, Y+1	; 0x01
    5e2c:	01 90       	ld	r0, Z+
    5e2e:	f0 81       	ld	r31, Z
    5e30:	e0 2d       	mov	r30, r0
    5e32:	b8 01       	movw	r22, r16
    5e34:	ce 01       	movw	r24, r28
    5e36:	09 95       	icall
    5e38:	81 11       	cpse	r24, r1
    5e3a:	05 c0       	rjmp	.+10     	; 0x5e46 <_ZN13PluggableUSB_5setupER8USBSetup+0x32>
    5e3c:	08 84       	ldd	r0, Y+8	; 0x08
    5e3e:	d9 85       	ldd	r29, Y+9	; 0x09
    5e40:	c0 2d       	mov	r28, r0
    5e42:	f0 cf       	rjmp	.-32     	; 0x5e24 <_ZN13PluggableUSB_5setupER8USBSetup+0x10>
    5e44:	80 e0       	ldi	r24, 0x00	; 0
    5e46:	df 91       	pop	r29
    5e48:	cf 91       	pop	r28
    5e4a:	1f 91       	pop	r17
    5e4c:	0f 91       	pop	r16
    5e4e:	08 95       	ret

00005e50 <_Z12PluggableUSBv>:

PluggableUSB_& PluggableUSB()
{
	static PluggableUSB_ obj;
    5e50:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <_ZGVZ12PluggableUSBvE3obj>
    5e54:	81 11       	cpse	r24, r1
    5e56:	0d c0       	rjmp	.+26     	; 0x5e72 <_Z12PluggableUSBv+0x22>
	return obj;
}

PluggableUSB_::PluggableUSB_() : lastIf(CDC_ACM_INTERFACE + CDC_INTERFACE_COUNT),
                                 lastEp(CDC_FIRST_ENDPOINT + CDC_ENPOINT_COUNT),
                                 rootNode(NULL)
    5e58:	82 e0       	ldi	r24, 0x02	; 2
    5e5a:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <_ZZ12PluggableUSBvE3obj>
    5e5e:	84 e0       	ldi	r24, 0x04	; 4
    5e60:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <_ZZ12PluggableUSBvE3obj+0x1>
    5e64:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <_ZZ12PluggableUSBvE3obj+0x3>
    5e68:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <_ZZ12PluggableUSBvE3obj+0x2>
	// restart USB layer???
}

PluggableUSB_& PluggableUSB()
{
	static PluggableUSB_ obj;
    5e6c:	81 e0       	ldi	r24, 0x01	; 1
    5e6e:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <_ZGVZ12PluggableUSBvE3obj>
	return obj;
}
    5e72:	83 e8       	ldi	r24, 0x83	; 131
    5e74:	94 e0       	ldi	r25, 0x04	; 4
    5e76:	08 95       	ret

00005e78 <__udivmodqi4>:
    5e78:	99 1b       	sub	r25, r25
    5e7a:	79 e0       	ldi	r23, 0x09	; 9
    5e7c:	04 c0       	rjmp	.+8      	; 0x5e86 <__udivmodqi4_ep>

00005e7e <__udivmodqi4_loop>:
    5e7e:	99 1f       	adc	r25, r25
    5e80:	96 17       	cp	r25, r22
    5e82:	08 f0       	brcs	.+2      	; 0x5e86 <__udivmodqi4_ep>
    5e84:	96 1b       	sub	r25, r22

00005e86 <__udivmodqi4_ep>:
    5e86:	88 1f       	adc	r24, r24
    5e88:	7a 95       	dec	r23
    5e8a:	c9 f7       	brne	.-14     	; 0x5e7e <__udivmodqi4_loop>
    5e8c:	80 95       	com	r24
    5e8e:	08 95       	ret

00005e90 <__udivmodhi4>:
    5e90:	aa 1b       	sub	r26, r26
    5e92:	bb 1b       	sub	r27, r27
    5e94:	51 e1       	ldi	r21, 0x11	; 17
    5e96:	07 c0       	rjmp	.+14     	; 0x5ea6 <__udivmodhi4_ep>

00005e98 <__udivmodhi4_loop>:
    5e98:	aa 1f       	adc	r26, r26
    5e9a:	bb 1f       	adc	r27, r27
    5e9c:	a6 17       	cp	r26, r22
    5e9e:	b7 07       	cpc	r27, r23
    5ea0:	10 f0       	brcs	.+4      	; 0x5ea6 <__udivmodhi4_ep>
    5ea2:	a6 1b       	sub	r26, r22
    5ea4:	b7 0b       	sbc	r27, r23

00005ea6 <__udivmodhi4_ep>:
    5ea6:	88 1f       	adc	r24, r24
    5ea8:	99 1f       	adc	r25, r25
    5eaa:	5a 95       	dec	r21
    5eac:	a9 f7       	brne	.-22     	; 0x5e98 <__udivmodhi4_loop>
    5eae:	80 95       	com	r24
    5eb0:	90 95       	com	r25
    5eb2:	bc 01       	movw	r22, r24
    5eb4:	cd 01       	movw	r24, r26
    5eb6:	08 95       	ret

00005eb8 <__divmodhi4>:
    5eb8:	97 fb       	bst	r25, 7
    5eba:	07 2e       	mov	r0, r23
    5ebc:	16 f4       	brtc	.+4      	; 0x5ec2 <__divmodhi4+0xa>
    5ebe:	00 94       	com	r0
    5ec0:	07 d0       	rcall	.+14     	; 0x5ed0 <__divmodhi4_neg1>
    5ec2:	77 fd       	sbrc	r23, 7
    5ec4:	09 d0       	rcall	.+18     	; 0x5ed8 <__divmodhi4_neg2>
    5ec6:	0e 94 48 2f 	call	0x5e90	; 0x5e90 <__udivmodhi4>
    5eca:	07 fc       	sbrc	r0, 7
    5ecc:	05 d0       	rcall	.+10     	; 0x5ed8 <__divmodhi4_neg2>
    5ece:	3e f4       	brtc	.+14     	; 0x5ede <__divmodhi4_exit>

00005ed0 <__divmodhi4_neg1>:
    5ed0:	90 95       	com	r25
    5ed2:	81 95       	neg	r24
    5ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    5ed6:	08 95       	ret

00005ed8 <__divmodhi4_neg2>:
    5ed8:	70 95       	com	r23
    5eda:	61 95       	neg	r22
    5edc:	7f 4f       	sbci	r23, 0xFF	; 255

00005ede <__divmodhi4_exit>:
    5ede:	08 95       	ret

00005ee0 <__udivmodsi4>:
    5ee0:	a1 e2       	ldi	r26, 0x21	; 33
    5ee2:	1a 2e       	mov	r1, r26
    5ee4:	aa 1b       	sub	r26, r26
    5ee6:	bb 1b       	sub	r27, r27
    5ee8:	fd 01       	movw	r30, r26
    5eea:	0d c0       	rjmp	.+26     	; 0x5f06 <__udivmodsi4_ep>

00005eec <__udivmodsi4_loop>:
    5eec:	aa 1f       	adc	r26, r26
    5eee:	bb 1f       	adc	r27, r27
    5ef0:	ee 1f       	adc	r30, r30
    5ef2:	ff 1f       	adc	r31, r31
    5ef4:	a2 17       	cp	r26, r18
    5ef6:	b3 07       	cpc	r27, r19
    5ef8:	e4 07       	cpc	r30, r20
    5efa:	f5 07       	cpc	r31, r21
    5efc:	20 f0       	brcs	.+8      	; 0x5f06 <__udivmodsi4_ep>
    5efe:	a2 1b       	sub	r26, r18
    5f00:	b3 0b       	sbc	r27, r19
    5f02:	e4 0b       	sbc	r30, r20
    5f04:	f5 0b       	sbc	r31, r21

00005f06 <__udivmodsi4_ep>:
    5f06:	66 1f       	adc	r22, r22
    5f08:	77 1f       	adc	r23, r23
    5f0a:	88 1f       	adc	r24, r24
    5f0c:	99 1f       	adc	r25, r25
    5f0e:	1a 94       	dec	r1
    5f10:	69 f7       	brne	.-38     	; 0x5eec <__udivmodsi4_loop>
    5f12:	60 95       	com	r22
    5f14:	70 95       	com	r23
    5f16:	80 95       	com	r24
    5f18:	90 95       	com	r25
    5f1a:	9b 01       	movw	r18, r22
    5f1c:	ac 01       	movw	r20, r24
    5f1e:	bd 01       	movw	r22, r26
    5f20:	cf 01       	movw	r24, r30
    5f22:	08 95       	ret

00005f24 <__tablejump2__>:
    5f24:	ee 0f       	add	r30, r30
    5f26:	ff 1f       	adc	r31, r31
    5f28:	05 90       	lpm	r0, Z+
    5f2a:	f4 91       	lpm	r31, Z
    5f2c:	e0 2d       	mov	r30, r0
    5f2e:	09 94       	ijmp

00005f30 <dtostrf>:
    5f30:	ef 92       	push	r14
    5f32:	0f 93       	push	r16
    5f34:	1f 93       	push	r17
    5f36:	cf 93       	push	r28
    5f38:	df 93       	push	r29
    5f3a:	e8 01       	movw	r28, r16
    5f3c:	47 fd       	sbrc	r20, 7
    5f3e:	02 c0       	rjmp	.+4      	; 0x5f44 <dtostrf+0x14>
    5f40:	34 e0       	ldi	r19, 0x04	; 4
    5f42:	01 c0       	rjmp	.+2      	; 0x5f46 <dtostrf+0x16>
    5f44:	34 e1       	ldi	r19, 0x14	; 20
    5f46:	04 2e       	mov	r0, r20
    5f48:	00 0c       	add	r0, r0
    5f4a:	55 0b       	sbc	r21, r21
    5f4c:	57 ff       	sbrs	r21, 7
    5f4e:	03 c0       	rjmp	.+6      	; 0x5f56 <dtostrf+0x26>
    5f50:	51 95       	neg	r21
    5f52:	41 95       	neg	r20
    5f54:	51 09       	sbc	r21, r1
    5f56:	e3 2e       	mov	r14, r19
    5f58:	02 2f       	mov	r16, r18
    5f5a:	24 2f       	mov	r18, r20
    5f5c:	ae 01       	movw	r20, r28
    5f5e:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <dtoa_prf>
    5f62:	ce 01       	movw	r24, r28
    5f64:	df 91       	pop	r29
    5f66:	cf 91       	pop	r28
    5f68:	1f 91       	pop	r17
    5f6a:	0f 91       	pop	r16
    5f6c:	ef 90       	pop	r14
    5f6e:	08 95       	ret

00005f70 <memcpy_P>:
    5f70:	fb 01       	movw	r30, r22
    5f72:	dc 01       	movw	r26, r24
    5f74:	02 c0       	rjmp	.+4      	; 0x5f7a <memcpy_P+0xa>
    5f76:	05 90       	lpm	r0, Z+
    5f78:	0d 92       	st	X+, r0
    5f7a:	41 50       	subi	r20, 0x01	; 1
    5f7c:	50 40       	sbci	r21, 0x00	; 0
    5f7e:	d8 f7       	brcc	.-10     	; 0x5f76 <memcpy_P+0x6>
    5f80:	08 95       	ret

00005f82 <memcmp>:
    5f82:	fb 01       	movw	r30, r22
    5f84:	dc 01       	movw	r26, r24
    5f86:	04 c0       	rjmp	.+8      	; 0x5f90 <memcmp+0xe>
    5f88:	8d 91       	ld	r24, X+
    5f8a:	01 90       	ld	r0, Z+
    5f8c:	80 19       	sub	r24, r0
    5f8e:	21 f4       	brne	.+8      	; 0x5f98 <memcmp+0x16>
    5f90:	41 50       	subi	r20, 0x01	; 1
    5f92:	50 40       	sbci	r21, 0x00	; 0
    5f94:	c8 f7       	brcc	.-14     	; 0x5f88 <memcmp+0x6>
    5f96:	88 1b       	sub	r24, r24
    5f98:	99 0b       	sbc	r25, r25
    5f9a:	08 95       	ret

00005f9c <memcpy>:
    5f9c:	fb 01       	movw	r30, r22
    5f9e:	dc 01       	movw	r26, r24
    5fa0:	02 c0       	rjmp	.+4      	; 0x5fa6 <memcpy+0xa>
    5fa2:	01 90       	ld	r0, Z+
    5fa4:	0d 92       	st	X+, r0
    5fa6:	41 50       	subi	r20, 0x01	; 1
    5fa8:	50 40       	sbci	r21, 0x00	; 0
    5faa:	d8 f7       	brcc	.-10     	; 0x5fa2 <memcpy+0x6>
    5fac:	08 95       	ret

00005fae <snprintf_P>:
    5fae:	ae e0       	ldi	r26, 0x0E	; 14
    5fb0:	b0 e0       	ldi	r27, 0x00	; 0
    5fb2:	ed ed       	ldi	r30, 0xDD	; 221
    5fb4:	ff e2       	ldi	r31, 0x2F	; 47
    5fb6:	0c 94 d8 34 	jmp	0x69b0	; 0x69b0 <__prologue_saves__+0x1c>
    5fba:	0d 89       	ldd	r16, Y+21	; 0x15
    5fbc:	1e 89       	ldd	r17, Y+22	; 0x16
    5fbe:	8f 89       	ldd	r24, Y+23	; 0x17
    5fc0:	98 8d       	ldd	r25, Y+24	; 0x18
    5fc2:	2e e0       	ldi	r18, 0x0E	; 14
    5fc4:	2c 83       	std	Y+4, r18	; 0x04
    5fc6:	1a 83       	std	Y+2, r17	; 0x02
    5fc8:	09 83       	std	Y+1, r16	; 0x01
    5fca:	97 ff       	sbrs	r25, 7
    5fcc:	02 c0       	rjmp	.+4      	; 0x5fd2 <snprintf_P+0x24>
    5fce:	80 e0       	ldi	r24, 0x00	; 0
    5fd0:	90 e8       	ldi	r25, 0x80	; 128
    5fd2:	01 97       	sbiw	r24, 0x01	; 1
    5fd4:	9e 83       	std	Y+6, r25	; 0x06
    5fd6:	8d 83       	std	Y+5, r24	; 0x05
    5fd8:	ae 01       	movw	r20, r28
    5fda:	45 5e       	subi	r20, 0xE5	; 229
    5fdc:	5f 4f       	sbci	r21, 0xFF	; 255
    5fde:	69 8d       	ldd	r22, Y+25	; 0x19
    5fe0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5fe2:	ce 01       	movw	r24, r28
    5fe4:	01 96       	adiw	r24, 0x01	; 1
    5fe6:	0e 94 07 30 	call	0x600e	; 0x600e <vfprintf>
    5fea:	4d 81       	ldd	r20, Y+5	; 0x05
    5fec:	5e 81       	ldd	r21, Y+6	; 0x06
    5fee:	57 fd       	sbrc	r21, 7
    5ff0:	0a c0       	rjmp	.+20     	; 0x6006 <snprintf_P+0x58>
    5ff2:	2f 81       	ldd	r18, Y+7	; 0x07
    5ff4:	38 85       	ldd	r19, Y+8	; 0x08
    5ff6:	42 17       	cp	r20, r18
    5ff8:	53 07       	cpc	r21, r19
    5ffa:	0c f4       	brge	.+2      	; 0x5ffe <snprintf_P+0x50>
    5ffc:	9a 01       	movw	r18, r20
    5ffe:	f8 01       	movw	r30, r16
    6000:	e2 0f       	add	r30, r18
    6002:	f3 1f       	adc	r31, r19
    6004:	10 82       	st	Z, r1
    6006:	2e 96       	adiw	r28, 0x0e	; 14
    6008:	e4 e0       	ldi	r30, 0x04	; 4
    600a:	0c 94 f4 34 	jmp	0x69e8	; 0x69e8 <__epilogue_restores__+0x1c>

0000600e <vfprintf>:
    600e:	ab e0       	ldi	r26, 0x0B	; 11
    6010:	b0 e0       	ldi	r27, 0x00	; 0
    6012:	ed e0       	ldi	r30, 0x0D	; 13
    6014:	f0 e3       	ldi	r31, 0x30	; 48
    6016:	0c 94 ca 34 	jmp	0x6994	; 0x6994 <__prologue_saves__>
    601a:	6c 01       	movw	r12, r24
    601c:	7b 01       	movw	r14, r22
    601e:	8a 01       	movw	r16, r20
    6020:	fc 01       	movw	r30, r24
    6022:	17 82       	std	Z+7, r1	; 0x07
    6024:	16 82       	std	Z+6, r1	; 0x06
    6026:	83 81       	ldd	r24, Z+3	; 0x03
    6028:	81 ff       	sbrs	r24, 1
    602a:	cc c1       	rjmp	.+920    	; 0x63c4 <vfprintf+0x3b6>
    602c:	ce 01       	movw	r24, r28
    602e:	01 96       	adiw	r24, 0x01	; 1
    6030:	3c 01       	movw	r6, r24
    6032:	f6 01       	movw	r30, r12
    6034:	93 81       	ldd	r25, Z+3	; 0x03
    6036:	f7 01       	movw	r30, r14
    6038:	93 fd       	sbrc	r25, 3
    603a:	85 91       	lpm	r24, Z+
    603c:	93 ff       	sbrs	r25, 3
    603e:	81 91       	ld	r24, Z+
    6040:	7f 01       	movw	r14, r30
    6042:	88 23       	and	r24, r24
    6044:	09 f4       	brne	.+2      	; 0x6048 <vfprintf+0x3a>
    6046:	ba c1       	rjmp	.+884    	; 0x63bc <vfprintf+0x3ae>
    6048:	85 32       	cpi	r24, 0x25	; 37
    604a:	39 f4       	brne	.+14     	; 0x605a <vfprintf+0x4c>
    604c:	93 fd       	sbrc	r25, 3
    604e:	85 91       	lpm	r24, Z+
    6050:	93 ff       	sbrs	r25, 3
    6052:	81 91       	ld	r24, Z+
    6054:	7f 01       	movw	r14, r30
    6056:	85 32       	cpi	r24, 0x25	; 37
    6058:	29 f4       	brne	.+10     	; 0x6064 <vfprintf+0x56>
    605a:	b6 01       	movw	r22, r12
    605c:	90 e0       	ldi	r25, 0x00	; 0
    605e:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    6062:	e7 cf       	rjmp	.-50     	; 0x6032 <vfprintf+0x24>
    6064:	91 2c       	mov	r9, r1
    6066:	21 2c       	mov	r2, r1
    6068:	31 2c       	mov	r3, r1
    606a:	ff e1       	ldi	r31, 0x1F	; 31
    606c:	f3 15       	cp	r31, r3
    606e:	d8 f0       	brcs	.+54     	; 0x60a6 <vfprintf+0x98>
    6070:	8b 32       	cpi	r24, 0x2B	; 43
    6072:	79 f0       	breq	.+30     	; 0x6092 <vfprintf+0x84>
    6074:	38 f4       	brcc	.+14     	; 0x6084 <vfprintf+0x76>
    6076:	80 32       	cpi	r24, 0x20	; 32
    6078:	79 f0       	breq	.+30     	; 0x6098 <vfprintf+0x8a>
    607a:	83 32       	cpi	r24, 0x23	; 35
    607c:	a1 f4       	brne	.+40     	; 0x60a6 <vfprintf+0x98>
    607e:	23 2d       	mov	r18, r3
    6080:	20 61       	ori	r18, 0x10	; 16
    6082:	1d c0       	rjmp	.+58     	; 0x60be <vfprintf+0xb0>
    6084:	8d 32       	cpi	r24, 0x2D	; 45
    6086:	61 f0       	breq	.+24     	; 0x60a0 <vfprintf+0x92>
    6088:	80 33       	cpi	r24, 0x30	; 48
    608a:	69 f4       	brne	.+26     	; 0x60a6 <vfprintf+0x98>
    608c:	23 2d       	mov	r18, r3
    608e:	21 60       	ori	r18, 0x01	; 1
    6090:	16 c0       	rjmp	.+44     	; 0x60be <vfprintf+0xb0>
    6092:	83 2d       	mov	r24, r3
    6094:	82 60       	ori	r24, 0x02	; 2
    6096:	38 2e       	mov	r3, r24
    6098:	e3 2d       	mov	r30, r3
    609a:	e4 60       	ori	r30, 0x04	; 4
    609c:	3e 2e       	mov	r3, r30
    609e:	2a c0       	rjmp	.+84     	; 0x60f4 <vfprintf+0xe6>
    60a0:	f3 2d       	mov	r31, r3
    60a2:	f8 60       	ori	r31, 0x08	; 8
    60a4:	1d c0       	rjmp	.+58     	; 0x60e0 <vfprintf+0xd2>
    60a6:	37 fc       	sbrc	r3, 7
    60a8:	2d c0       	rjmp	.+90     	; 0x6104 <vfprintf+0xf6>
    60aa:	20 ed       	ldi	r18, 0xD0	; 208
    60ac:	28 0f       	add	r18, r24
    60ae:	2a 30       	cpi	r18, 0x0A	; 10
    60b0:	40 f0       	brcs	.+16     	; 0x60c2 <vfprintf+0xb4>
    60b2:	8e 32       	cpi	r24, 0x2E	; 46
    60b4:	b9 f4       	brne	.+46     	; 0x60e4 <vfprintf+0xd6>
    60b6:	36 fc       	sbrc	r3, 6
    60b8:	81 c1       	rjmp	.+770    	; 0x63bc <vfprintf+0x3ae>
    60ba:	23 2d       	mov	r18, r3
    60bc:	20 64       	ori	r18, 0x40	; 64
    60be:	32 2e       	mov	r3, r18
    60c0:	19 c0       	rjmp	.+50     	; 0x60f4 <vfprintf+0xe6>
    60c2:	36 fe       	sbrs	r3, 6
    60c4:	06 c0       	rjmp	.+12     	; 0x60d2 <vfprintf+0xc4>
    60c6:	8a e0       	ldi	r24, 0x0A	; 10
    60c8:	98 9e       	mul	r9, r24
    60ca:	20 0d       	add	r18, r0
    60cc:	11 24       	eor	r1, r1
    60ce:	92 2e       	mov	r9, r18
    60d0:	11 c0       	rjmp	.+34     	; 0x60f4 <vfprintf+0xe6>
    60d2:	ea e0       	ldi	r30, 0x0A	; 10
    60d4:	2e 9e       	mul	r2, r30
    60d6:	20 0d       	add	r18, r0
    60d8:	11 24       	eor	r1, r1
    60da:	22 2e       	mov	r2, r18
    60dc:	f3 2d       	mov	r31, r3
    60de:	f0 62       	ori	r31, 0x20	; 32
    60e0:	3f 2e       	mov	r3, r31
    60e2:	08 c0       	rjmp	.+16     	; 0x60f4 <vfprintf+0xe6>
    60e4:	8c 36       	cpi	r24, 0x6C	; 108
    60e6:	21 f4       	brne	.+8      	; 0x60f0 <vfprintf+0xe2>
    60e8:	83 2d       	mov	r24, r3
    60ea:	80 68       	ori	r24, 0x80	; 128
    60ec:	38 2e       	mov	r3, r24
    60ee:	02 c0       	rjmp	.+4      	; 0x60f4 <vfprintf+0xe6>
    60f0:	88 36       	cpi	r24, 0x68	; 104
    60f2:	41 f4       	brne	.+16     	; 0x6104 <vfprintf+0xf6>
    60f4:	f7 01       	movw	r30, r14
    60f6:	93 fd       	sbrc	r25, 3
    60f8:	85 91       	lpm	r24, Z+
    60fa:	93 ff       	sbrs	r25, 3
    60fc:	81 91       	ld	r24, Z+
    60fe:	7f 01       	movw	r14, r30
    6100:	81 11       	cpse	r24, r1
    6102:	b3 cf       	rjmp	.-154    	; 0x606a <vfprintf+0x5c>
    6104:	98 2f       	mov	r25, r24
    6106:	9f 7d       	andi	r25, 0xDF	; 223
    6108:	95 54       	subi	r25, 0x45	; 69
    610a:	93 30       	cpi	r25, 0x03	; 3
    610c:	28 f4       	brcc	.+10     	; 0x6118 <vfprintf+0x10a>
    610e:	0c 5f       	subi	r16, 0xFC	; 252
    6110:	1f 4f       	sbci	r17, 0xFF	; 255
    6112:	9f e3       	ldi	r25, 0x3F	; 63
    6114:	99 83       	std	Y+1, r25	; 0x01
    6116:	0d c0       	rjmp	.+26     	; 0x6132 <vfprintf+0x124>
    6118:	83 36       	cpi	r24, 0x63	; 99
    611a:	31 f0       	breq	.+12     	; 0x6128 <vfprintf+0x11a>
    611c:	83 37       	cpi	r24, 0x73	; 115
    611e:	71 f0       	breq	.+28     	; 0x613c <vfprintf+0x12e>
    6120:	83 35       	cpi	r24, 0x53	; 83
    6122:	09 f0       	breq	.+2      	; 0x6126 <vfprintf+0x118>
    6124:	59 c0       	rjmp	.+178    	; 0x61d8 <vfprintf+0x1ca>
    6126:	21 c0       	rjmp	.+66     	; 0x616a <vfprintf+0x15c>
    6128:	f8 01       	movw	r30, r16
    612a:	80 81       	ld	r24, Z
    612c:	89 83       	std	Y+1, r24	; 0x01
    612e:	0e 5f       	subi	r16, 0xFE	; 254
    6130:	1f 4f       	sbci	r17, 0xFF	; 255
    6132:	88 24       	eor	r8, r8
    6134:	83 94       	inc	r8
    6136:	91 2c       	mov	r9, r1
    6138:	53 01       	movw	r10, r6
    613a:	13 c0       	rjmp	.+38     	; 0x6162 <vfprintf+0x154>
    613c:	28 01       	movw	r4, r16
    613e:	f2 e0       	ldi	r31, 0x02	; 2
    6140:	4f 0e       	add	r4, r31
    6142:	51 1c       	adc	r5, r1
    6144:	f8 01       	movw	r30, r16
    6146:	a0 80       	ld	r10, Z
    6148:	b1 80       	ldd	r11, Z+1	; 0x01
    614a:	36 fe       	sbrs	r3, 6
    614c:	03 c0       	rjmp	.+6      	; 0x6154 <vfprintf+0x146>
    614e:	69 2d       	mov	r22, r9
    6150:	70 e0       	ldi	r23, 0x00	; 0
    6152:	02 c0       	rjmp	.+4      	; 0x6158 <vfprintf+0x14a>
    6154:	6f ef       	ldi	r22, 0xFF	; 255
    6156:	7f ef       	ldi	r23, 0xFF	; 255
    6158:	c5 01       	movw	r24, r10
    615a:	0e 94 25 34 	call	0x684a	; 0x684a <strnlen>
    615e:	4c 01       	movw	r8, r24
    6160:	82 01       	movw	r16, r4
    6162:	f3 2d       	mov	r31, r3
    6164:	ff 77       	andi	r31, 0x7F	; 127
    6166:	3f 2e       	mov	r3, r31
    6168:	16 c0       	rjmp	.+44     	; 0x6196 <vfprintf+0x188>
    616a:	28 01       	movw	r4, r16
    616c:	22 e0       	ldi	r18, 0x02	; 2
    616e:	42 0e       	add	r4, r18
    6170:	51 1c       	adc	r5, r1
    6172:	f8 01       	movw	r30, r16
    6174:	a0 80       	ld	r10, Z
    6176:	b1 80       	ldd	r11, Z+1	; 0x01
    6178:	36 fe       	sbrs	r3, 6
    617a:	03 c0       	rjmp	.+6      	; 0x6182 <vfprintf+0x174>
    617c:	69 2d       	mov	r22, r9
    617e:	70 e0       	ldi	r23, 0x00	; 0
    6180:	02 c0       	rjmp	.+4      	; 0x6186 <vfprintf+0x178>
    6182:	6f ef       	ldi	r22, 0xFF	; 255
    6184:	7f ef       	ldi	r23, 0xFF	; 255
    6186:	c5 01       	movw	r24, r10
    6188:	0e 94 1a 34 	call	0x6834	; 0x6834 <strnlen_P>
    618c:	4c 01       	movw	r8, r24
    618e:	f3 2d       	mov	r31, r3
    6190:	f0 68       	ori	r31, 0x80	; 128
    6192:	3f 2e       	mov	r3, r31
    6194:	82 01       	movw	r16, r4
    6196:	33 fc       	sbrc	r3, 3
    6198:	1b c0       	rjmp	.+54     	; 0x61d0 <vfprintf+0x1c2>
    619a:	82 2d       	mov	r24, r2
    619c:	90 e0       	ldi	r25, 0x00	; 0
    619e:	88 16       	cp	r8, r24
    61a0:	99 06       	cpc	r9, r25
    61a2:	b0 f4       	brcc	.+44     	; 0x61d0 <vfprintf+0x1c2>
    61a4:	b6 01       	movw	r22, r12
    61a6:	80 e2       	ldi	r24, 0x20	; 32
    61a8:	90 e0       	ldi	r25, 0x00	; 0
    61aa:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    61ae:	2a 94       	dec	r2
    61b0:	f4 cf       	rjmp	.-24     	; 0x619a <vfprintf+0x18c>
    61b2:	f5 01       	movw	r30, r10
    61b4:	37 fc       	sbrc	r3, 7
    61b6:	85 91       	lpm	r24, Z+
    61b8:	37 fe       	sbrs	r3, 7
    61ba:	81 91       	ld	r24, Z+
    61bc:	5f 01       	movw	r10, r30
    61be:	b6 01       	movw	r22, r12
    61c0:	90 e0       	ldi	r25, 0x00	; 0
    61c2:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    61c6:	21 10       	cpse	r2, r1
    61c8:	2a 94       	dec	r2
    61ca:	21 e0       	ldi	r18, 0x01	; 1
    61cc:	82 1a       	sub	r8, r18
    61ce:	91 08       	sbc	r9, r1
    61d0:	81 14       	cp	r8, r1
    61d2:	91 04       	cpc	r9, r1
    61d4:	71 f7       	brne	.-36     	; 0x61b2 <vfprintf+0x1a4>
    61d6:	e8 c0       	rjmp	.+464    	; 0x63a8 <vfprintf+0x39a>
    61d8:	84 36       	cpi	r24, 0x64	; 100
    61da:	11 f0       	breq	.+4      	; 0x61e0 <vfprintf+0x1d2>
    61dc:	89 36       	cpi	r24, 0x69	; 105
    61de:	41 f5       	brne	.+80     	; 0x6230 <vfprintf+0x222>
    61e0:	f8 01       	movw	r30, r16
    61e2:	37 fe       	sbrs	r3, 7
    61e4:	07 c0       	rjmp	.+14     	; 0x61f4 <vfprintf+0x1e6>
    61e6:	60 81       	ld	r22, Z
    61e8:	71 81       	ldd	r23, Z+1	; 0x01
    61ea:	82 81       	ldd	r24, Z+2	; 0x02
    61ec:	93 81       	ldd	r25, Z+3	; 0x03
    61ee:	0c 5f       	subi	r16, 0xFC	; 252
    61f0:	1f 4f       	sbci	r17, 0xFF	; 255
    61f2:	08 c0       	rjmp	.+16     	; 0x6204 <vfprintf+0x1f6>
    61f4:	60 81       	ld	r22, Z
    61f6:	71 81       	ldd	r23, Z+1	; 0x01
    61f8:	07 2e       	mov	r0, r23
    61fa:	00 0c       	add	r0, r0
    61fc:	88 0b       	sbc	r24, r24
    61fe:	99 0b       	sbc	r25, r25
    6200:	0e 5f       	subi	r16, 0xFE	; 254
    6202:	1f 4f       	sbci	r17, 0xFF	; 255
    6204:	f3 2d       	mov	r31, r3
    6206:	ff 76       	andi	r31, 0x6F	; 111
    6208:	3f 2e       	mov	r3, r31
    620a:	97 ff       	sbrs	r25, 7
    620c:	09 c0       	rjmp	.+18     	; 0x6220 <vfprintf+0x212>
    620e:	90 95       	com	r25
    6210:	80 95       	com	r24
    6212:	70 95       	com	r23
    6214:	61 95       	neg	r22
    6216:	7f 4f       	sbci	r23, 0xFF	; 255
    6218:	8f 4f       	sbci	r24, 0xFF	; 255
    621a:	9f 4f       	sbci	r25, 0xFF	; 255
    621c:	f0 68       	ori	r31, 0x80	; 128
    621e:	3f 2e       	mov	r3, r31
    6220:	2a e0       	ldi	r18, 0x0A	; 10
    6222:	30 e0       	ldi	r19, 0x00	; 0
    6224:	a3 01       	movw	r20, r6
    6226:	0e 94 6c 34 	call	0x68d8	; 0x68d8 <__ultoa_invert>
    622a:	88 2e       	mov	r8, r24
    622c:	86 18       	sub	r8, r6
    622e:	45 c0       	rjmp	.+138    	; 0x62ba <vfprintf+0x2ac>
    6230:	85 37       	cpi	r24, 0x75	; 117
    6232:	31 f4       	brne	.+12     	; 0x6240 <vfprintf+0x232>
    6234:	23 2d       	mov	r18, r3
    6236:	2f 7e       	andi	r18, 0xEF	; 239
    6238:	b2 2e       	mov	r11, r18
    623a:	2a e0       	ldi	r18, 0x0A	; 10
    623c:	30 e0       	ldi	r19, 0x00	; 0
    623e:	25 c0       	rjmp	.+74     	; 0x628a <vfprintf+0x27c>
    6240:	93 2d       	mov	r25, r3
    6242:	99 7f       	andi	r25, 0xF9	; 249
    6244:	b9 2e       	mov	r11, r25
    6246:	8f 36       	cpi	r24, 0x6F	; 111
    6248:	c1 f0       	breq	.+48     	; 0x627a <vfprintf+0x26c>
    624a:	18 f4       	brcc	.+6      	; 0x6252 <vfprintf+0x244>
    624c:	88 35       	cpi	r24, 0x58	; 88
    624e:	79 f0       	breq	.+30     	; 0x626e <vfprintf+0x260>
    6250:	b5 c0       	rjmp	.+362    	; 0x63bc <vfprintf+0x3ae>
    6252:	80 37       	cpi	r24, 0x70	; 112
    6254:	19 f0       	breq	.+6      	; 0x625c <vfprintf+0x24e>
    6256:	88 37       	cpi	r24, 0x78	; 120
    6258:	21 f0       	breq	.+8      	; 0x6262 <vfprintf+0x254>
    625a:	b0 c0       	rjmp	.+352    	; 0x63bc <vfprintf+0x3ae>
    625c:	e9 2f       	mov	r30, r25
    625e:	e0 61       	ori	r30, 0x10	; 16
    6260:	be 2e       	mov	r11, r30
    6262:	b4 fe       	sbrs	r11, 4
    6264:	0d c0       	rjmp	.+26     	; 0x6280 <vfprintf+0x272>
    6266:	fb 2d       	mov	r31, r11
    6268:	f4 60       	ori	r31, 0x04	; 4
    626a:	bf 2e       	mov	r11, r31
    626c:	09 c0       	rjmp	.+18     	; 0x6280 <vfprintf+0x272>
    626e:	34 fe       	sbrs	r3, 4
    6270:	0a c0       	rjmp	.+20     	; 0x6286 <vfprintf+0x278>
    6272:	29 2f       	mov	r18, r25
    6274:	26 60       	ori	r18, 0x06	; 6
    6276:	b2 2e       	mov	r11, r18
    6278:	06 c0       	rjmp	.+12     	; 0x6286 <vfprintf+0x278>
    627a:	28 e0       	ldi	r18, 0x08	; 8
    627c:	30 e0       	ldi	r19, 0x00	; 0
    627e:	05 c0       	rjmp	.+10     	; 0x628a <vfprintf+0x27c>
    6280:	20 e1       	ldi	r18, 0x10	; 16
    6282:	30 e0       	ldi	r19, 0x00	; 0
    6284:	02 c0       	rjmp	.+4      	; 0x628a <vfprintf+0x27c>
    6286:	20 e1       	ldi	r18, 0x10	; 16
    6288:	32 e0       	ldi	r19, 0x02	; 2
    628a:	f8 01       	movw	r30, r16
    628c:	b7 fe       	sbrs	r11, 7
    628e:	07 c0       	rjmp	.+14     	; 0x629e <vfprintf+0x290>
    6290:	60 81       	ld	r22, Z
    6292:	71 81       	ldd	r23, Z+1	; 0x01
    6294:	82 81       	ldd	r24, Z+2	; 0x02
    6296:	93 81       	ldd	r25, Z+3	; 0x03
    6298:	0c 5f       	subi	r16, 0xFC	; 252
    629a:	1f 4f       	sbci	r17, 0xFF	; 255
    629c:	06 c0       	rjmp	.+12     	; 0x62aa <vfprintf+0x29c>
    629e:	60 81       	ld	r22, Z
    62a0:	71 81       	ldd	r23, Z+1	; 0x01
    62a2:	80 e0       	ldi	r24, 0x00	; 0
    62a4:	90 e0       	ldi	r25, 0x00	; 0
    62a6:	0e 5f       	subi	r16, 0xFE	; 254
    62a8:	1f 4f       	sbci	r17, 0xFF	; 255
    62aa:	a3 01       	movw	r20, r6
    62ac:	0e 94 6c 34 	call	0x68d8	; 0x68d8 <__ultoa_invert>
    62b0:	88 2e       	mov	r8, r24
    62b2:	86 18       	sub	r8, r6
    62b4:	fb 2d       	mov	r31, r11
    62b6:	ff 77       	andi	r31, 0x7F	; 127
    62b8:	3f 2e       	mov	r3, r31
    62ba:	36 fe       	sbrs	r3, 6
    62bc:	0d c0       	rjmp	.+26     	; 0x62d8 <vfprintf+0x2ca>
    62be:	23 2d       	mov	r18, r3
    62c0:	2e 7f       	andi	r18, 0xFE	; 254
    62c2:	a2 2e       	mov	r10, r18
    62c4:	89 14       	cp	r8, r9
    62c6:	58 f4       	brcc	.+22     	; 0x62de <vfprintf+0x2d0>
    62c8:	34 fe       	sbrs	r3, 4
    62ca:	0b c0       	rjmp	.+22     	; 0x62e2 <vfprintf+0x2d4>
    62cc:	32 fc       	sbrc	r3, 2
    62ce:	09 c0       	rjmp	.+18     	; 0x62e2 <vfprintf+0x2d4>
    62d0:	83 2d       	mov	r24, r3
    62d2:	8e 7e       	andi	r24, 0xEE	; 238
    62d4:	a8 2e       	mov	r10, r24
    62d6:	05 c0       	rjmp	.+10     	; 0x62e2 <vfprintf+0x2d4>
    62d8:	b8 2c       	mov	r11, r8
    62da:	a3 2c       	mov	r10, r3
    62dc:	03 c0       	rjmp	.+6      	; 0x62e4 <vfprintf+0x2d6>
    62de:	b8 2c       	mov	r11, r8
    62e0:	01 c0       	rjmp	.+2      	; 0x62e4 <vfprintf+0x2d6>
    62e2:	b9 2c       	mov	r11, r9
    62e4:	a4 fe       	sbrs	r10, 4
    62e6:	0f c0       	rjmp	.+30     	; 0x6306 <vfprintf+0x2f8>
    62e8:	fe 01       	movw	r30, r28
    62ea:	e8 0d       	add	r30, r8
    62ec:	f1 1d       	adc	r31, r1
    62ee:	80 81       	ld	r24, Z
    62f0:	80 33       	cpi	r24, 0x30	; 48
    62f2:	21 f4       	brne	.+8      	; 0x62fc <vfprintf+0x2ee>
    62f4:	9a 2d       	mov	r25, r10
    62f6:	99 7e       	andi	r25, 0xE9	; 233
    62f8:	a9 2e       	mov	r10, r25
    62fa:	09 c0       	rjmp	.+18     	; 0x630e <vfprintf+0x300>
    62fc:	a2 fe       	sbrs	r10, 2
    62fe:	06 c0       	rjmp	.+12     	; 0x630c <vfprintf+0x2fe>
    6300:	b3 94       	inc	r11
    6302:	b3 94       	inc	r11
    6304:	04 c0       	rjmp	.+8      	; 0x630e <vfprintf+0x300>
    6306:	8a 2d       	mov	r24, r10
    6308:	86 78       	andi	r24, 0x86	; 134
    630a:	09 f0       	breq	.+2      	; 0x630e <vfprintf+0x300>
    630c:	b3 94       	inc	r11
    630e:	a3 fc       	sbrc	r10, 3
    6310:	11 c0       	rjmp	.+34     	; 0x6334 <vfprintf+0x326>
    6312:	a0 fe       	sbrs	r10, 0
    6314:	06 c0       	rjmp	.+12     	; 0x6322 <vfprintf+0x314>
    6316:	b2 14       	cp	r11, r2
    6318:	88 f4       	brcc	.+34     	; 0x633c <vfprintf+0x32e>
    631a:	28 0c       	add	r2, r8
    631c:	92 2c       	mov	r9, r2
    631e:	9b 18       	sub	r9, r11
    6320:	0e c0       	rjmp	.+28     	; 0x633e <vfprintf+0x330>
    6322:	b2 14       	cp	r11, r2
    6324:	60 f4       	brcc	.+24     	; 0x633e <vfprintf+0x330>
    6326:	b6 01       	movw	r22, r12
    6328:	80 e2       	ldi	r24, 0x20	; 32
    632a:	90 e0       	ldi	r25, 0x00	; 0
    632c:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    6330:	b3 94       	inc	r11
    6332:	f7 cf       	rjmp	.-18     	; 0x6322 <vfprintf+0x314>
    6334:	b2 14       	cp	r11, r2
    6336:	18 f4       	brcc	.+6      	; 0x633e <vfprintf+0x330>
    6338:	2b 18       	sub	r2, r11
    633a:	02 c0       	rjmp	.+4      	; 0x6340 <vfprintf+0x332>
    633c:	98 2c       	mov	r9, r8
    633e:	21 2c       	mov	r2, r1
    6340:	a4 fe       	sbrs	r10, 4
    6342:	10 c0       	rjmp	.+32     	; 0x6364 <vfprintf+0x356>
    6344:	b6 01       	movw	r22, r12
    6346:	80 e3       	ldi	r24, 0x30	; 48
    6348:	90 e0       	ldi	r25, 0x00	; 0
    634a:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    634e:	a2 fe       	sbrs	r10, 2
    6350:	17 c0       	rjmp	.+46     	; 0x6380 <vfprintf+0x372>
    6352:	a1 fc       	sbrc	r10, 1
    6354:	03 c0       	rjmp	.+6      	; 0x635c <vfprintf+0x34e>
    6356:	88 e7       	ldi	r24, 0x78	; 120
    6358:	90 e0       	ldi	r25, 0x00	; 0
    635a:	02 c0       	rjmp	.+4      	; 0x6360 <vfprintf+0x352>
    635c:	88 e5       	ldi	r24, 0x58	; 88
    635e:	90 e0       	ldi	r25, 0x00	; 0
    6360:	b6 01       	movw	r22, r12
    6362:	0c c0       	rjmp	.+24     	; 0x637c <vfprintf+0x36e>
    6364:	8a 2d       	mov	r24, r10
    6366:	86 78       	andi	r24, 0x86	; 134
    6368:	59 f0       	breq	.+22     	; 0x6380 <vfprintf+0x372>
    636a:	a1 fe       	sbrs	r10, 1
    636c:	02 c0       	rjmp	.+4      	; 0x6372 <vfprintf+0x364>
    636e:	8b e2       	ldi	r24, 0x2B	; 43
    6370:	01 c0       	rjmp	.+2      	; 0x6374 <vfprintf+0x366>
    6372:	80 e2       	ldi	r24, 0x20	; 32
    6374:	a7 fc       	sbrc	r10, 7
    6376:	8d e2       	ldi	r24, 0x2D	; 45
    6378:	b6 01       	movw	r22, r12
    637a:	90 e0       	ldi	r25, 0x00	; 0
    637c:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    6380:	89 14       	cp	r8, r9
    6382:	38 f4       	brcc	.+14     	; 0x6392 <vfprintf+0x384>
    6384:	b6 01       	movw	r22, r12
    6386:	80 e3       	ldi	r24, 0x30	; 48
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    638e:	9a 94       	dec	r9
    6390:	f7 cf       	rjmp	.-18     	; 0x6380 <vfprintf+0x372>
    6392:	8a 94       	dec	r8
    6394:	f3 01       	movw	r30, r6
    6396:	e8 0d       	add	r30, r8
    6398:	f1 1d       	adc	r31, r1
    639a:	80 81       	ld	r24, Z
    639c:	b6 01       	movw	r22, r12
    639e:	90 e0       	ldi	r25, 0x00	; 0
    63a0:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    63a4:	81 10       	cpse	r8, r1
    63a6:	f5 cf       	rjmp	.-22     	; 0x6392 <vfprintf+0x384>
    63a8:	22 20       	and	r2, r2
    63aa:	09 f4       	brne	.+2      	; 0x63ae <vfprintf+0x3a0>
    63ac:	42 ce       	rjmp	.-892    	; 0x6032 <vfprintf+0x24>
    63ae:	b6 01       	movw	r22, r12
    63b0:	80 e2       	ldi	r24, 0x20	; 32
    63b2:	90 e0       	ldi	r25, 0x00	; 0
    63b4:	0e 94 30 34 	call	0x6860	; 0x6860 <fputc>
    63b8:	2a 94       	dec	r2
    63ba:	f6 cf       	rjmp	.-20     	; 0x63a8 <vfprintf+0x39a>
    63bc:	f6 01       	movw	r30, r12
    63be:	86 81       	ldd	r24, Z+6	; 0x06
    63c0:	97 81       	ldd	r25, Z+7	; 0x07
    63c2:	02 c0       	rjmp	.+4      	; 0x63c8 <vfprintf+0x3ba>
    63c4:	8f ef       	ldi	r24, 0xFF	; 255
    63c6:	9f ef       	ldi	r25, 0xFF	; 255
    63c8:	2b 96       	adiw	r28, 0x0b	; 11
    63ca:	e2 e1       	ldi	r30, 0x12	; 18
    63cc:	0c 94 e6 34 	jmp	0x69cc	; 0x69cc <__epilogue_restores__>

000063d0 <dtoa_prf>:
    63d0:	a9 e0       	ldi	r26, 0x09	; 9
    63d2:	b0 e0       	ldi	r27, 0x00	; 0
    63d4:	ee ee       	ldi	r30, 0xEE	; 238
    63d6:	f1 e3       	ldi	r31, 0x31	; 49
    63d8:	0c 94 d0 34 	jmp	0x69a0	; 0x69a0 <__prologue_saves__+0xc>
    63dc:	6a 01       	movw	r12, r20
    63de:	12 2f       	mov	r17, r18
    63e0:	b0 2e       	mov	r11, r16
    63e2:	2b e3       	ldi	r18, 0x3B	; 59
    63e4:	20 17       	cp	r18, r16
    63e6:	20 f0       	brcs	.+8      	; 0x63f0 <dtoa_prf+0x20>
    63e8:	ff 24       	eor	r15, r15
    63ea:	f3 94       	inc	r15
    63ec:	f0 0e       	add	r15, r16
    63ee:	02 c0       	rjmp	.+4      	; 0x63f4 <dtoa_prf+0x24>
    63f0:	2c e3       	ldi	r18, 0x3C	; 60
    63f2:	f2 2e       	mov	r15, r18
    63f4:	0f 2d       	mov	r16, r15
    63f6:	27 e0       	ldi	r18, 0x07	; 7
    63f8:	ae 01       	movw	r20, r28
    63fa:	4f 5f       	subi	r20, 0xFF	; 255
    63fc:	5f 4f       	sbci	r21, 0xFF	; 255
    63fe:	0e 94 42 33 	call	0x6684	; 0x6684 <__ftoa_engine>
    6402:	bc 01       	movw	r22, r24
    6404:	49 81       	ldd	r20, Y+1	; 0x01
    6406:	84 2f       	mov	r24, r20
    6408:	89 70       	andi	r24, 0x09	; 9
    640a:	81 30       	cpi	r24, 0x01	; 1
    640c:	31 f0       	breq	.+12     	; 0x641a <dtoa_prf+0x4a>
    640e:	e1 fc       	sbrc	r14, 1
    6410:	06 c0       	rjmp	.+12     	; 0x641e <dtoa_prf+0x4e>
    6412:	e0 fe       	sbrs	r14, 0
    6414:	06 c0       	rjmp	.+12     	; 0x6422 <dtoa_prf+0x52>
    6416:	90 e2       	ldi	r25, 0x20	; 32
    6418:	05 c0       	rjmp	.+10     	; 0x6424 <dtoa_prf+0x54>
    641a:	9d e2       	ldi	r25, 0x2D	; 45
    641c:	03 c0       	rjmp	.+6      	; 0x6424 <dtoa_prf+0x54>
    641e:	9b e2       	ldi	r25, 0x2B	; 43
    6420:	01 c0       	rjmp	.+2      	; 0x6424 <dtoa_prf+0x54>
    6422:	90 e0       	ldi	r25, 0x00	; 0
    6424:	5e 2d       	mov	r21, r14
    6426:	50 71       	andi	r21, 0x10	; 16
    6428:	43 ff       	sbrs	r20, 3
    642a:	3c c0       	rjmp	.+120    	; 0x64a4 <dtoa_prf+0xd4>
    642c:	91 11       	cpse	r25, r1
    642e:	02 c0       	rjmp	.+4      	; 0x6434 <dtoa_prf+0x64>
    6430:	83 e0       	ldi	r24, 0x03	; 3
    6432:	01 c0       	rjmp	.+2      	; 0x6436 <dtoa_prf+0x66>
    6434:	84 e0       	ldi	r24, 0x04	; 4
    6436:	81 17       	cp	r24, r17
    6438:	18 f4       	brcc	.+6      	; 0x6440 <dtoa_prf+0x70>
    643a:	21 2f       	mov	r18, r17
    643c:	28 1b       	sub	r18, r24
    643e:	01 c0       	rjmp	.+2      	; 0x6442 <dtoa_prf+0x72>
    6440:	20 e0       	ldi	r18, 0x00	; 0
    6442:	51 11       	cpse	r21, r1
    6444:	0b c0       	rjmp	.+22     	; 0x645c <dtoa_prf+0x8c>
    6446:	f6 01       	movw	r30, r12
    6448:	82 2f       	mov	r24, r18
    644a:	30 e2       	ldi	r19, 0x20	; 32
    644c:	88 23       	and	r24, r24
    644e:	19 f0       	breq	.+6      	; 0x6456 <dtoa_prf+0x86>
    6450:	31 93       	st	Z+, r19
    6452:	81 50       	subi	r24, 0x01	; 1
    6454:	fb cf       	rjmp	.-10     	; 0x644c <dtoa_prf+0x7c>
    6456:	c2 0e       	add	r12, r18
    6458:	d1 1c       	adc	r13, r1
    645a:	20 e0       	ldi	r18, 0x00	; 0
    645c:	99 23       	and	r25, r25
    645e:	29 f0       	breq	.+10     	; 0x646a <dtoa_prf+0x9a>
    6460:	d6 01       	movw	r26, r12
    6462:	9c 93       	st	X, r25
    6464:	f6 01       	movw	r30, r12
    6466:	31 96       	adiw	r30, 0x01	; 1
    6468:	6f 01       	movw	r12, r30
    646a:	c6 01       	movw	r24, r12
    646c:	03 96       	adiw	r24, 0x03	; 3
    646e:	e2 fe       	sbrs	r14, 2
    6470:	0a c0       	rjmp	.+20     	; 0x6486 <dtoa_prf+0xb6>
    6472:	3e e4       	ldi	r19, 0x4E	; 78
    6474:	d6 01       	movw	r26, r12
    6476:	3c 93       	st	X, r19
    6478:	41 e4       	ldi	r20, 0x41	; 65
    647a:	11 96       	adiw	r26, 0x01	; 1
    647c:	4c 93       	st	X, r20
    647e:	11 97       	sbiw	r26, 0x01	; 1
    6480:	12 96       	adiw	r26, 0x02	; 2
    6482:	3c 93       	st	X, r19
    6484:	06 c0       	rjmp	.+12     	; 0x6492 <dtoa_prf+0xc2>
    6486:	3e e6       	ldi	r19, 0x6E	; 110
    6488:	f6 01       	movw	r30, r12
    648a:	30 83       	st	Z, r19
    648c:	41 e6       	ldi	r20, 0x61	; 97
    648e:	41 83       	std	Z+1, r20	; 0x01
    6490:	32 83       	std	Z+2, r19	; 0x02
    6492:	fc 01       	movw	r30, r24
    6494:	32 2f       	mov	r19, r18
    6496:	40 e2       	ldi	r20, 0x20	; 32
    6498:	33 23       	and	r19, r19
    649a:	09 f4       	brne	.+2      	; 0x649e <dtoa_prf+0xce>
    649c:	42 c0       	rjmp	.+132    	; 0x6522 <dtoa_prf+0x152>
    649e:	41 93       	st	Z+, r20
    64a0:	31 50       	subi	r19, 0x01	; 1
    64a2:	fa cf       	rjmp	.-12     	; 0x6498 <dtoa_prf+0xc8>
    64a4:	42 ff       	sbrs	r20, 2
    64a6:	44 c0       	rjmp	.+136    	; 0x6530 <dtoa_prf+0x160>
    64a8:	91 11       	cpse	r25, r1
    64aa:	02 c0       	rjmp	.+4      	; 0x64b0 <dtoa_prf+0xe0>
    64ac:	83 e0       	ldi	r24, 0x03	; 3
    64ae:	01 c0       	rjmp	.+2      	; 0x64b2 <dtoa_prf+0xe2>
    64b0:	84 e0       	ldi	r24, 0x04	; 4
    64b2:	81 17       	cp	r24, r17
    64b4:	18 f4       	brcc	.+6      	; 0x64bc <dtoa_prf+0xec>
    64b6:	21 2f       	mov	r18, r17
    64b8:	28 1b       	sub	r18, r24
    64ba:	01 c0       	rjmp	.+2      	; 0x64be <dtoa_prf+0xee>
    64bc:	20 e0       	ldi	r18, 0x00	; 0
    64be:	51 11       	cpse	r21, r1
    64c0:	0b c0       	rjmp	.+22     	; 0x64d8 <dtoa_prf+0x108>
    64c2:	f6 01       	movw	r30, r12
    64c4:	82 2f       	mov	r24, r18
    64c6:	30 e2       	ldi	r19, 0x20	; 32
    64c8:	88 23       	and	r24, r24
    64ca:	19 f0       	breq	.+6      	; 0x64d2 <dtoa_prf+0x102>
    64cc:	31 93       	st	Z+, r19
    64ce:	81 50       	subi	r24, 0x01	; 1
    64d0:	fb cf       	rjmp	.-10     	; 0x64c8 <dtoa_prf+0xf8>
    64d2:	c2 0e       	add	r12, r18
    64d4:	d1 1c       	adc	r13, r1
    64d6:	20 e0       	ldi	r18, 0x00	; 0
    64d8:	99 23       	and	r25, r25
    64da:	29 f0       	breq	.+10     	; 0x64e6 <dtoa_prf+0x116>
    64dc:	d6 01       	movw	r26, r12
    64de:	9c 93       	st	X, r25
    64e0:	f6 01       	movw	r30, r12
    64e2:	31 96       	adiw	r30, 0x01	; 1
    64e4:	6f 01       	movw	r12, r30
    64e6:	c6 01       	movw	r24, r12
    64e8:	03 96       	adiw	r24, 0x03	; 3
    64ea:	e2 fe       	sbrs	r14, 2
    64ec:	0b c0       	rjmp	.+22     	; 0x6504 <dtoa_prf+0x134>
    64ee:	39 e4       	ldi	r19, 0x49	; 73
    64f0:	d6 01       	movw	r26, r12
    64f2:	3c 93       	st	X, r19
    64f4:	3e e4       	ldi	r19, 0x4E	; 78
    64f6:	11 96       	adiw	r26, 0x01	; 1
    64f8:	3c 93       	st	X, r19
    64fa:	11 97       	sbiw	r26, 0x01	; 1
    64fc:	36 e4       	ldi	r19, 0x46	; 70
    64fe:	12 96       	adiw	r26, 0x02	; 2
    6500:	3c 93       	st	X, r19
    6502:	07 c0       	rjmp	.+14     	; 0x6512 <dtoa_prf+0x142>
    6504:	39 e6       	ldi	r19, 0x69	; 105
    6506:	f6 01       	movw	r30, r12
    6508:	30 83       	st	Z, r19
    650a:	3e e6       	ldi	r19, 0x6E	; 110
    650c:	31 83       	std	Z+1, r19	; 0x01
    650e:	36 e6       	ldi	r19, 0x66	; 102
    6510:	32 83       	std	Z+2, r19	; 0x02
    6512:	fc 01       	movw	r30, r24
    6514:	32 2f       	mov	r19, r18
    6516:	40 e2       	ldi	r20, 0x20	; 32
    6518:	33 23       	and	r19, r19
    651a:	19 f0       	breq	.+6      	; 0x6522 <dtoa_prf+0x152>
    651c:	41 93       	st	Z+, r20
    651e:	31 50       	subi	r19, 0x01	; 1
    6520:	fb cf       	rjmp	.-10     	; 0x6518 <dtoa_prf+0x148>
    6522:	fc 01       	movw	r30, r24
    6524:	e2 0f       	add	r30, r18
    6526:	f1 1d       	adc	r31, r1
    6528:	10 82       	st	Z, r1
    652a:	8e ef       	ldi	r24, 0xFE	; 254
    652c:	9f ef       	ldi	r25, 0xFF	; 255
    652e:	a6 c0       	rjmp	.+332    	; 0x667c <dtoa_prf+0x2ac>
    6530:	21 e0       	ldi	r18, 0x01	; 1
    6532:	30 e0       	ldi	r19, 0x00	; 0
    6534:	91 11       	cpse	r25, r1
    6536:	02 c0       	rjmp	.+4      	; 0x653c <dtoa_prf+0x16c>
    6538:	20 e0       	ldi	r18, 0x00	; 0
    653a:	30 e0       	ldi	r19, 0x00	; 0
    653c:	16 16       	cp	r1, r22
    653e:	17 06       	cpc	r1, r23
    6540:	1c f4       	brge	.+6      	; 0x6548 <dtoa_prf+0x178>
    6542:	fb 01       	movw	r30, r22
    6544:	31 96       	adiw	r30, 0x01	; 1
    6546:	02 c0       	rjmp	.+4      	; 0x654c <dtoa_prf+0x17c>
    6548:	e1 e0       	ldi	r30, 0x01	; 1
    654a:	f0 e0       	ldi	r31, 0x00	; 0
    654c:	2e 0f       	add	r18, r30
    654e:	3f 1f       	adc	r19, r31
    6550:	bb 20       	and	r11, r11
    6552:	21 f0       	breq	.+8      	; 0x655c <dtoa_prf+0x18c>
    6554:	eb 2d       	mov	r30, r11
    6556:	f0 e0       	ldi	r31, 0x00	; 0
    6558:	31 96       	adiw	r30, 0x01	; 1
    655a:	02 c0       	rjmp	.+4      	; 0x6560 <dtoa_prf+0x190>
    655c:	e0 e0       	ldi	r30, 0x00	; 0
    655e:	f0 e0       	ldi	r31, 0x00	; 0
    6560:	2e 0f       	add	r18, r30
    6562:	3f 1f       	adc	r19, r31
    6564:	e1 2f       	mov	r30, r17
    6566:	f0 e0       	ldi	r31, 0x00	; 0
    6568:	2e 17       	cp	r18, r30
    656a:	3f 07       	cpc	r19, r31
    656c:	1c f4       	brge	.+6      	; 0x6574 <dtoa_prf+0x1a4>
    656e:	12 1b       	sub	r17, r18
    6570:	21 2f       	mov	r18, r17
    6572:	01 c0       	rjmp	.+2      	; 0x6576 <dtoa_prf+0x1a6>
    6574:	20 e0       	ldi	r18, 0x00	; 0
    6576:	8e 2d       	mov	r24, r14
    6578:	88 71       	andi	r24, 0x18	; 24
    657a:	59 f4       	brne	.+22     	; 0x6592 <dtoa_prf+0x1c2>
    657c:	f6 01       	movw	r30, r12
    657e:	82 2f       	mov	r24, r18
    6580:	30 e2       	ldi	r19, 0x20	; 32
    6582:	88 23       	and	r24, r24
    6584:	19 f0       	breq	.+6      	; 0x658c <dtoa_prf+0x1bc>
    6586:	31 93       	st	Z+, r19
    6588:	81 50       	subi	r24, 0x01	; 1
    658a:	fb cf       	rjmp	.-10     	; 0x6582 <dtoa_prf+0x1b2>
    658c:	c2 0e       	add	r12, r18
    658e:	d1 1c       	adc	r13, r1
    6590:	20 e0       	ldi	r18, 0x00	; 0
    6592:	99 23       	and	r25, r25
    6594:	29 f0       	breq	.+10     	; 0x65a0 <dtoa_prf+0x1d0>
    6596:	d6 01       	movw	r26, r12
    6598:	9c 93       	st	X, r25
    659a:	f6 01       	movw	r30, r12
    659c:	31 96       	adiw	r30, 0x01	; 1
    659e:	6f 01       	movw	r12, r30
    65a0:	51 11       	cpse	r21, r1
    65a2:	0b c0       	rjmp	.+22     	; 0x65ba <dtoa_prf+0x1ea>
    65a4:	f6 01       	movw	r30, r12
    65a6:	82 2f       	mov	r24, r18
    65a8:	90 e3       	ldi	r25, 0x30	; 48
    65aa:	88 23       	and	r24, r24
    65ac:	19 f0       	breq	.+6      	; 0x65b4 <dtoa_prf+0x1e4>
    65ae:	91 93       	st	Z+, r25
    65b0:	81 50       	subi	r24, 0x01	; 1
    65b2:	fb cf       	rjmp	.-10     	; 0x65aa <dtoa_prf+0x1da>
    65b4:	c2 0e       	add	r12, r18
    65b6:	d1 1c       	adc	r13, r1
    65b8:	20 e0       	ldi	r18, 0x00	; 0
    65ba:	0f 2d       	mov	r16, r15
    65bc:	06 0f       	add	r16, r22
    65be:	9a 81       	ldd	r25, Y+2	; 0x02
    65c0:	34 2f       	mov	r19, r20
    65c2:	30 71       	andi	r19, 0x10	; 16
    65c4:	44 ff       	sbrs	r20, 4
    65c6:	03 c0       	rjmp	.+6      	; 0x65ce <dtoa_prf+0x1fe>
    65c8:	91 33       	cpi	r25, 0x31	; 49
    65ca:	09 f4       	brne	.+2      	; 0x65ce <dtoa_prf+0x1fe>
    65cc:	01 50       	subi	r16, 0x01	; 1
    65ce:	10 16       	cp	r1, r16
    65d0:	24 f4       	brge	.+8      	; 0x65da <dtoa_prf+0x20a>
    65d2:	09 30       	cpi	r16, 0x09	; 9
    65d4:	18 f0       	brcs	.+6      	; 0x65dc <dtoa_prf+0x20c>
    65d6:	08 e0       	ldi	r16, 0x08	; 8
    65d8:	01 c0       	rjmp	.+2      	; 0x65dc <dtoa_prf+0x20c>
    65da:	01 e0       	ldi	r16, 0x01	; 1
    65dc:	ab 01       	movw	r20, r22
    65de:	77 ff       	sbrs	r23, 7
    65e0:	02 c0       	rjmp	.+4      	; 0x65e6 <dtoa_prf+0x216>
    65e2:	40 e0       	ldi	r20, 0x00	; 0
    65e4:	50 e0       	ldi	r21, 0x00	; 0
    65e6:	fb 01       	movw	r30, r22
    65e8:	e4 1b       	sub	r30, r20
    65ea:	f5 0b       	sbc	r31, r21
    65ec:	a1 e0       	ldi	r26, 0x01	; 1
    65ee:	b0 e0       	ldi	r27, 0x00	; 0
    65f0:	ac 0f       	add	r26, r28
    65f2:	bd 1f       	adc	r27, r29
    65f4:	ea 0f       	add	r30, r26
    65f6:	fb 1f       	adc	r31, r27
    65f8:	8e e2       	ldi	r24, 0x2E	; 46
    65fa:	a8 2e       	mov	r10, r24
    65fc:	4b 01       	movw	r8, r22
    65fe:	80 1a       	sub	r8, r16
    6600:	91 08       	sbc	r9, r1
    6602:	0b 2d       	mov	r16, r11
    6604:	10 e0       	ldi	r17, 0x00	; 0
    6606:	11 95       	neg	r17
    6608:	01 95       	neg	r16
    660a:	11 09       	sbc	r17, r1
    660c:	4f 3f       	cpi	r20, 0xFF	; 255
    660e:	bf ef       	ldi	r27, 0xFF	; 255
    6610:	5b 07       	cpc	r21, r27
    6612:	21 f4       	brne	.+8      	; 0x661c <dtoa_prf+0x24c>
    6614:	d6 01       	movw	r26, r12
    6616:	ac 92       	st	X, r10
    6618:	11 96       	adiw	r26, 0x01	; 1
    661a:	6d 01       	movw	r12, r26
    661c:	64 17       	cp	r22, r20
    661e:	75 07       	cpc	r23, r21
    6620:	2c f0       	brlt	.+10     	; 0x662c <dtoa_prf+0x25c>
    6622:	84 16       	cp	r8, r20
    6624:	95 06       	cpc	r9, r21
    6626:	14 f4       	brge	.+4      	; 0x662c <dtoa_prf+0x25c>
    6628:	81 81       	ldd	r24, Z+1	; 0x01
    662a:	01 c0       	rjmp	.+2      	; 0x662e <dtoa_prf+0x25e>
    662c:	80 e3       	ldi	r24, 0x30	; 48
    662e:	41 50       	subi	r20, 0x01	; 1
    6630:	51 09       	sbc	r21, r1
    6632:	31 96       	adiw	r30, 0x01	; 1
    6634:	d6 01       	movw	r26, r12
    6636:	11 96       	adiw	r26, 0x01	; 1
    6638:	7d 01       	movw	r14, r26
    663a:	40 17       	cp	r20, r16
    663c:	51 07       	cpc	r21, r17
    663e:	24 f0       	brlt	.+8      	; 0x6648 <dtoa_prf+0x278>
    6640:	d6 01       	movw	r26, r12
    6642:	8c 93       	st	X, r24
    6644:	67 01       	movw	r12, r14
    6646:	e2 cf       	rjmp	.-60     	; 0x660c <dtoa_prf+0x23c>
    6648:	64 17       	cp	r22, r20
    664a:	75 07       	cpc	r23, r21
    664c:	39 f4       	brne	.+14     	; 0x665c <dtoa_prf+0x28c>
    664e:	96 33       	cpi	r25, 0x36	; 54
    6650:	20 f4       	brcc	.+8      	; 0x665a <dtoa_prf+0x28a>
    6652:	95 33       	cpi	r25, 0x35	; 53
    6654:	19 f4       	brne	.+6      	; 0x665c <dtoa_prf+0x28c>
    6656:	31 11       	cpse	r19, r1
    6658:	01 c0       	rjmp	.+2      	; 0x665c <dtoa_prf+0x28c>
    665a:	81 e3       	ldi	r24, 0x31	; 49
    665c:	f6 01       	movw	r30, r12
    665e:	80 83       	st	Z, r24
    6660:	f7 01       	movw	r30, r14
    6662:	82 2f       	mov	r24, r18
    6664:	90 e2       	ldi	r25, 0x20	; 32
    6666:	88 23       	and	r24, r24
    6668:	19 f0       	breq	.+6      	; 0x6670 <dtoa_prf+0x2a0>
    666a:	91 93       	st	Z+, r25
    666c:	81 50       	subi	r24, 0x01	; 1
    666e:	fb cf       	rjmp	.-10     	; 0x6666 <dtoa_prf+0x296>
    6670:	f7 01       	movw	r30, r14
    6672:	e2 0f       	add	r30, r18
    6674:	f1 1d       	adc	r31, r1
    6676:	10 82       	st	Z, r1
    6678:	80 e0       	ldi	r24, 0x00	; 0
    667a:	90 e0       	ldi	r25, 0x00	; 0
    667c:	29 96       	adiw	r28, 0x09	; 9
    667e:	ec e0       	ldi	r30, 0x0C	; 12
    6680:	0c 94 ec 34 	jmp	0x69d8	; 0x69d8 <__epilogue_restores__+0xc>

00006684 <__ftoa_engine>:
    6684:	28 30       	cpi	r18, 0x08	; 8
    6686:	08 f0       	brcs	.+2      	; 0x668a <__ftoa_engine+0x6>
    6688:	27 e0       	ldi	r18, 0x07	; 7
    668a:	33 27       	eor	r19, r19
    668c:	da 01       	movw	r26, r20
    668e:	99 0f       	add	r25, r25
    6690:	31 1d       	adc	r19, r1
    6692:	87 fd       	sbrc	r24, 7
    6694:	91 60       	ori	r25, 0x01	; 1
    6696:	00 96       	adiw	r24, 0x00	; 0
    6698:	61 05       	cpc	r22, r1
    669a:	71 05       	cpc	r23, r1
    669c:	39 f4       	brne	.+14     	; 0x66ac <__ftoa_engine+0x28>
    669e:	32 60       	ori	r19, 0x02	; 2
    66a0:	2e 5f       	subi	r18, 0xFE	; 254
    66a2:	3d 93       	st	X+, r19
    66a4:	30 e3       	ldi	r19, 0x30	; 48
    66a6:	2a 95       	dec	r18
    66a8:	e1 f7       	brne	.-8      	; 0x66a2 <__ftoa_engine+0x1e>
    66aa:	08 95       	ret
    66ac:	9f 3f       	cpi	r25, 0xFF	; 255
    66ae:	30 f0       	brcs	.+12     	; 0x66bc <__ftoa_engine+0x38>
    66b0:	80 38       	cpi	r24, 0x80	; 128
    66b2:	71 05       	cpc	r23, r1
    66b4:	61 05       	cpc	r22, r1
    66b6:	09 f0       	breq	.+2      	; 0x66ba <__ftoa_engine+0x36>
    66b8:	3c 5f       	subi	r19, 0xFC	; 252
    66ba:	3c 5f       	subi	r19, 0xFC	; 252
    66bc:	3d 93       	st	X+, r19
    66be:	91 30       	cpi	r25, 0x01	; 1
    66c0:	08 f0       	brcs	.+2      	; 0x66c4 <__ftoa_engine+0x40>
    66c2:	80 68       	ori	r24, 0x80	; 128
    66c4:	91 1d       	adc	r25, r1
    66c6:	df 93       	push	r29
    66c8:	cf 93       	push	r28
    66ca:	1f 93       	push	r17
    66cc:	0f 93       	push	r16
    66ce:	ff 92       	push	r15
    66d0:	ef 92       	push	r14
    66d2:	19 2f       	mov	r17, r25
    66d4:	98 7f       	andi	r25, 0xF8	; 248
    66d6:	96 95       	lsr	r25
    66d8:	e9 2f       	mov	r30, r25
    66da:	96 95       	lsr	r25
    66dc:	96 95       	lsr	r25
    66de:	e9 0f       	add	r30, r25
    66e0:	ff 27       	eor	r31, r31
    66e2:	ea 5b       	subi	r30, 0xBA	; 186
    66e4:	fe 4f       	sbci	r31, 0xFE	; 254
    66e6:	99 27       	eor	r25, r25
    66e8:	33 27       	eor	r19, r19
    66ea:	ee 24       	eor	r14, r14
    66ec:	ff 24       	eor	r15, r15
    66ee:	a7 01       	movw	r20, r14
    66f0:	e7 01       	movw	r28, r14
    66f2:	05 90       	lpm	r0, Z+
    66f4:	08 94       	sec
    66f6:	07 94       	ror	r0
    66f8:	28 f4       	brcc	.+10     	; 0x6704 <__ftoa_engine+0x80>
    66fa:	36 0f       	add	r19, r22
    66fc:	e7 1e       	adc	r14, r23
    66fe:	f8 1e       	adc	r15, r24
    6700:	49 1f       	adc	r20, r25
    6702:	51 1d       	adc	r21, r1
    6704:	66 0f       	add	r22, r22
    6706:	77 1f       	adc	r23, r23
    6708:	88 1f       	adc	r24, r24
    670a:	99 1f       	adc	r25, r25
    670c:	06 94       	lsr	r0
    670e:	a1 f7       	brne	.-24     	; 0x66f8 <__ftoa_engine+0x74>
    6710:	05 90       	lpm	r0, Z+
    6712:	07 94       	ror	r0
    6714:	28 f4       	brcc	.+10     	; 0x6720 <__ftoa_engine+0x9c>
    6716:	e7 0e       	add	r14, r23
    6718:	f8 1e       	adc	r15, r24
    671a:	49 1f       	adc	r20, r25
    671c:	56 1f       	adc	r21, r22
    671e:	c1 1d       	adc	r28, r1
    6720:	77 0f       	add	r23, r23
    6722:	88 1f       	adc	r24, r24
    6724:	99 1f       	adc	r25, r25
    6726:	66 1f       	adc	r22, r22
    6728:	06 94       	lsr	r0
    672a:	a1 f7       	brne	.-24     	; 0x6714 <__ftoa_engine+0x90>
    672c:	05 90       	lpm	r0, Z+
    672e:	07 94       	ror	r0
    6730:	28 f4       	brcc	.+10     	; 0x673c <__ftoa_engine+0xb8>
    6732:	f8 0e       	add	r15, r24
    6734:	49 1f       	adc	r20, r25
    6736:	56 1f       	adc	r21, r22
    6738:	c7 1f       	adc	r28, r23
    673a:	d1 1d       	adc	r29, r1
    673c:	88 0f       	add	r24, r24
    673e:	99 1f       	adc	r25, r25
    6740:	66 1f       	adc	r22, r22
    6742:	77 1f       	adc	r23, r23
    6744:	06 94       	lsr	r0
    6746:	a1 f7       	brne	.-24     	; 0x6730 <__ftoa_engine+0xac>
    6748:	05 90       	lpm	r0, Z+
    674a:	07 94       	ror	r0
    674c:	20 f4       	brcc	.+8      	; 0x6756 <__ftoa_engine+0xd2>
    674e:	49 0f       	add	r20, r25
    6750:	56 1f       	adc	r21, r22
    6752:	c7 1f       	adc	r28, r23
    6754:	d8 1f       	adc	r29, r24
    6756:	99 0f       	add	r25, r25
    6758:	66 1f       	adc	r22, r22
    675a:	77 1f       	adc	r23, r23
    675c:	88 1f       	adc	r24, r24
    675e:	06 94       	lsr	r0
    6760:	a9 f7       	brne	.-22     	; 0x674c <__ftoa_engine+0xc8>
    6762:	84 91       	lpm	r24, Z
    6764:	10 95       	com	r17
    6766:	17 70       	andi	r17, 0x07	; 7
    6768:	41 f0       	breq	.+16     	; 0x677a <__ftoa_engine+0xf6>
    676a:	d6 95       	lsr	r29
    676c:	c7 95       	ror	r28
    676e:	57 95       	ror	r21
    6770:	47 95       	ror	r20
    6772:	f7 94       	ror	r15
    6774:	e7 94       	ror	r14
    6776:	1a 95       	dec	r17
    6778:	c1 f7       	brne	.-16     	; 0x676a <__ftoa_engine+0xe6>
    677a:	ec ee       	ldi	r30, 0xEC	; 236
    677c:	f0 e0       	ldi	r31, 0x00	; 0
    677e:	68 94       	set
    6780:	15 90       	lpm	r1, Z+
    6782:	15 91       	lpm	r17, Z+
    6784:	35 91       	lpm	r19, Z+
    6786:	65 91       	lpm	r22, Z+
    6788:	95 91       	lpm	r25, Z+
    678a:	05 90       	lpm	r0, Z+
    678c:	7f e2       	ldi	r23, 0x2F	; 47
    678e:	73 95       	inc	r23
    6790:	e1 18       	sub	r14, r1
    6792:	f1 0a       	sbc	r15, r17
    6794:	43 0b       	sbc	r20, r19
    6796:	56 0b       	sbc	r21, r22
    6798:	c9 0b       	sbc	r28, r25
    679a:	d0 09       	sbc	r29, r0
    679c:	c0 f7       	brcc	.-16     	; 0x678e <__ftoa_engine+0x10a>
    679e:	e1 0c       	add	r14, r1
    67a0:	f1 1e       	adc	r15, r17
    67a2:	43 1f       	adc	r20, r19
    67a4:	56 1f       	adc	r21, r22
    67a6:	c9 1f       	adc	r28, r25
    67a8:	d0 1d       	adc	r29, r0
    67aa:	7e f4       	brtc	.+30     	; 0x67ca <__ftoa_engine+0x146>
    67ac:	70 33       	cpi	r23, 0x30	; 48
    67ae:	11 f4       	brne	.+4      	; 0x67b4 <__ftoa_engine+0x130>
    67b0:	8a 95       	dec	r24
    67b2:	e6 cf       	rjmp	.-52     	; 0x6780 <__ftoa_engine+0xfc>
    67b4:	e8 94       	clt
    67b6:	01 50       	subi	r16, 0x01	; 1
    67b8:	30 f0       	brcs	.+12     	; 0x67c6 <__ftoa_engine+0x142>
    67ba:	08 0f       	add	r16, r24
    67bc:	0a f4       	brpl	.+2      	; 0x67c0 <__ftoa_engine+0x13c>
    67be:	00 27       	eor	r16, r16
    67c0:	02 17       	cp	r16, r18
    67c2:	08 f4       	brcc	.+2      	; 0x67c6 <__ftoa_engine+0x142>
    67c4:	20 2f       	mov	r18, r16
    67c6:	23 95       	inc	r18
    67c8:	02 2f       	mov	r16, r18
    67ca:	7a 33       	cpi	r23, 0x3A	; 58
    67cc:	28 f0       	brcs	.+10     	; 0x67d8 <__ftoa_engine+0x154>
    67ce:	79 e3       	ldi	r23, 0x39	; 57
    67d0:	7d 93       	st	X+, r23
    67d2:	2a 95       	dec	r18
    67d4:	e9 f7       	brne	.-6      	; 0x67d0 <__ftoa_engine+0x14c>
    67d6:	10 c0       	rjmp	.+32     	; 0x67f8 <__ftoa_engine+0x174>
    67d8:	7d 93       	st	X+, r23
    67da:	2a 95       	dec	r18
    67dc:	89 f6       	brne	.-94     	; 0x6780 <__ftoa_engine+0xfc>
    67de:	06 94       	lsr	r0
    67e0:	97 95       	ror	r25
    67e2:	67 95       	ror	r22
    67e4:	37 95       	ror	r19
    67e6:	17 95       	ror	r17
    67e8:	17 94       	ror	r1
    67ea:	e1 18       	sub	r14, r1
    67ec:	f1 0a       	sbc	r15, r17
    67ee:	43 0b       	sbc	r20, r19
    67f0:	56 0b       	sbc	r21, r22
    67f2:	c9 0b       	sbc	r28, r25
    67f4:	d0 09       	sbc	r29, r0
    67f6:	98 f0       	brcs	.+38     	; 0x681e <__ftoa_engine+0x19a>
    67f8:	23 95       	inc	r18
    67fa:	7e 91       	ld	r23, -X
    67fc:	73 95       	inc	r23
    67fe:	7a 33       	cpi	r23, 0x3A	; 58
    6800:	08 f0       	brcs	.+2      	; 0x6804 <__ftoa_engine+0x180>
    6802:	70 e3       	ldi	r23, 0x30	; 48
    6804:	7c 93       	st	X, r23
    6806:	20 13       	cpse	r18, r16
    6808:	b8 f7       	brcc	.-18     	; 0x67f8 <__ftoa_engine+0x174>
    680a:	7e 91       	ld	r23, -X
    680c:	70 61       	ori	r23, 0x10	; 16
    680e:	7d 93       	st	X+, r23
    6810:	30 f0       	brcs	.+12     	; 0x681e <__ftoa_engine+0x19a>
    6812:	83 95       	inc	r24
    6814:	71 e3       	ldi	r23, 0x31	; 49
    6816:	7d 93       	st	X+, r23
    6818:	70 e3       	ldi	r23, 0x30	; 48
    681a:	2a 95       	dec	r18
    681c:	e1 f7       	brne	.-8      	; 0x6816 <__ftoa_engine+0x192>
    681e:	11 24       	eor	r1, r1
    6820:	ef 90       	pop	r14
    6822:	ff 90       	pop	r15
    6824:	0f 91       	pop	r16
    6826:	1f 91       	pop	r17
    6828:	cf 91       	pop	r28
    682a:	df 91       	pop	r29
    682c:	99 27       	eor	r25, r25
    682e:	87 fd       	sbrc	r24, 7
    6830:	90 95       	com	r25
    6832:	08 95       	ret

00006834 <strnlen_P>:
    6834:	fc 01       	movw	r30, r24
    6836:	05 90       	lpm	r0, Z+
    6838:	61 50       	subi	r22, 0x01	; 1
    683a:	70 40       	sbci	r23, 0x00	; 0
    683c:	01 10       	cpse	r0, r1
    683e:	d8 f7       	brcc	.-10     	; 0x6836 <strnlen_P+0x2>
    6840:	80 95       	com	r24
    6842:	90 95       	com	r25
    6844:	8e 0f       	add	r24, r30
    6846:	9f 1f       	adc	r25, r31
    6848:	08 95       	ret

0000684a <strnlen>:
    684a:	fc 01       	movw	r30, r24
    684c:	61 50       	subi	r22, 0x01	; 1
    684e:	70 40       	sbci	r23, 0x00	; 0
    6850:	01 90       	ld	r0, Z+
    6852:	01 10       	cpse	r0, r1
    6854:	d8 f7       	brcc	.-10     	; 0x684c <strnlen+0x2>
    6856:	80 95       	com	r24
    6858:	90 95       	com	r25
    685a:	8e 0f       	add	r24, r30
    685c:	9f 1f       	adc	r25, r31
    685e:	08 95       	ret

00006860 <fputc>:
    6860:	0f 93       	push	r16
    6862:	1f 93       	push	r17
    6864:	cf 93       	push	r28
    6866:	df 93       	push	r29
    6868:	fb 01       	movw	r30, r22
    686a:	23 81       	ldd	r18, Z+3	; 0x03
    686c:	21 fd       	sbrc	r18, 1
    686e:	03 c0       	rjmp	.+6      	; 0x6876 <fputc+0x16>
    6870:	8f ef       	ldi	r24, 0xFF	; 255
    6872:	9f ef       	ldi	r25, 0xFF	; 255
    6874:	2c c0       	rjmp	.+88     	; 0x68ce <fputc+0x6e>
    6876:	22 ff       	sbrs	r18, 2
    6878:	16 c0       	rjmp	.+44     	; 0x68a6 <fputc+0x46>
    687a:	46 81       	ldd	r20, Z+6	; 0x06
    687c:	57 81       	ldd	r21, Z+7	; 0x07
    687e:	24 81       	ldd	r18, Z+4	; 0x04
    6880:	35 81       	ldd	r19, Z+5	; 0x05
    6882:	42 17       	cp	r20, r18
    6884:	53 07       	cpc	r21, r19
    6886:	44 f4       	brge	.+16     	; 0x6898 <fputc+0x38>
    6888:	a0 81       	ld	r26, Z
    688a:	b1 81       	ldd	r27, Z+1	; 0x01
    688c:	9d 01       	movw	r18, r26
    688e:	2f 5f       	subi	r18, 0xFF	; 255
    6890:	3f 4f       	sbci	r19, 0xFF	; 255
    6892:	31 83       	std	Z+1, r19	; 0x01
    6894:	20 83       	st	Z, r18
    6896:	8c 93       	st	X, r24
    6898:	26 81       	ldd	r18, Z+6	; 0x06
    689a:	37 81       	ldd	r19, Z+7	; 0x07
    689c:	2f 5f       	subi	r18, 0xFF	; 255
    689e:	3f 4f       	sbci	r19, 0xFF	; 255
    68a0:	37 83       	std	Z+7, r19	; 0x07
    68a2:	26 83       	std	Z+6, r18	; 0x06
    68a4:	14 c0       	rjmp	.+40     	; 0x68ce <fputc+0x6e>
    68a6:	8b 01       	movw	r16, r22
    68a8:	ec 01       	movw	r28, r24
    68aa:	fb 01       	movw	r30, r22
    68ac:	00 84       	ldd	r0, Z+8	; 0x08
    68ae:	f1 85       	ldd	r31, Z+9	; 0x09
    68b0:	e0 2d       	mov	r30, r0
    68b2:	09 95       	icall
    68b4:	89 2b       	or	r24, r25
    68b6:	e1 f6       	brne	.-72     	; 0x6870 <fputc+0x10>
    68b8:	d8 01       	movw	r26, r16
    68ba:	16 96       	adiw	r26, 0x06	; 6
    68bc:	8d 91       	ld	r24, X+
    68be:	9c 91       	ld	r25, X
    68c0:	17 97       	sbiw	r26, 0x07	; 7
    68c2:	01 96       	adiw	r24, 0x01	; 1
    68c4:	17 96       	adiw	r26, 0x07	; 7
    68c6:	9c 93       	st	X, r25
    68c8:	8e 93       	st	-X, r24
    68ca:	16 97       	sbiw	r26, 0x06	; 6
    68cc:	ce 01       	movw	r24, r28
    68ce:	df 91       	pop	r29
    68d0:	cf 91       	pop	r28
    68d2:	1f 91       	pop	r17
    68d4:	0f 91       	pop	r16
    68d6:	08 95       	ret

000068d8 <__ultoa_invert>:
    68d8:	fa 01       	movw	r30, r20
    68da:	aa 27       	eor	r26, r26
    68dc:	28 30       	cpi	r18, 0x08	; 8
    68de:	51 f1       	breq	.+84     	; 0x6934 <__ultoa_invert+0x5c>
    68e0:	20 31       	cpi	r18, 0x10	; 16
    68e2:	81 f1       	breq	.+96     	; 0x6944 <__ultoa_invert+0x6c>
    68e4:	e8 94       	clt
    68e6:	6f 93       	push	r22
    68e8:	6e 7f       	andi	r22, 0xFE	; 254
    68ea:	6e 5f       	subi	r22, 0xFE	; 254
    68ec:	7f 4f       	sbci	r23, 0xFF	; 255
    68ee:	8f 4f       	sbci	r24, 0xFF	; 255
    68f0:	9f 4f       	sbci	r25, 0xFF	; 255
    68f2:	af 4f       	sbci	r26, 0xFF	; 255
    68f4:	b1 e0       	ldi	r27, 0x01	; 1
    68f6:	3e d0       	rcall	.+124    	; 0x6974 <__ultoa_invert+0x9c>
    68f8:	b4 e0       	ldi	r27, 0x04	; 4
    68fa:	3c d0       	rcall	.+120    	; 0x6974 <__ultoa_invert+0x9c>
    68fc:	67 0f       	add	r22, r23
    68fe:	78 1f       	adc	r23, r24
    6900:	89 1f       	adc	r24, r25
    6902:	9a 1f       	adc	r25, r26
    6904:	a1 1d       	adc	r26, r1
    6906:	68 0f       	add	r22, r24
    6908:	79 1f       	adc	r23, r25
    690a:	8a 1f       	adc	r24, r26
    690c:	91 1d       	adc	r25, r1
    690e:	a1 1d       	adc	r26, r1
    6910:	6a 0f       	add	r22, r26
    6912:	71 1d       	adc	r23, r1
    6914:	81 1d       	adc	r24, r1
    6916:	91 1d       	adc	r25, r1
    6918:	a1 1d       	adc	r26, r1
    691a:	20 d0       	rcall	.+64     	; 0x695c <__ultoa_invert+0x84>
    691c:	09 f4       	brne	.+2      	; 0x6920 <__ultoa_invert+0x48>
    691e:	68 94       	set
    6920:	3f 91       	pop	r19
    6922:	2a e0       	ldi	r18, 0x0A	; 10
    6924:	26 9f       	mul	r18, r22
    6926:	11 24       	eor	r1, r1
    6928:	30 19       	sub	r19, r0
    692a:	30 5d       	subi	r19, 0xD0	; 208
    692c:	31 93       	st	Z+, r19
    692e:	de f6       	brtc	.-74     	; 0x68e6 <__ultoa_invert+0xe>
    6930:	cf 01       	movw	r24, r30
    6932:	08 95       	ret
    6934:	46 2f       	mov	r20, r22
    6936:	47 70       	andi	r20, 0x07	; 7
    6938:	40 5d       	subi	r20, 0xD0	; 208
    693a:	41 93       	st	Z+, r20
    693c:	b3 e0       	ldi	r27, 0x03	; 3
    693e:	0f d0       	rcall	.+30     	; 0x695e <__ultoa_invert+0x86>
    6940:	c9 f7       	brne	.-14     	; 0x6934 <__ultoa_invert+0x5c>
    6942:	f6 cf       	rjmp	.-20     	; 0x6930 <__ultoa_invert+0x58>
    6944:	46 2f       	mov	r20, r22
    6946:	4f 70       	andi	r20, 0x0F	; 15
    6948:	40 5d       	subi	r20, 0xD0	; 208
    694a:	4a 33       	cpi	r20, 0x3A	; 58
    694c:	18 f0       	brcs	.+6      	; 0x6954 <__ultoa_invert+0x7c>
    694e:	49 5d       	subi	r20, 0xD9	; 217
    6950:	31 fd       	sbrc	r19, 1
    6952:	40 52       	subi	r20, 0x20	; 32
    6954:	41 93       	st	Z+, r20
    6956:	02 d0       	rcall	.+4      	; 0x695c <__ultoa_invert+0x84>
    6958:	a9 f7       	brne	.-22     	; 0x6944 <__ultoa_invert+0x6c>
    695a:	ea cf       	rjmp	.-44     	; 0x6930 <__ultoa_invert+0x58>
    695c:	b4 e0       	ldi	r27, 0x04	; 4
    695e:	a6 95       	lsr	r26
    6960:	97 95       	ror	r25
    6962:	87 95       	ror	r24
    6964:	77 95       	ror	r23
    6966:	67 95       	ror	r22
    6968:	ba 95       	dec	r27
    696a:	c9 f7       	brne	.-14     	; 0x695e <__ultoa_invert+0x86>
    696c:	00 97       	sbiw	r24, 0x00	; 0
    696e:	61 05       	cpc	r22, r1
    6970:	71 05       	cpc	r23, r1
    6972:	08 95       	ret
    6974:	9b 01       	movw	r18, r22
    6976:	ac 01       	movw	r20, r24
    6978:	0a 2e       	mov	r0, r26
    697a:	06 94       	lsr	r0
    697c:	57 95       	ror	r21
    697e:	47 95       	ror	r20
    6980:	37 95       	ror	r19
    6982:	27 95       	ror	r18
    6984:	ba 95       	dec	r27
    6986:	c9 f7       	brne	.-14     	; 0x697a <__ultoa_invert+0xa2>
    6988:	62 0f       	add	r22, r18
    698a:	73 1f       	adc	r23, r19
    698c:	84 1f       	adc	r24, r20
    698e:	95 1f       	adc	r25, r21
    6990:	a0 1d       	adc	r26, r0
    6992:	08 95       	ret

00006994 <__prologue_saves__>:
    6994:	2f 92       	push	r2
    6996:	3f 92       	push	r3
    6998:	4f 92       	push	r4
    699a:	5f 92       	push	r5
    699c:	6f 92       	push	r6
    699e:	7f 92       	push	r7
    69a0:	8f 92       	push	r8
    69a2:	9f 92       	push	r9
    69a4:	af 92       	push	r10
    69a6:	bf 92       	push	r11
    69a8:	cf 92       	push	r12
    69aa:	df 92       	push	r13
    69ac:	ef 92       	push	r14
    69ae:	ff 92       	push	r15
    69b0:	0f 93       	push	r16
    69b2:	1f 93       	push	r17
    69b4:	cf 93       	push	r28
    69b6:	df 93       	push	r29
    69b8:	cd b7       	in	r28, 0x3d	; 61
    69ba:	de b7       	in	r29, 0x3e	; 62
    69bc:	ca 1b       	sub	r28, r26
    69be:	db 0b       	sbc	r29, r27
    69c0:	0f b6       	in	r0, 0x3f	; 63
    69c2:	f8 94       	cli
    69c4:	de bf       	out	0x3e, r29	; 62
    69c6:	0f be       	out	0x3f, r0	; 63
    69c8:	cd bf       	out	0x3d, r28	; 61
    69ca:	09 94       	ijmp

000069cc <__epilogue_restores__>:
    69cc:	2a 88       	ldd	r2, Y+18	; 0x12
    69ce:	39 88       	ldd	r3, Y+17	; 0x11
    69d0:	48 88       	ldd	r4, Y+16	; 0x10
    69d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    69d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    69d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    69d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    69da:	9b 84       	ldd	r9, Y+11	; 0x0b
    69dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    69de:	b9 84       	ldd	r11, Y+9	; 0x09
    69e0:	c8 84       	ldd	r12, Y+8	; 0x08
    69e2:	df 80       	ldd	r13, Y+7	; 0x07
    69e4:	ee 80       	ldd	r14, Y+6	; 0x06
    69e6:	fd 80       	ldd	r15, Y+5	; 0x05
    69e8:	0c 81       	ldd	r16, Y+4	; 0x04
    69ea:	1b 81       	ldd	r17, Y+3	; 0x03
    69ec:	aa 81       	ldd	r26, Y+2	; 0x02
    69ee:	b9 81       	ldd	r27, Y+1	; 0x01
    69f0:	ce 0f       	add	r28, r30
    69f2:	d1 1d       	adc	r29, r1
    69f4:	0f b6       	in	r0, 0x3f	; 63
    69f6:	f8 94       	cli
    69f8:	de bf       	out	0x3e, r29	; 62
    69fa:	0f be       	out	0x3f, r0	; 63
    69fc:	cd bf       	out	0x3d, r28	; 61
    69fe:	ed 01       	movw	r28, r26
    6a00:	08 95       	ret

00006a02 <_exit>:
    6a02:	f8 94       	cli

00006a04 <__stop_program>:
    6a04:	ff cf       	rjmp	.-2      	; 0x6a04 <__stop_program>
